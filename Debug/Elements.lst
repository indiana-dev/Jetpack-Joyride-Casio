SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\ALEX\Desktop\Jetpack Joyride Casio - LastIndev\Elements.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c     1    #include "include.h"
      Elements.c     2    
      Elements.c     3    Pieces *piece = NULL;
      Elements.c     4    Zappeurs zappeur[5];
      Elements.c     5    Lasers laser[6];
      Elements.c     6    Missiles missile[6];
      Elements.c     7    Jetons jeton;
      Elements.c     8    
      Elements.c     9    static const unsigned char vehiculesX[2][12] = {
      Elements.c    10    {4,1,2,0,2,1,6,1,5,1,5},
      Elements.c    11    {16,22,21,7,11,22,20,20,26,17,16,16}
      Elements.c    12    };
      Elements.c    13    static const unsigned char vehiculesY[2][12] = {
      Elements.c    14    {1,1,1,1,1,1,1,1,1,1,1,1},
      Elements.c    15    {14,17,18,14,15,12,19,16,13,17,14,14}
      Elements.c    16    };
      Elements.c    17    
      Elements.c    18    static const unsigned char coinPatterns[19][45] = { // patterns des pieces
      Elements.c    19    {0xE3, 0x8E, 0x38, 0xE3, 0x80, 0x71, 0xC7, 0x1C, 0x71, 0xC0, 0x38, 0xE3, 0x8E, 0x38, 0xE0, 0x71, 0xC7, 0x1
                         +C, 0x71, 0xC0, 0xE3, 0x8E, 0x38, 0xE3, 0x80},
      Elements.c    20    {0x7F, 0x00, 0x1F, 0xC0, 0xFF, 0x80, 0x3F, 0xE0, 0x7F, 0x00, 0x1F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x7
                         +F, 0xC0, 0x00, 0x00, 0x3F, 0x80, 0x00},
      Elements.c    21    {0x73, 0x3A, 0x4E, 0xA8, 0x84, 0x93, 0x50, 0xA8, 0x84, 0x92, 0xDE, 0xA8, 0x84, 0x92, 0x42, 0x00, 0x73, 0x3
                         +A, 0x5E, 0xA8},
      Elements.c    22    {0x63, 0x00, 0x94, 0x80, 0x94, 0x00, 0xE4, 0x00, 0x84, 0x80, 0x83, 0x00},
      Elements.c    23    {0x7F, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x7
                         +F, 0xC0, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x1F, 0
                         +xC0},
      Elements.c    24    {0xAA, 0xA0, 0x55, 0x40, 0xAA, 0xA0, 0x55, 0x40, 0xAA, 0xA0, 0x55, 0x40, 0xAA, 0xA0, 0x55, 0x40, 0xAA, 0xA
                         +0},
      Elements.c    25    {0x7F, 0xFC, 0xFF, 0xFE, 0x7F, 0xFC},
      Elements.c    26    {0x6C, 0xFE, 0xFE, 0x7C, 0x38, 0x10},
      Elements.c    27    {0xF0, 0x03, 0xC0, 0x00, 0x08, 0x04, 0x20, 0x00, 0x04, 0x08, 0x10, 0x00, 0x02, 0x10, 0x08, 0x00, 0x01, 0xE
                         +0, 0x07, 0x80},
      Elements.c    28    {0xFC, 0x00, 0x1F, 0x80, 0x03, 0x80, 0xE0, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x0
                         +8, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x03, 0x80, 0xE0, 0x00, 0xFC, 0x00, 0x1F, 0
                         +x80},
      Elements.c    29    {0xF3, 0x39, 0xC9, 0x94, 0xA5, 0x29, 0xE7, 0xBD, 0xEF, 0x94, 0xA9, 0x42, 0xF4, 0xA5, 0x22},
      Elements.c    30    {0x03, 0x00, 0x03, 0x00, 0x18, 0x60, 0x18, 0x60, 0xC3, 0x0C, 0xC3, 0x0C, 0x18, 0x60, 0x18, 0x60, 0x03, 0x0
                         +0, 0x03, 0x00},
      Elements.c    31    {0x02, 0x00, 0x03, 0x00, 0x03, 0x80, 0xFF, 0xC0, 0xFF, 0xE0, 0xFF, 0xC0, 0x03, 0x80, 0x03, 0x00, 0x02, 0x0
                         +0},
      Elements.c    32    {0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x3E, 0x0F, 0x80, 0x00, 0x07, 0xC0, 0x00, 0x7C, 0x00, 0xF8, 0x00, 0x0
                         +0, 0x03, 0xE0},
      Elements.c    33    {0xAA, 0xAA, 0xAA, 0xA0, 0xAA, 0xAA, 0xAA, 0xA0},
      Elements.c    34    {0xF8, 0x7C, 0x3E, 0x1F, 0x3E, 0x7C, 0xF8},
      Elements.c    35    {0xFF, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x1F, 0xE0},
      Elements.c    36    {0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
      Elements.c    37    {0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0
                         +0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE}
      Elements.c    38    };
      Elements.c    39    
      Elements.c    40    static const unsigned short laserPattern[17][8] = { // patterns des lasers
      Elements.c    41    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c    42        {70,70,0,0,0,0,50,130}, // niveau facile
      Elements.c    43        {0,0,70,70,0,0,50,130},
      Elements.c    44        {0,0,0,0,70,70,50,130},
      Elements.c    45        {0,0,70,70,70,70,50,130},
      Elements.c    46        {70,70,70,70,0,0,50,130},
      Elements.c    47        {0,0,70,0,0,0,50,130},
      Elements.c    48        {0,0,0,70,0,0,50,130},
      Elements.c    49        {70,0,0,0,0,0,50,288},
      Elements.c    50        {0,0,0,0,0,70,50,288},
      Elements.c    51    
      Elements.c    52        {70,70,140,140,210,210,50,260}, // niveau moyen
      Elements.c    53        {70,999,140,140,999,70,50,190},
      Elements.c    54        {70,0,0,0,0,70,50,130},
      Elements.c    55        {70,110,150,190,230,270,30,300},
      Elements.c    56        {70,70,170,170,120,120,50,220},
      Elements.c    57    
      Elements.c    58        {120,210,310,260,160,70,30,340}, // niveau difficile
      Elements.c    59        {70,0,0,0,0,70,50,164},
      Elements.c    60        {70,0,0,0,0,70,50,312},
      Elements.c    61    };
      Elements.c    62    
      Elements.c    63    int pieceCount, lastPiece;
      Elements.c    64    int chosenPattern;
      Elements.c    65    int vehiculeHitbox;
      Elements.c    66    
      Elements.c    67    int RTC_getTicks()
P   00000000              _RTC_getTicks:                   ; function: RTC_getTicks
                                                           ; frame size=8
    00000000 4F22                   STS.L       PR,@-R15
      Elements.c    68    {
      Elements.c    69         return (*SysCall)(0, 0, 0, 0, 0x3B);
    00000002 E23B                   MOV         #59,R2
    00000004 D330                   MOV.L       L1281+2,R3 ; __$SysCall
    00000006 E700                   MOV         #0,R7
    00000008 6032                   MOV.L       @R3,R0
    0000000A 6673                   MOV         R7,R6
    0000000C 2F26                   MOV.L       R2,@-R15
    0000000E 6573                   MOV         R7,R5
    00000010 400B                   JSR         @R0
    00000012 6473                   MOV         R7,R4
      Elements.c    70    }
    00000014 7F04                   ADD         #4,R15
    00000016 4F26                   LDS.L       @R15+,PR
    00000018 000B                   RTS
    0000001A 0009                   NOP
      Elements.c    71    
      Elements.c    72    void setFPS(int fpsNB) // régulateur de fps
    0000001C              _setFPS:                         ; function: setFPS
                                                           ; frame size=16
    0000001C 2FE6                   MOV.L       R14,@-R15
    0000001E 2FD6                   MOV.L       R13,@-R15
    00000020 4F22                   STS.L       PR,@-R15
    00000022 7FFC                   ADD         #-4,R15
    00000024 DD29                   MOV.L       L1281+6,R13; __$fpsCount$605
    00000026 2F42                   MOV.L       R4,@R15
    00000028 DE29                   MOV.L       L1281+10,R14; __$fps$604
      Elements.c    73    {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c    74        static unsigned int fps, fpsCount;
      Elements.c    75    
      Elements.c    76        do fps = RTC_getTicks();
    0000002A              L976:                             
    0000002A BFE9                   BSR         _RTC_getTicks
    0000002C 0009                   NOP
    0000002E 2E02                   MOV.L       R0,@R14
      Elements.c    77        while(fps < fpsCount+fpsNB);
    00000030 63D2                   MOV.L       @R13,R3
    00000032 62F2                   MOV.L       @R15,R2
    00000034 61E2                   MOV.L       @R14,R1
    00000036 323C                   ADD         R3,R2
    00000038 3122                   CMP/HS      R2,R1
    0000003A 8BF6                   BF          L976
      Elements.c    78    
      Elements.c    79        fpsCount = RTC_getTicks();
    0000003C BFE0                   BSR         _RTC_getTicks
    0000003E 0009                   NOP
    00000040 2D02                   MOV.L       R0,@R13
      Elements.c    80    }
    00000042 7F04                   ADD         #4,R15
    00000044 4F26                   LDS.L       @R15+,PR
    00000046 6DF6                   MOV.L       @R15+,R13
    00000048 000B                   RTS
    0000004A 6EF6                   MOV.L       @R15+,R14
      Elements.c    81    
      Elements.c    82    void dsInfo(int distance, int money)
    0000004C              _dsInfo:                         ; function: dsInfo
                                                           ; frame size=36
    0000004C 2FE6                   MOV.L       R14,@-R15
    0000004E 4F22                   STS.L       PR,@-R15
      Elements.c    83    {
      Elements.c    84        char text[6];
      Elements.c    85    
      Elements.c    86        sprintf(text,"%dM",distance);
    00000050 D320                   MOV.L       L1281+14,R3; L610
    00000052 7FF4                   ADD         #-12,R15
    00000054 D220                   MOV.L       L1281+18,R2; _sprintf
    00000056 6EF3                   MOV         R15,R14
    00000058 2F52                   MOV.L       R5,@R15
    0000005A 7E04                   ADD         #4,R14
    0000005C 2F46                   MOV.L       R4,@-R15
    0000005E 2F36                   MOV.L       R3,@-R15
    00000060 420B                   JSR         @R2
    00000062 64E3                   MOV         R14,R4
      Elements.c    87        PrintMini(0,0,text,0);
    00000064 D31D                   MOV.L       L1281+22,R3; _PrintMini
    00000066 E700                   MOV         #0,R7
    00000068 66E3                   MOV         R14,R6
    0000006A 6573                   MOV         R7,R5
    0000006C 430B                   JSR         @R3
    0000006E 6473                   MOV         R7,R4
      Elements.c    88        sprintf(text,"%d$",money);
    00000070 52F2                   MOV.L       @(8,R15),R2
    00000072 2F26                   MOV.L       R2,@-R15
    00000074 D31A                   MOV.L       L1281+26,R3; L611
    00000076 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000078 D217                   MOV.L       L1281+18,R2; _sprintf
    0000007A 420B                   JSR         @R2
    0000007C 64E3                   MOV         R14,R4
      Elements.c    89        PrintMini(0,6,text,0);
    0000007E E700                   MOV         #0,R7
    00000080 D316                   MOV.L       L1281+22,R3; _PrintMini
    00000082 66E3                   MOV         R14,R6
    00000084 E506                   MOV         #6,R5
    00000086 430B                   JSR         @R3
    00000088 6473                   MOV         R7,R4
      Elements.c    90    }
    0000008A 7F1C                   ADD         #28,R15
    0000008C 4F26                   LDS.L       @R15+,PR
    0000008E 000B                   RTS
    00000090 6EF6                   MOV.L       @R15+,R14
      Elements.c    91    
      Elements.c    92    void changerHitbox(int newHitbox)
    00000092              _changerHitbox:                  ; function: changerHitbox
                                                           ; frame size=0
      Elements.c    93    {
      Elements.c    94        vehiculeHitbox = newHitbox;
    00000092 D314                   MOV.L       L1281+30,R3; _vehiculeHitbox
      Elements.c    95    }
    00000094 000B                   RTS
    00000096 2342                   MOV.L       R4,@R3
      Elements.c    96    
      Elements.c    97    void initAll()
    00000098              _initAll:                        ; function: initAll
                                                           ; frame size=4
    00000098 4F22                   STS.L       PR,@-R15
      Elements.c    98    {
      Elements.c    99        initPieces();
    0000009A B00E                   BSR         _initPieces
    0000009C 0009                   NOP
      Elements.c   100        initZappeurs();
    0000009E B3DB                   BSR         _initZappeurs
    000000A0 0009                   NOP
      Elements.c   101        initLasers();
    000000A2 D211                   MOV.L       L1281+34,R2; _initLasers
    000000A4 420B                   JSR         @R2
    000000A6 0009                   NOP
      Elements.c   102        initMissiles();
    000000A8 D110                   MOV.L       L1281+38,R1; _initMissiles
    000000AA 410B                   JSR         @R1
    000000AC 0009                   NOP
      Elements.c   103        initBox();
    000000AE D210                   MOV.L       L1281+42,R2; _initBox
    000000B0 420B                   JSR         @R2
    000000B2 0009                   NOP
      Elements.c   104        initJeton();
    000000B4 D10F                   MOV.L       L1281+46,R1; _initJeton
    000000B6 412B                   JMP         @R1
    000000B8 4F26                   LDS.L       @R15+,PR
      Elements.c   105    }
      Elements.c   106    
      Elements.c   107    void initPieces()
    000000BA              _initPieces:                     ; function: initPieces




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=0
      Elements.c   108    {
      Elements.c   109        pieceCount = 0;
    000000BA E400                   MOV         #0,R4
    000000BC D30E                   MOV.L       L1281+50,R3; _pieceCount
    000000BE 2342                   MOV.L       R4,@R3
      Elements.c   110        lastPiece = 0;
    000000C0 D20E                   MOV.L       L1281+54,R2; _lastPiece
      Elements.c   111    }
    000000C2 000B                   RTS
    000000C4 2242                   MOV.L       R4,@R2
    000000C6              L1281:                            
    000000C6 0000                   .DATA.W     0
    000000C8 <00000000>             .DATA.L     __$SysCall
    000000CC <00000000>             .DATA.L     __$fpsCount$605
    000000D0 <00000000>             .DATA.L     __$fps$604
    000000D4 <00000000>             .DATA.L     L610
    000000D8 <00000000>             .DATA.L     _sprintf
    000000DC <00000000>             .DATA.L     _PrintMini
    000000E0 <00000000>             .DATA.L     L611
    000000E4 <00000000>             .DATA.L     _vehiculeHitbox
    000000E8 <00000000>             .DATA.L     _initLasers
    000000EC <00000000>             .DATA.L     _initMissiles
    000000F0 <00000000>             .DATA.L     _initBox
    000000F4 <00000000>             .DATA.L     _initJeton
    000000F8 <00000000>             .DATA.L     _pieceCount
    000000FC <00000000>             .DATA.L     _lastPiece
      Elements.c   112    int genererPieces()
    00000100              _genererPieces:                  ; function: genererPieces
                                                           ; frame size=76
                                                           ; used runtime library name:
                                                           ; __divls, __modls, __itos
    00000100 2FE6                   MOV.L       R14,@-R15
    00000102 2FD6                   MOV.L       R13,@-R15
    00000104 2FC6                   MOV.L       R12,@-R15
    00000106 2FB6                   MOV.L       R11,@-R15
    00000108 2FA6                   MOV.L       R10,@-R15
    0000010A 2F96                   MOV.L       R9,@-R15
    0000010C 2F86                   MOV.L       R8,@-R15
      Elements.c   113    {
      Elements.c   114        int largeur, hauteur, tabIndex, pattern, allocSize, maxY, randY, c;
      Elements.c   115    
      Elements.c   116        pieceCount = 0;
    0000010E E900                   MOV         #0,R9
    00000110 DE0D                   MOV.L       L1282+2,R14; _pieceCount
    00000112 4F22                   STS.L       PR,@-R15
    00000114 4F12                   STS.L       MACL,@-R15
    00000116 7FDC                   ADD         #-36,R15
      Elements.c   117        maxY = 0;
      Elements.c   118        pattern = rand() %19;
    00000118 D30C                   MOV.L       L1282+6,R3 ; _rand
    0000011A 2E92                   MOV.L       R9,@R14
    0000011C 430B                   JSR         @R3
    0000011E 1F95                   MOV.L       R9,@(20,R15)
    00000120 D20B                   MOV.L       L1282+10,R2; __modls
    00000122 6103                   MOV         R0,R1
    00000124 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000126 E013                   MOV         #19,R0
    00000128 6803                   MOV         R0,R8
      Elements.c   119    
      Elements.c   120        switch(pattern) // on choisit aleatoirement un pattern et on definit ses proprietes
    0000012A EA06                   MOV         #6,R10
    0000012C E709                   MOV         #9,R7
    0000012E E602                   MOV         #2,R6
    00000130 E504                   MOV         #4,R5
    00000132 E405                   MOV         #5,R4
    00000134 E113                   MOV         #19,R1
    00000136 3012                   CMP/HS      R1,R0
    00000138 8968                   BT          L977
    0000013A 4000                   SHLL        R0
    0000013C 6103                   MOV         R0,R1
    0000013E C705                   MOVA        L1284,R0
    00000140 001D                   MOV.W       @(R0,R1),R0
    00000142 0023                   BRAF        R0
    00000144 0009                   NOP
    00000146              L1283:                            
    00000146              L1282:                            
    00000146 0000                   .DATA.W     0
    00000148 <00000000>             .DATA.L     _pieceCount
    0000014C <00000000>             .DATA.L     _rand
    00000150 <00000000>             .DATA.L     __modls
    00000154              L1284:
    00000154 0034                   .DATA.W     L940-L1283
    00000156 003C                   .DATA.W     L941-L1283
    00000158 0042                   .DATA.W     L942-L1283
    0000015A 004A                   .DATA.W     L943-L1283
    0000015C 0052                   .DATA.W     L944-L1283
    0000015E 005A                   .DATA.W     L945-L1283
    00000160 0062                   .DATA.W     L946-L1283
    00000162 006A                   .DATA.W     L947-L1283
    00000164 0072                   .DATA.W     L948-L1283
    00000166 007A                   .DATA.W     L949-L1283
    00000168 0082                   .DATA.W     L950-L1283
    0000016A 008A                   .DATA.W     L951-L1283
    0000016C 0092                   .DATA.W     L952-L1283
    0000016E 009A                   .DATA.W     L953-L1283
    00000170 00A0                   .DATA.W     L954-L1283
    00000172 00A8                   .DATA.W     L955-L1283
    00000174 00B0                   .DATA.W     L956-L1283
    00000176 00B8                   .DATA.W     L957-L1283
    00000178 00C0                   .DATA.W     L958-L1283
      Elements.c   121        {
      Elements.c   122            case 0: largeur = 5, hauteur = 5, allocSize = 90; break;
    0000017A              L940:                            ; case label 
    0000017A 6D43                   MOV         R4,R13
    0000017C 6C43                   MOV         R4,R12
    0000017E A045                   BRA         L977
    00000180 EB5A                   MOV         #90,R11
    00000182              L941:                            ; case label 
      Elements.c   123            case 1: largeur = 4, hauteur = 6, allocSize = 69; break;
    00000182 6D53                   MOV         R5,R13
    00000184 A00A                   BRA         L1276
    00000186 6CA3                   MOV         R10,R12
    00000188              L942:                            ; case label 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   124            case 2: largeur = 4, hauteur = 5, allocSize = 65; break;
    00000188 6D53                   MOV         R5,R13
    0000018A 6C43                   MOV         R4,R12
    0000018C A03E                   BRA         L977
    0000018E EB41                   MOV         #65,R11
    00000190              L943:                            ; case label 
      Elements.c   125            case 3: largeur = 2, hauteur = 6, allocSize = 21; break;
    00000190 6D63                   MOV         R6,R13
    00000192 6CA3                   MOV         R10,R12
    00000194 A03A                   BRA         L977
    00000196 EB15                   MOV         #21,R11
    00000198              L944:                            ; case label 
      Elements.c   126            case 4: largeur = 4, hauteur = 9, allocSize = 69; break;
    00000198 6D53                   MOV         R5,R13
    0000019A 6C73                   MOV         R7,R12
    0000019C              L1276:                            
    0000019C A036                   BRA         L977
    0000019E EB45                   MOV         #69,R11
    000001A0              L945:                            ; case label 
      Elements.c   127            case 5: largeur = 2, hauteur = 9, allocSize = 50; break;
    000001A0 6D63                   MOV         R6,R13
    000001A2 6C73                   MOV         R7,R12
    000001A4 A032                   BRA         L977
    000001A6 EB32                   MOV         #50,R11
    000001A8              L946:                            ; case label 
      Elements.c   128            case 6: largeur = 2, hauteur = 3, allocSize = 41; break;
    000001A8 6D63                   MOV         R6,R13
    000001AA EC03                   MOV         #3,R12
    000001AC A02E                   BRA         L977
    000001AE EB29                   MOV         #41,R11
    000001B0              L947:                            ; case label 
      Elements.c   129            case 7: largeur = 1, hauteur = 6, allocSize = 27; break;
    000001B0 ED01                   MOV         #1,R13
    000001B2 6CA3                   MOV         R10,R12
    000001B4 A02A                   BRA         L977
    000001B6 EB1B                   MOV         #27,R11
    000001B8              L948:                            ; case label 
      Elements.c   130            case 8: largeur = 4, hauteur = 5, allocSize = 25; break;
    000001B8 6D53                   MOV         R5,R13
    000001BA 6C43                   MOV         R4,R12
    000001BC A026                   BRA         L977
    000001BE EB19                   MOV         #25,R11
    000001C0              L949:                            ; case label 
      Elements.c   131            case 9: largeur = 4, hauteur = 9, allocSize = 49; break;
    000001C0 6D53                   MOV         R5,R13
    000001C2 6C73                   MOV         R7,R12
    000001C4 A022                   BRA         L977
    000001C6 EB31                   MOV         #49,R11
    000001C8              L950:                            ; case label 
      Elements.c   132            case 10: largeur = 3, hauteur = 5, allocSize = 63; break;
    000001C8 ED03                   MOV         #3,R13
    000001CA 6C43                   MOV         R4,R12
    000001CC A01E                   BRA         L977
    000001CE EB3F                   MOV         #63,R11
    000001D0              L951:                            ; case label 
      Elements.c   133            case 11: largeur = 2, hauteur = 10, allocSize = 36; break;
    000001D0 6D63                   MOV         R6,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001D2 EC0A                   MOV         #10,R12
    000001D4 A01A                   BRA         L977
    000001D6 EB24                   MOV         #36,R11
    000001D8              L952:                            ; case label 
      Elements.c   134            case 12: largeur = 2, hauteur = 9, allocSize = 43; break;
    000001D8 6D63                   MOV         R6,R13
    000001DA 6C73                   MOV         R7,R12
    000001DC A016                   BRA         L977
    000001DE EB2B                   MOV         #43,R11
    000001E0              L953:                            ; case label 
      Elements.c   135            case 13: largeur = 5, hauteur = 4, allocSize = 35; break;
    000001E0 6D43                   MOV         R4,R13
    000001E2 A006                   BRA         L1277
    000001E4 6C53                   MOV         R5,R12
    000001E6              L954:                            ; case label 
      Elements.c   136            case 14: largeur = 4, hauteur = 2, allocSize = 28; break;
    000001E6 6D53                   MOV         R5,R13
    000001E8 6C63                   MOV         R6,R12
    000001EA A00F                   BRA         L977
    000001EC EB1C                   MOV         #28,R11
    000001EE              L955:                            ; case label 
      Elements.c   137            case 15: largeur = 1, hauteur = 7, allocSize = 35; break;
    000001EE ED01                   MOV         #1,R13
    000001F0 EC07                   MOV         #7,R12
    000001F2              L1277:                            
    000001F2 A00B                   BRA         L977
    000001F4 EB23                   MOV         #35,R11
    000001F6              L956:                            ; case label 
      Elements.c   138            case 16: largeur = 5, hauteur = 3, allocSize = 32; break;
    000001F6 6D43                   MOV         R4,R13
    000001F8 EC03                   MOV         #3,R12
    000001FA A007                   BRA         L977
    000001FC EB20                   MOV         #32,R11
    000001FE              L957:                            ; case label 
      Elements.c   139            case 17: largeur = 1, hauteur = 5, allocSize = 40; break;
    000001FE ED01                   MOV         #1,R13
    00000200 6C43                   MOV         R4,R12
    00000202 A003                   BRA         L977
    00000204 EB28                   MOV         #40,R11
    00000206              L958:                            ; case label 
      Elements.c   140            case 18: largeur = 5, hauteur = 5, allocSize = 34; break;
    00000206 6D43                   MOV         R4,R13
    00000208 6C43                   MOV         R4,R12
    0000020A EB22                   MOV         #34,R11
    0000020C              L977:                             
      Elements.c   141        }
      Elements.c   142            piece = (Pieces*)realloc(piece, allocSize * sizeof(Pieces)); // on realloue la memoire
    0000020C DA10                   MOV.L       L1285,R10  ; _piece
    0000020E 65B3                   MOV         R11,R5
    00000210 D210                   MOV.L       L1285+4,R2 ; _realloc
    00000212 4508                   SHLL2       R5
    00000214 4508                   SHLL2       R5
    00000216 420B                   JSR         @R2
    00000218 64A2                   MOV.L       @R10,R4
      Elements.c   143    
      Elements.c   144            randY = rand()%(61-6*hauteur);
    0000021A D30F                   MOV.L       L1285+8,R3 ; _rand




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000021C 430B                   JSR         @R3
    0000021E 2A02                   MOV.L       R0,@R10
    00000220 62C3                   MOV         R12,R2
    00000222 63C3                   MOV         R12,R3
    00000224 4200                   SHLL        R2
    00000226 4308                   SHLL2       R3
    00000228 323C                   ADD         R3,R2
    0000022A E13D                   MOV         #61,R1
    0000022C 3128                   SUB         R2,R1
    0000022E 6313                   MOV         R1,R3
    00000230 D20A                   MOV.L       L1285+12,R2; __modls
    00000232 6103                   MOV         R0,R1
    00000234 420B                   JSR         @R2
    00000236 6033                   MOV         R3,R0
    00000238 1F06                   MOV.L       R0,@(24,R15)
    0000023A E32D                   MOV         #45,R3
    0000023C D208                   MOV.L       L1285+16,R2; __$coinPatterns
      Elements.c   145    
      Elements.c   146            for(tabIndex = 0; tabIndex < (hauteur*largeur); tabIndex++) // algorithme qui definit les coordonn
                         +es de chaque piece
    0000023E 2F92                   MOV.L       R9,@R15
    00000240 0DC7                   MUL.L       R12,R13
    00000242 0C1A                   STS         MACL,R12
    00000244 1FC8                   MOV.L       R12,@(32,R15)
    00000246 0837                   MUL.L       R3,R8
    00000248 081A                   STS         MACL,R8
    0000024A 328C                   ADD         R8,R2
    0000024C A084                   BRA         L978
    0000024E 1F27                   MOV.L       R2,@(28,R15)
    00000250              L1285:                            
    00000250 <00000000>             .DATA.L     _piece
    00000254 <00000000>             .DATA.L     _realloc
    00000258 <00000000>             .DATA.L     _rand
    0000025C <00000000>             .DATA.L     __modls
    00000260 <00000000>             .DATA.L     __$coinPatterns
    00000264              L979:                             
      Elements.c   147                for(c=0; c<8; c++)
    00000264 1F91                   MOV.L       R9,@(4,R15)
    00000266 65F2                   MOV.L       @R15,R5
    00000268 D34E                   MOV.L       L1286+4,R3 ; __modls
    0000026A 6153                   MOV         R5,R1
    0000026C 430B                   JSR         @R3
    0000026E 60D3                   MOV         R13,R0
    00000270 52F7                   MOV.L       @(28,R15),R2
    00000272 6153                   MOV         R5,R1
    00000274 6303                   MOV         R0,R3
    00000276 4000                   SHLL        R0
    00000278 303C                   ADD         R3,R0
    0000027A 4008                   SHLL2       R0
    0000027C 9390                   MOV.W       L1286,R3   ; H'0082
    0000027E E807                   MOV         #7,R8
    00000280 4008                   SHLL2       R0
    00000282 6403                   MOV         R0,R4
    00000284 343C                   ADD         R3,R4
    00000286 6B43                   MOV         R4,R11
    00000288 D347                   MOV.L       L1286+8,R3 ; __divls
    0000028A 6C43                   MOV         R4,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000028C 325C                   ADD         R5,R2
    0000028E 1F22                   MOV.L       R2,@(8,R15)
    00000290 430B                   JSR         @R3
    00000292 60D3                   MOV         R13,R0
    00000294 53F6                   MOV.L       @(24,R15),R3
    00000296 6103                   MOV         R0,R1
    00000298 4000                   SHLL        R0
    0000029A 4108                   SHLL2       R1
    0000029C 301C                   ADD         R1,R0
    0000029E 303C                   ADD         R3,R0
    000002A0 1F03                   MOV.L       R0,@(12,R15)
    000002A2              L980:                             
      Elements.c   148                    if((coinPatterns[pattern][tabIndex]>> (7-c)) & 1)
    000002A2 638B                   NEG         R8,R3
    000002A4 50F2                   MOV.L       @(8,R15),R0
    000002A6 6000                   MOV.B       @R0,R0
    000002A8 600C                   EXTU.B      R0,R0
    000002AA 403D                   SHLD        R3,R0
    000002AC C801                   TST         #1,R0
    000002AE 8947                   BT          L981
      Elements.c   149                    {
      Elements.c   150                        piece[pieceCount].x = 130 + (tabIndex%largeur)*(6*8) + c*6;
    000002B0 63E2                   MOV.L       @R14,R3
    000002B2 4308                   SHLL2       R3
    000002B4 62A2                   MOV.L       @R10,R2
    000002B6 4308                   SHLL2       R3
    000002B8 D13C                   MOV.L       L1286+12,R1; __itos
    000002BA 332C                   ADD         R2,R3
    000002BC 410B                   JSR         @R1
    000002BE 60C3                   MOV         R12,R0
    000002C0 2302                   MOV.L       R0,@R3
      Elements.c   151                        piece[pieceCount].y = tabIndex/largeur * 6 + randY;
    000002C2 63E2                   MOV.L       @R14,R3
    000002C4 62A2                   MOV.L       @R10,R2
    000002C6 4308                   SHLL2       R3
    000002C8 51F3                   MOV.L       @(12,R15),R1
    000002CA 4308                   SHLL2       R3
    000002CC 332C                   ADD         R2,R3
    000002CE 1311                   MOV.L       R1,@(4,R3)
      Elements.c   152                        if (130 + (tabIndex%largeur)*(6*8) + c*6 > maxY) // on identifie la piece la plus eloi
                         +gnee de l'ecran
    000002D0 53F5                   MOV.L       @(20,R15),R3
    000002D2 3C37                   CMP/GT      R3,R12
    000002D4 8B03                   BF          L982
      Elements.c   153                        {
      Elements.c   154                            maxY = 130 + (tabIndex%largeur)*(6*8) + c*6;
    000002D6 1FB5                   MOV.L       R11,@(20,R15)
      Elements.c   155                            lastPiece = pieceCount;
    000002D8 63E2                   MOV.L       @R14,R3
    000002DA D235                   MOV.L       L1286+16,R2; _lastPiece
    000002DC 2232                   MOV.L       R3,@R2
    000002DE              L982:                             
      Elements.c   156                        }
      Elements.c   157                        piece[pieceCount].active = ((sauvegarde->gadgetEquipe[0] == 7 || sauvegarde->gadgetEqu
                         +ipe[1] == 7)&&rand()%2==1?2:1);
    000002DE 61E2                   MOV.L       @R14,R1
    000002E0 63A2                   MOV.L       @R10,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002E2 4108                   SHLL2       R1
    000002E4 D233                   MOV.L       L1286+20,R2; _sauvegarde
    000002E6 4108                   SHLL2       R1
    000002E8 313C                   ADD         R3,R1
    000002EA E308                   MOV         #8,R3
    000002EC 331C                   ADD         R1,R3
    000002EE 2F36                   MOV.L       R3,@-R15
    000002F0 6022                   MOV.L       @R2,R0
    000002F2 700C                   ADD         #12,R0
    000002F4 1F05                   MOV.L       R0,@(20,R15)
    000002F6 6000                   MOV.B       @R0,R0
    000002F8 600C                   EXTU.B      R0,R0
    000002FA 8807                   CMP/EQ      #7,R0
    000002FC 8904                   BT          L984
    000002FE 53F5                   MOV.L       @(20,R15),R3
    00000300 8431                   MOV.B       @(1,R3),R0
    00000302 600C                   EXTU.B      R0,R0
    00000304 8807                   CMP/EQ      #7,R0
    00000306 8B0F                   BF          L983
    00000308              L984:                             
    00000308 D32B                   MOV.L       L1286+24,R3; _rand
    0000030A 430B                   JSR         @R3
    0000030C 0009                   NOP
    0000030E 4011                   CMP/PZ      R0
    00000310 8B01                   BF          L985
    00000312 A005                   BRA         L986
    00000314 C901                   AND         #1,R0
    00000316              L985:                             
    00000316 6007                   NOT         R0,R0
    00000318 7001                   ADD         #1,R0
    0000031A C901                   AND         #1,R0
    0000031C 6007                   NOT         R0,R0
    0000031E 7001                   ADD         #1,R0
    00000320              L986:                             
    00000320 8801                   CMP/EQ      #1,R0
    00000322 8B01                   BF          L983
    00000324 A001                   BRA         L987
    00000326 E202                   MOV         #2,R2
    00000328              L983:                             
    00000328 E201                   MOV         #1,R2
    0000032A              L987:                             
    0000032A 60F6                   MOV.L       @R15+,R0
    0000032C 2022                   MOV.L       R2,@R0
      Elements.c   158                        piece[pieceCount].attract = 0;
    0000032E 63E2                   MOV.L       @R14,R3
    00000330 62A2                   MOV.L       @R10,R2
    00000332 4308                   SHLL2       R3
    00000334 4308                   SHLL2       R3
    00000336 332C                   ADD         R2,R3
    00000338 1393                   MOV.L       R9,@(12,R3)
      Elements.c   159                        pieceCount++;
    0000033A 63E2                   MOV.L       @R14,R3
    0000033C 7301                   ADD         #1,R3
    0000033E 2E32                   MOV.L       R3,@R14
    00000340              L981:                             
    00000340 52F1                   MOV.L       @(4,R15),R2
    00000342 7B06                   ADD         #6,R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000344 7201                   ADD         #1,R2
    00000346 7C06                   ADD         #6,R12
    00000348 1F21                   MOV.L       R2,@(4,R15)
    0000034A E308                   MOV         #8,R3
    0000034C 3233                   CMP/GE      R3,R2
    0000034E 8FA8                   BF/S        L980
    00000350 78FF                   ADD         #-1,R8
    00000352 62F2                   MOV.L       @R15,R2
    00000354 7201                   ADD         #1,R2
    00000356 2F22                   MOV.L       R2,@R15
    00000358              L978:                             
    00000358 53F8                   MOV.L       @(32,R15),R3
    0000035A 61F2                   MOV.L       @R15,R1
    0000035C 3133                   CMP/GE      R3,R1
    0000035E 8B81                   BF          L979
      Elements.c   160                    }
      Elements.c   161    
      Elements.c   162        return largeur * 48;
    00000360 60D3                   MOV         R13,R0
    00000362 63D3                   MOV         R13,R3
    00000364 4000                   SHLL        R0
    00000366 303C                   ADD         R3,R0
    00000368 4008                   SHLL2       R0
    0000036A 4008                   SHLL2       R0
      Elements.c   163    }
    0000036C 7F24                   ADD         #36,R15
    0000036E 4F16                   LDS.L       @R15+,MACL
    00000370 4F26                   LDS.L       @R15+,PR
    00000372 68F6                   MOV.L       @R15+,R8
    00000374 69F6                   MOV.L       @R15+,R9
    00000376 6AF6                   MOV.L       @R15+,R10
    00000378 6BF6                   MOV.L       @R15+,R11
    0000037A 6CF6                   MOV.L       @R15+,R12
    0000037C 6DF6                   MOV.L       @R15+,R13
    0000037E 000B                   RTS
    00000380 6EF6                   MOV.L       @R15+,R14
      Elements.c   164    void afficherPieces()
    00000382              _afficherPieces:                 ; function: afficherPieces
                                                           ; frame size=32
                                                           ; used runtime library name:
                                                           ; __stoi
      Elements.c   165    {
      Elements.c   166        int w;
      Elements.c   167    
      Elements.c   168        for (w=0; w < pieceCount; w++)
    00000382 E400                   MOV         #0,R4
    00000384 2FE6                   MOV.L       R14,@-R15
    00000386 6E43                   MOV         R4,R14
    00000388 2FD6                   MOV.L       R13,@-R15
    0000038A 2FC6                   MOV.L       R12,@-R15
    0000038C 2FB6                   MOV.L       R11,@-R15
    0000038E 2FA6                   MOV.L       R10,@-R15
    00000390 2F96                   MOV.L       R9,@-R15
    00000392 6A43                   MOV         R4,R10
    00000394 DB0A                   MOV.L       L1286+32,R11; _piece
    00000396 2F86                   MOV.L       R8,@-R15
    00000398 4F22                   STS.L       PR,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000039A D808                   MOV.L       L1286+28,R8; _ML_bmp_8_and_cl
    0000039C A035                   BRA         L989
    0000039E 6D43                   MOV         R4,R13
    000003A0              L1286:                            
    000003A0 0082                   .DATA.W     H'0082
    000003A2 0000                   .DATA.W     0
    000003A4 <00000000>             .DATA.L     __modls
    000003A8 <00000000>             .DATA.L     __divls
    000003AC <00000000>             .DATA.L     __itos
    000003B0 <00000000>             .DATA.L     _lastPiece
    000003B4 <00000000>             .DATA.L     _sauvegarde
    000003B8 <00000000>             .DATA.L     _rand
    000003BC <00000000>             .DATA.L     _ML_bmp_8_and_cl
    000003C0 <00000000>             .DATA.L     _piece
    000003C4              L990:                             
    000003C4 6CB2                   MOV.L       @R11,R12
    000003C6 62D3                   MOV         R13,R2
    000003C8 32CC                   ADD         R12,R2
    000003CA 5322                   MOV.L       @(8,R2),R3
    000003CC 2338                   TST         R3,R3
    000003CE 8919                   BT          L991
      Elements.c   169            if (piece[w].active != 0) // si la piece existe
      Elements.c   170            {
      Elements.c   171                ML_bmp_8_and_cl(moneyAlpha,piece[w].x,piece[w].y); // masque alpha de la pièce
    000003D0 D395                   MOV.L       L1287+2,R3 ; __stoi
    000003D2 69E3                   MOV         R14,R9
    000003D4 39CC                   ADD         R12,R9
    000003D6 5691                   MOV.L       @(4,R9),R6
    000003D8 430B                   JSR         @R3
    000003DA 6092                   MOV.L       @R9,R0
    000003DC D493                   MOV.L       L1287+6,R4 ; __$moneyAlpha
    000003DE 480B                   JSR         @R8
    000003E0 6503                   MOV         R0,R5
      Elements.c   172                ML_bmp_8_or_cl(piece[w].active==1?money:money2,piece[w].x,piece[w].y); // si la piece n'a pas 
                         +ete deja prise par barry, on l'affiche
    000003E2 6CB2                   MOV.L       @R11,R12
    000003E4 D290                   MOV.L       L1287+2,R2 ; __stoi
    000003E6 3CEC                   ADD         R14,R12
    000003E8 56C1                   MOV.L       @(4,R12),R6
    000003EA 420B                   JSR         @R2
    000003EC 60C2                   MOV.L       @R12,R0
    000003EE 6503                   MOV         R0,R5
    000003F0 50C2                   MOV.L       @(8,R12),R0
    000003F2 8801                   CMP/EQ      #1,R0
    000003F4 8B02                   BF          L992
    000003F6 D48E                   MOV.L       L1287+10,R4; __$money
    000003F8 A001                   BRA         L993
    000003FA 0009                   NOP
    000003FC              L992:                             
    000003FC D48D                   MOV.L       L1287+14,R4; __$money2
    000003FE              L993:                             
    000003FE D28E                   MOV.L       L1287+18,R2; _ML_bmp_8_or_cl
    00000400 420B                   JSR         @R2
    00000402 0009                   NOP
    00000404              L991:                             
    00000404 7A01                   ADD         #1,R10
    00000406 7E10                   ADD         #16,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000408 7D10                   ADD         #16,R13
    0000040A              L989:                             
    0000040A D28C                   MOV.L       L1287+22,R2; _pieceCount
    0000040C 6322                   MOV.L       @R2,R3
    0000040E 3A33                   CMP/GE      R3,R10
    00000410 8BD8                   BF          L990
      Elements.c   173            }
      Elements.c   174    }
    00000412 4F26                   LDS.L       @R15+,PR
    00000414 68F6                   MOV.L       @R15+,R8
    00000416 69F6                   MOV.L       @R15+,R9
    00000418 6AF6                   MOV.L       @R15+,R10
    0000041A 6BF6                   MOV.L       @R15+,R11
    0000041C 6CF6                   MOV.L       @R15+,R12
    0000041E 6DF6                   MOV.L       @R15+,R13
    00000420 000B                   RTS
    00000422 6EF6                   MOV.L       @R15+,R14
      Elements.c   175    int deplacerPieces(int yBarry, float vitesseDecalage, int vehicule)
    00000424              _deplacerPieces:                 ; function: deplacerPieces
                                                           ; frame size=48
                                                           ; used runtime library name:
                                                           ; __adds, __subs, __itos, __gts, __lts, __ges, __les
    00000424 2FE6                   MOV.L       R14,@-R15
    00000426 2FD6                   MOV.L       R13,@-R15
    00000428 2FC6                   MOV.L       R12,@-R15
    0000042A 2FB6                   MOV.L       R11,@-R15
    0000042C 2FA6                   MOV.L       R10,@-R15
    0000042E 2F96                   MOV.L       R9,@-R15
    00000430 2F86                   MOV.L       R8,@-R15
    00000432 4F22                   STS.L       PR,@-R15
    00000434 D182                   MOV.L       L1287+26,R1; _lastPiece
    00000436 7FF0                   ADD         #-16,R15
    00000438 6712                   MOV.L       @R1,R7
    0000043A 2778                   TST         R7,R7
    0000043C 890B                   BT          L819
      Elements.c   176    {
      Elements.c   177        int w;
      Elements.c   178    
      Elements.c   179        if (lastPiece == 0) return 0;
      Elements.c   180        if (piece[lastPiece].x<-6) // si la dernière piece est en dehors de l'ecran
    0000043E 6173                   MOV         R7,R1
    00000440 D081                   MOV.L       L1287+34,R0; H'C0C00000
    00000442 4108                   SHLL2       R1
    00000444 D281                   MOV.L       L1287+38,R2; __lts
    00000446 4108                   SHLL2       R1
    00000448 DE7E                   MOV.L       L1287+30,R14; _piece
    0000044A 63E2                   MOV.L       @R14,R3
    0000044C 313C                   ADD         R3,R1
    0000044E 420B                   JSR         @R2
    00000450 6112                   MOV.L       @R1,R1
    00000452 8800                   CMP/EQ      #0,R0
    00000454 8901                   BT          L996
    00000456              L819:
      Elements.c   181        return 0;
    00000456 A158                   BRA         L995
    00000458 E000                   MOV         #0,R0
    0000045A              L996:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   182        else for (w=0; w < pieceCount; w++) // on decale toutes les pieces vers la gauche
    0000045A E700                   MOV         #0,R7
    0000045C DC7C                   MOV.L       L1287+42,R12; __$vehiculesX
    0000045E 6363                   MOV         R6,R3
    00000460 DB7C                   MOV.L       L1287+46,R11; __$vehiculesY
    00000462 6D73                   MOV         R7,R13
    00000464 1F72                   MOV.L       R7,@(8,R15)
    00000466 6973                   MOV         R7,R9
    00000468 D77B                   MOV.L       L1287+50,R7; _vehiculeHitbox
    0000046A 6893                   MOV         R9,R8
    0000046C 73FF                   ADD         #-1,R3
    0000046E A145                   BRA         L998
    00000470 1F33                   MOV.L       R3,@(12,R15)
    00000472              L999:                             
    00000472 6AD3                   MOV         R13,R10
    00000474 63E2                   MOV.L       @R14,R3
    00000476 4A08                   SHLL2       R10
    00000478 4A08                   SHLL2       R10
    0000047A 3A3C                   ADD         R3,R10
    0000047C 52A3                   MOV.L       @(12,R10),R2
    0000047E 2228                   TST         R2,R2
    00000480 8B01                   BF          L1288
    00000482 A07F                   BRA         L1000
    00000484 0009                   NOP
    00000486              L1288:                            
      Elements.c   183        {
      Elements.c   184            if (piece[w].attract) // si la piece est attiree
      Elements.c   185            {
      Elements.c   186                if (piece[w].x+2 > 8 + (int)((vehiculesX[1][vehiculeHitbox] - vehiculesX[0][vehiculeHitbox])/2
                         +)) piece[w].x-=piece[w].attract;
    00000486 D075                   MOV.L       L1287+54,R0; H'40000000
    00000488 D275                   MOV.L       L1287+58,R2; __adds
    0000048A 420B                   JSR         @R2
    0000048C 61A2                   MOV.L       @R10,R1
    0000048E 6103                   MOV         R0,R1
    00000490 D274                   MOV.L       L1287+62,R2; __itos
    00000492 6072                   MOV.L       @R7,R0
    00000494 03CC                   MOV.B       @(R0,R12),R3
    00000496 30CC                   ADD         R12,R0
    00000498 840C                   MOV.B       @(12,R0),R0
    0000049A 633C                   EXTU.B      R3,R3
    0000049C 600C                   EXTU.B      R0,R0
    0000049E 3038                   SUB         R3,R0
    000004A0 E300                   MOV         #0,R3
    000004A2 3307                   CMP/GT      R0,R3
    000004A4 303E                   ADDC        R3,R0
    000004A6 4021                   SHAR        R0
    000004A8 420B                   JSR         @R2
    000004AA 7008                   ADD         #8,R0
    000004AC D36E                   MOV.L       L1287+66,R3; __gts
    000004AE 430B                   JSR         @R3
    000004B0 0009                   NOP
    000004B2 8800                   CMP/EQ      #0,R0
    000004B4 8907                   BT          L1001
    000004B6 D26B                   MOV.L       L1287+62,R2; __itos
    000004B8 420B                   JSR         @R2
    000004BA 50A3                   MOV.L       @(12,R10),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004BC D36B                   MOV.L       L1287+70,R3; __subs
    000004BE 430B                   JSR         @R3
    000004C0 61A2                   MOV.L       @R10,R1
    000004C2 A01F                   BRA         L1002
    000004C4 2A02                   MOV.L       R0,@R10
    000004C6              L1001:                            
      Elements.c   187                else if (piece[w].x+2 < 8 + (int)((vehiculesX[1][vehiculeHitbox] - vehiculesX[0][vehiculeHitbo
                         +x])/2)) piece[w].x+=piece[w].attract;
    000004C6 D065                   MOV.L       L1287+54,R0; H'40000000
    000004C8 D365                   MOV.L       L1287+58,R3; __adds
    000004CA 430B                   JSR         @R3
    000004CC 61A2                   MOV.L       @R10,R1
    000004CE 6103                   MOV         R0,R1
    000004D0 D264                   MOV.L       L1287+62,R2; __itos
    000004D2 6072                   MOV.L       @R7,R0
    000004D4 03CC                   MOV.B       @(R0,R12),R3
    000004D6 30CC                   ADD         R12,R0
    000004D8 840C                   MOV.B       @(12,R0),R0
    000004DA 633C                   EXTU.B      R3,R3
    000004DC 600C                   EXTU.B      R0,R0
    000004DE 3038                   SUB         R3,R0
    000004E0 E300                   MOV         #0,R3
    000004E2 3307                   CMP/GT      R0,R3
    000004E4 303E                   ADDC        R3,R0
    000004E6 4021                   SHAR        R0
    000004E8 420B                   JSR         @R2
    000004EA 7008                   ADD         #8,R0
    000004EC D357                   MOV.L       L1287+38,R3; __lts
    000004EE 430B                   JSR         @R3
    000004F0 0009                   NOP
    000004F2 8800                   CMP/EQ      #0,R0
    000004F4 8906                   BT          L1002
    000004F6 D25B                   MOV.L       L1287+62,R2; __itos
    000004F8 420B                   JSR         @R2
    000004FA 50A3                   MOV.L       @(12,R10),R0
    000004FC D358                   MOV.L       L1287+58,R3; __adds
    000004FE 430B                   JSR         @R3
    00000500 61A2                   MOV.L       @R10,R1
    00000502 2A02                   MOV.L       R0,@R10
    00000504              L1002:                            
      Elements.c   188    
      Elements.c   189                if (piece[w].y+2 > yBarry + (int)((vehiculesY[1][vehiculeHitbox] - vehiculesY[0][vehiculeHitbo
                         +x])/2)) piece[w].y-=piece[w].attract;
    00000504 63E2                   MOV.L       @R14,R3
    00000506 62D3                   MOV         R13,R2
    00000508 4208                   SHLL2       R2
    0000050A 4208                   SHLL2       R2
    0000050C 323C                   ADD         R3,R2
    0000050E 5121                   MOV.L       @(4,R2),R1
    00000510 6372                   MOV.L       @R7,R3
    00000512 7102                   ADD         #2,R1
    00000514 33BC                   ADD         R11,R3
    00000516 843C                   MOV.B       @(12,R3),R0
    00000518 620C                   EXTU.B      R0,R2
    0000051A 6072                   MOV.L       @R7,R0
    0000051C 03BC                   MOV.B       @(R0,R11),R3
    0000051E 633C                   EXTU.B      R3,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000520 3238                   SUB         R3,R2
    00000522 E300                   MOV         #0,R3
    00000524 3327                   CMP/GT      R2,R3
    00000526 323E                   ADDC        R3,R2
    00000528 4221                   SHAR        R2
    0000052A 324C                   ADD         R4,R2
    0000052C 3127                   CMP/GT      R2,R1
    0000052E 8B09                   BF          L1004
    00000530 63E2                   MOV.L       @R14,R3
    00000532 6AD3                   MOV         R13,R10
    00000534 4A08                   SHLL2       R10
    00000536 4A08                   SHLL2       R10
    00000538 3A3C                   ADD         R3,R10
    0000053A 53A3                   MOV.L       @(12,R10),R3
    0000053C 52A1                   MOV.L       @(4,R10),R2
    0000053E 3238                   SUB         R3,R2
    00000540 A025                   BRA         L1007
    00000542 1A21                   MOV.L       R2,@(4,R10)
    00000544              L1004:                            
      Elements.c   190                else if (piece[w].y+2 < yBarry + (int)((vehiculesY[1][vehiculeHitbox] - vehiculesY[0][vehicule
                         +Hitbox])/2)) piece[w].y+=piece[w].attract;
    00000544 63E2                   MOV.L       @R14,R3
    00000546 60D3                   MOV         R13,R0
    00000548 4008                   SHLL2       R0
    0000054A 4008                   SHLL2       R0
    0000054C 303C                   ADD         R3,R0
    0000054E 5201                   MOV.L       @(4,R0),R2
    00000550 6372                   MOV.L       @R7,R3
    00000552 7202                   ADD         #2,R2
    00000554 33BC                   ADD         R11,R3
    00000556 843C                   MOV.B       @(12,R3),R0
    00000558 610C                   EXTU.B      R0,R1
    0000055A 6072                   MOV.L       @R7,R0
    0000055C 03BC                   MOV.B       @(R0,R11),R3
    0000055E 633C                   EXTU.B      R3,R3
    00000560 3138                   SUB         R3,R1
    00000562 E300                   MOV         #0,R3
    00000564 3317                   CMP/GT      R1,R3
    00000566 313E                   ADDC        R3,R1
    00000568 4121                   SHAR        R1
    0000056A 314C                   ADD         R4,R1
    0000056C 3213                   CMP/GE      R1,R2
    0000056E 890E                   BT          L1007
    00000570 63E2                   MOV.L       @R14,R3
    00000572 6AD3                   MOV         R13,R10
    00000574 4A08                   SHLL2       R10
    00000576 4A08                   SHLL2       R10
    00000578 3A3C                   ADD         R3,R10
    0000057A 53A3                   MOV.L       @(12,R10),R3
    0000057C 52A1                   MOV.L       @(4,R10),R2
    0000057E 323C                   ADD         R3,R2
    00000580 A005                   BRA         L1007
    00000582 1A21                   MOV.L       R2,@(4,R10)
    00000584              L1000:                            
      Elements.c   191    
      Elements.c   192            }
      Elements.c   193            else piece[w].x-= vitesseDecalage;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000584 D339                   MOV.L       L1287+70,R3; __subs
    00000586 6053                   MOV         R5,R0
    00000588 430B                   JSR         @R3
    0000058A 61A2                   MOV.L       @R10,R1
    0000058C 2A02                   MOV.L       R0,@R10
    0000058E              L1007:                            
    0000058E 4615                   CMP/PL      R6
    00000590 8F03                   BF/S        L1009
    00000592 6AE2                   MOV.L       @R14,R10
    00000594 E306                   MOV         #6,R3
    00000596 3637                   CMP/GT      R3,R6
    00000598 8B70                   BF          L1008
    0000059A              L1009:                            
      Elements.c   194            if (vehicule <= 0 || vehicule > 6)
      Elements.c   195            {
      Elements.c   196                if ((piece[w].x <= 8 + 6 + vehiculesX[1][vehiculeHitbox] && piece[w].x >= 8 - 6 + vehiculesX[0
                         +][vehiculeHitbox] - 5 && piece[w].y <= 6 + yBarry + vehiculesY[1][vehiculeHitbox] && piece[w].y >= yBarry 
                         ++ vehiculesY[0][vehiculeHitbox] - 5 - 6) && (sauvegarde->gadgetEquipe[0] == 10 || sauvegarde->gadgetEquipe
                         +[1] == 10)) // si on a l'atout aimant a piece et que la piece est assez proche
    0000059A 61D3                   MOV         R13,R1
    0000059C D331                   MOV.L       L1287+62,R3; __itos
    0000059E 4108                   SHLL2       R1
    000005A0 4108                   SHLL2       R1
    000005A2 31AC                   ADD         R10,R1
    000005A4 2F12                   MOV.L       R1,@R15
    000005A6 6112                   MOV.L       @R1,R1
    000005A8 1F11                   MOV.L       R1,@(4,R15)
    000005AA 6072                   MOV.L       @R7,R0
    000005AC 30CC                   ADD         R12,R0
    000005AE 840C                   MOV.B       @(12,R0),R0
    000005B0 600C                   EXTU.B      R0,R0
    000005B2 430B                   JSR         @R3
    000005B4 700E                   ADD         #14,R0
    000005B6 D22E                   MOV.L       L1287+74,R2; __les
    000005B8 420B                   JSR         @R2
    000005BA 0009                   NOP
    000005BC 8800                   CMP/EQ      #0,R0
    000005BE 8B01                   BF          L1289
    000005C0 A096                   BRA         L1012
    000005C2 0009                   NOP
    000005C4              L1289:                            
    000005C4 6072                   MOV.L       @R7,R0
    000005C6 00CC                   MOV.B       @(R0,R12),R0
    000005C8 D326                   MOV.L       L1287+62,R3; __itos
    000005CA 600C                   EXTU.B      R0,R0
    000005CC 430B                   JSR         @R3
    000005CE 70FD                   ADD         #-3,R0
    000005D0 D228                   MOV.L       L1287+78,R2; __ges
    000005D2 420B                   JSR         @R2
    000005D4 51F1                   MOV.L       @(4,R15),R1
    000005D6 8800                   CMP/EQ      #0,R0
    000005D8 8B01                   BF          L1290
    000005DA A089                   BRA         L1012
    000005DC 0009                   NOP
    000005DE              L1290:                            
    000005DE 63F2                   MOV.L       @R15,R3
    000005E0 6272                   MOV.L       @R7,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005E2 32BC                   ADD         R11,R2
    000005E4 842C                   MOV.B       @(12,R2),R0
    000005E6 600C                   EXTU.B      R0,R0
    000005E8 5331                   MOV.L       @(4,R3),R3
    000005EA 304C                   ADD         R4,R0
    000005EC 7006                   ADD         #6,R0
    000005EE 3307                   CMP/GT      R0,R3
    000005F0 8B01                   BF          L1291
    000005F2 A07D                   BRA         L1012
    000005F4 0009                   NOP
    000005F6              L1291:                            
    000005F6 61F2                   MOV.L       @R15,R1
    000005F8 6072                   MOV.L       @R7,R0
    000005FA 03BC                   MOV.B       @(R0,R11),R3
    000005FC 5211                   MOV.L       @(4,R1),R2
    000005FE 633C                   EXTU.B      R3,R3
    00000600 334C                   ADD         R4,R3
    00000602 73F5                   ADD         #-11,R3
    00000604 3233                   CMP/GE      R3,R2
    00000606 8B73                   BF          L1012
    00000608 D31B                   MOV.L       L1287+82,R3; _sauvegarde
    0000060A 6032                   MOV.L       @R3,R0
    0000060C 840C                   MOV.B       @(12,R0),R0
    0000060E 600C                   EXTU.B      R0,R0
    00000610 880A                   CMP/EQ      #10,R0
    00000612 8904                   BT          L1011
    00000614 6032                   MOV.L       @R3,R0
    00000616 840D                   MOV.B       @(13,R0),R0
    00000618 600C                   EXTU.B      R0,R0
    0000061A 880A                   CMP/EQ      #10,R0
    0000061C 8B68                   BF          L1012
    0000061E              L1011:                            
      Elements.c   197                piece[w].attract = 1;
    0000061E 3A8C                   ADD         R8,R10
    00000620 E301                   MOV         #1,R3
    00000622 A065                   BRA         L1012
    00000624 1A33                   MOV.L       R3,@(12,R10)
    00000626              L1287:                            
    00000626 0000                   .DATA.W     0
    00000628 <00000000>             .DATA.L     __stoi
    0000062C <00000000>             .DATA.L     __$moneyAlpha
    00000630 <00000000>             .DATA.L     __$money
    00000634 <00000000>             .DATA.L     __$money2
    00000638 <00000000>             .DATA.L     _ML_bmp_8_or_cl
    0000063C <00000000>             .DATA.L     _pieceCount
    00000640 <00000000>             .DATA.L     _lastPiece
    00000644 <00000000>             .DATA.L     _piece
    00000648 C0C00000               .DATA.L     H'C0C00000
    0000064C <00000000>             .DATA.L     __lts
    00000650 <00000000>             .DATA.L     __$vehiculesX
    00000654 <00000000>             .DATA.L     __$vehiculesY
    00000658 <00000000>             .DATA.L     _vehiculeHitbox
    0000065C 40000000               .DATA.L     H'40000000
    00000660 <00000000>             .DATA.L     __adds
    00000664 <00000000>             .DATA.L     __itos
    00000668 <00000000>             .DATA.L     __gts
    0000066C <00000000>             .DATA.L     __subs




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000670 <00000000>             .DATA.L     __les
    00000674 <00000000>             .DATA.L     __ges
    00000678 <00000000>             .DATA.L     _sauvegarde
    0000067C              L1008:                            
      Elements.c   198            }
      Elements.c   199            else
      Elements.c   200            {
      Elements.c   201                if ((piece[w].x <= 8 + 10 + vehiculesX[1][vehiculeHitbox] && piece[w].x >= 8 - 10 + vehiculesX
                         +[0][vehiculeHitbox] - 5 && piece[w].y <= 10 + yBarry + vehiculesY[1][vehiculeHitbox] && piece[w].y >= yBar
                         +ry + vehiculesY[0][vehiculeHitbox] - 5 - 10) && sauvegarde->ameliorationAimant[vehicule-1] == 2) // si on 
                         +a l'atout aimant a piece et que la piece est assez proche
    0000067C 51F2                   MOV.L       @(8,R15),R1
    0000067E 31AC                   ADD         R10,R1
    00000680 2F12                   MOV.L       R1,@R15
    00000682 6112                   MOV.L       @R1,R1
    00000684 D36B                   MOV.L       L1292+2,R3 ; __itos
    00000686 1F11                   MOV.L       R1,@(4,R15)
    00000688 6072                   MOV.L       @R7,R0
    0000068A 30CC                   ADD         R12,R0
    0000068C 840C                   MOV.B       @(12,R0),R0
    0000068E 600C                   EXTU.B      R0,R0
    00000690 430B                   JSR         @R3
    00000692 7012                   ADD         #18,R0
    00000694 D268                   MOV.L       L1292+6,R2 ; __les
    00000696 420B                   JSR         @R2
    00000698 0009                   NOP
    0000069A 8800                   CMP/EQ      #0,R0
    0000069C 8928                   BT          L1012
    0000069E 6072                   MOV.L       @R7,R0
    000006A0 D364                   MOV.L       L1292+2,R3 ; __itos
    000006A2 00CC                   MOV.B       @(R0,R12),R0
    000006A4 600C                   EXTU.B      R0,R0
    000006A6 430B                   JSR         @R3
    000006A8 70F9                   ADD         #-7,R0
    000006AA D264                   MOV.L       L1292+10,R2; __ges
    000006AC 420B                   JSR         @R2
    000006AE 51F1                   MOV.L       @(4,R15),R1
    000006B0 8800                   CMP/EQ      #0,R0
    000006B2 891D                   BT          L1012
    000006B4 63F2                   MOV.L       @R15,R3
    000006B6 6272                   MOV.L       @R7,R2
    000006B8 5331                   MOV.L       @(4,R3),R3
    000006BA 32BC                   ADD         R11,R2
    000006BC 842C                   MOV.B       @(12,R2),R0
    000006BE 600C                   EXTU.B      R0,R0
    000006C0 304C                   ADD         R4,R0
    000006C2 700A                   ADD         #10,R0
    000006C4 3307                   CMP/GT      R0,R3
    000006C6 8913                   BT          L1012
    000006C8 61F2                   MOV.L       @R15,R1
    000006CA 6072                   MOV.L       @R7,R0
    000006CC 5211                   MOV.L       @(4,R1),R2
    000006CE 03BC                   MOV.B       @(R0,R11),R3
    000006D0 633C                   EXTU.B      R3,R3
    000006D2 334C                   ADD         R4,R3
    000006D4 73F1                   ADD         #-15,R3
    000006D6 3233                   CMP/GE      R3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006D8 8B0A                   BF          L1012
    000006DA D359                   MOV.L       L1292+14,R3; _sauvegarde
    000006DC 52F3                   MOV.L       @(12,R15),R2
    000006DE 6032                   MOV.L       @R3,R0
    000006E0 7020                   ADD         #32,R0
    000006E2 002C                   MOV.B       @(R0,R2),R0
    000006E4 600C                   EXTU.B      R0,R0
    000006E6 8802                   CMP/EQ      #2,R0
    000006E8 8B02                   BF          L1012
      Elements.c   202                piece[w].attract = 2;
    000006EA 3A9C                   ADD         R9,R10
    000006EC E302                   MOV         #2,R3
    000006EE 1A33                   MOV.L       R3,@(12,R10)
    000006F0              L1012:                            
    000006F0 52F2                   MOV.L       @(8,R15),R2
    000006F2 7810                   ADD         #16,R8
    000006F4 7D01                   ADD         #1,R13
    000006F6 7910                   ADD         #16,R9
    000006F8 7210                   ADD         #16,R2
    000006FA 1F22                   MOV.L       R2,@(8,R15)
    000006FC              L998:                             
    000006FC D251                   MOV.L       L1292+18,R2; _pieceCount
    000006FE 6322                   MOV.L       @R2,R3
    00000700 3D33                   CMP/GE      R3,R13
    00000702 8901                   BT          L1293
    00000704 AEB5                   BRA         L999
    00000706 0009                   NOP
    00000708              L1293:                            
      Elements.c   203            }
      Elements.c   204        }
      Elements.c   205        return 1;
    00000708 E001                   MOV         #1,R0
      Elements.c   206    }
    0000070A              L995:                             
    0000070A 7F10                   ADD         #16,R15
    0000070C 4F26                   LDS.L       @R15+,PR
    0000070E 68F6                   MOV.L       @R15+,R8
    00000710 69F6                   MOV.L       @R15+,R9
    00000712 6AF6                   MOV.L       @R15+,R10
    00000714 6BF6                   MOV.L       @R15+,R11
    00000716 6CF6                   MOV.L       @R15+,R12
    00000718 6DF6                   MOV.L       @R15+,R13
    0000071A 000B                   RTS
    0000071C 6EF6                   MOV.L       @R15+,R14
      Elements.c   207    void collisionPieces(int yBarry, int xBarry, int *nbPieces, int vehicule)
    0000071E              _collisionPieces:                ; function: collisionPieces
                                                           ; frame size=56
                                                           ; used runtime library name:
                                                           ; __itos, __ges, __les
    0000071E 2FE6                   MOV.L       R14,@-R15
    00000720 2FD6                   MOV.L       R13,@-R15
    00000722 2FC6                   MOV.L       R12,@-R15
    00000724 2FB6                   MOV.L       R11,@-R15
      Elements.c   208    {
      Elements.c   209    
      Elements.c   210        int w;
      Elements.c   211    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   212        for (w=0; w < pieceCount; w++)
    00000726 EC00                   MOV         #0,R12
    00000728 D347                   MOV.L       L1292+22,R3; __$vehiculesX
    0000072A 6BC3                   MOV         R12,R11
    0000072C D247                   MOV.L       L1292+26,R2; __$vehiculesY
    0000072E 2FA6                   MOV.L       R10,@-R15
    00000730 2F96                   MOV.L       R9,@-R15
    00000732 6AC3                   MOV         R12,R10
    00000734 DD46                   MOV.L       L1292+30,R13; _piece
    00000736 69C3                   MOV         R12,R9
    00000738 DE46                   MOV.L       L1292+34,R14; _vehiculeHitbox
    0000073A 2F86                   MOV.L       R8,@-R15
    0000073C 4F22                   STS.L       PR,@-R15
    0000073E 68C3                   MOV         R12,R8
    00000740 4F12                   STS.L       MACL,@-R15
    00000742 7FEC                   ADD         #-20,R15
    00000744 1F31                   MOV.L       R3,@(4,R15)
    00000746 A065                   BRA         L1014
    00000748 2F22                   MOV.L       R2,@R15
    0000074A              L1015:                            
    0000074A 6183                   MOV         R8,R1
    0000074C D239                   MOV.L       L1292+2,R2 ; __itos
    0000074E 4108                   SHLL2       R1
    00000750 63D2                   MOV.L       @R13,R3
    00000752 4108                   SHLL2       R1
    00000754 1F32                   MOV.L       R3,@(8,R15)
    00000756 313C                   ADD         R3,R1
    00000758 1F13                   MOV.L       R1,@(12,R15)
    0000075A 6112                   MOV.L       @R1,R1
    0000075C 1F14                   MOV.L       R1,@(16,R15)
    0000075E 53F1                   MOV.L       @(4,R15),R3
    00000760 60E2                   MOV.L       @R14,R0
    00000762 303C                   ADD         R3,R0
    00000764 840C                   MOV.B       @(12,R0),R0
    00000766 600C                   EXTU.B      R0,R0
    00000768 420B                   JSR         @R2
    0000076A 305C                   ADD         R5,R0
    0000076C D232                   MOV.L       L1292+6,R2 ; __les
    0000076E 420B                   JSR         @R2
    00000770 0009                   NOP
    00000772 8800                   CMP/EQ      #0,R0
    00000774 894A                   BT          L1016
    00000776 52F1                   MOV.L       @(4,R15),R2
    00000778 60E2                   MOV.L       @R14,R0
    0000077A 002C                   MOV.B       @(R0,R2),R0
    0000077C D12D                   MOV.L       L1292+2,R1 ; __itos
    0000077E 600C                   EXTU.B      R0,R0
    00000780 305C                   ADD         R5,R0
    00000782 410B                   JSR         @R1
    00000784 70FB                   ADD         #-5,R0
    00000786 51F4                   MOV.L       @(16,R15),R1
    00000788 D32C                   MOV.L       L1292+10,R3; __ges
    0000078A 430B                   JSR         @R3
    0000078C 0009                   NOP
    0000078E 8800                   CMP/EQ      #0,R0
    00000790 893C                   BT          L1016
    00000792 53F3                   MOV.L       @(12,R15),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000794 62F2                   MOV.L       @R15,R2
    00000796 61E2                   MOV.L       @R14,R1
    00000798 5331                   MOV.L       @(4,R3),R3
    0000079A 312C                   ADD         R2,R1
    0000079C 841C                   MOV.B       @(12,R1),R0
    0000079E 600C                   EXTU.B      R0,R0
    000007A0 304C                   ADD         R4,R0
    000007A2 3307                   CMP/GT      R0,R3
    000007A4 8932                   BT          L1016
    000007A6 63F2                   MOV.L       @R15,R3
    000007A8 60E2                   MOV.L       @R14,R0
    000007AA 023C                   MOV.B       @(R0,R3),R2
    000007AC 50F3                   MOV.L       @(12,R15),R0
    000007AE 622C                   EXTU.B      R2,R2
    000007B0 5101                   MOV.L       @(4,R0),R1
    000007B2 324C                   ADD         R4,R2
    000007B4 72FB                   ADD         #-5,R2
    000007B6 3123                   CMP/GE      R2,R1
    000007B8 8B28                   BF          L1016
      Elements.c   213            if (piece[w].x <= xBarry + vehiculesX[1][vehiculeHitbox] && piece[w].x >= xBarry + vehiculesX[0][v
                         +ehiculeHitbox] - 5 && piece[w].y <= yBarry + vehiculesY[1][vehiculeHitbox] && piece[w].y >= yBarry + vehic
                         +ulesY[0][vehiculeHitbox] - 5) // si la piece touche barry
      Elements.c   214            {
      Elements.c   215                if (piece[w].active != 0)
    000007BA 53F2                   MOV.L       @(8,R15),R3
    000007BC 33AC                   ADD         R10,R3
    000007BE 5232                   MOV.L       @(8,R3),R2
    000007C0 2228                   TST         R2,R2
    000007C2 8920                   BT          L1017
      Elements.c   216                {
      Elements.c   217                    if (vehicule > 6) sauvegarde->statMort[4] += 1;
    000007C4 E206                   MOV         #6,R2
    000007C6 3727                   CMP/GT      R2,R7
    000007C8 8B07                   BF          L1018
    000007CA E05C                   MOV         #92,R0
    000007CC D31C                   MOV.L       L1292+14,R3; _sauvegarde
    000007CE E25C                   MOV         #92,R2
    000007D0 6132                   MOV.L       @R3,R1
    000007D2 001D                   MOV.W       @(R0,R1),R0
    000007D4 7001                   ADD         #1,R0
    000007D6 321C                   ADD         R1,R2
    000007D8 2201                   MOV.W       R0,@R2
    000007DA              L1018:                            
      Elements.c   218                    *nbPieces += (piece[w].active==1?1:2)*(sauvegarde->doublePiece==1?2:1); // on gagne de l'a
                         +rgent
    000007DA 60D2                   MOV.L       @R13,R0
    000007DC 30BC                   ADD         R11,R0
    000007DE 5002                   MOV.L       @(8,R0),R0
    000007E0 8801                   CMP/EQ      #1,R0
    000007E2 8B01                   BF          L1019
    000007E4 A001                   BRA         L1021
    000007E6 E301                   MOV         #1,R3
    000007E8              L1019:                            
    000007E8 E302                   MOV         #2,R3
    000007EA              L1021:                            
    000007EA E176                   MOV         #118,R1
    000007EC D214                   MOV.L       L1292+14,R2; _sauvegarde




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007EE 6022                   MOV.L       @R2,R0
    000007F0 001C                   MOV.B       @(R0,R1),R0
    000007F2 8801                   CMP/EQ      #1,R0
    000007F4 8B01                   BF          L1020
    000007F6 A001                   BRA         L1022
    000007F8 E102                   MOV         #2,R1
    000007FA              L1020:                            
    000007FA E101                   MOV         #1,R1
    000007FC              L1022:                            
    000007FC 0317                   MUL.L       R1,R3
    000007FE 031A                   STS         MACL,R3
    00000800 6162                   MOV.L       @R6,R1
    00000802 313C                   ADD         R3,R1
    00000804 2612                   MOV.L       R1,@R6
    00000806              L1017:                            
      Elements.c   219                }
      Elements.c   220                piece[w].active = 0; // on indique que la piece a etee touchee
    00000806 63D2                   MOV.L       @R13,R3
    00000808 339C                   ADD         R9,R3
    0000080A 13C2                   MOV.L       R12,@(8,R3)
    0000080C              L1016:                            
    0000080C 7801                   ADD         #1,R8
    0000080E 7910                   ADD         #16,R9
    00000810 7B10                   ADD         #16,R11
    00000812 7A10                   ADD         #16,R10
    00000814              L1014:                            
    00000814 D30B                   MOV.L       L1292+18,R3; _pieceCount
    00000816 6232                   MOV.L       @R3,R2
    00000818 3823                   CMP/GE      R2,R8
    0000081A 8B96                   BF          L1015
      Elements.c   221            }
      Elements.c   222    }
    0000081C 7F14                   ADD         #20,R15
    0000081E 4F16                   LDS.L       @R15+,MACL
    00000820 4F26                   LDS.L       @R15+,PR
    00000822 68F6                   MOV.L       @R15+,R8
    00000824 69F6                   MOV.L       @R15+,R9
    00000826 6AF6                   MOV.L       @R15+,R10
    00000828 6BF6                   MOV.L       @R15+,R11
    0000082A 6CF6                   MOV.L       @R15+,R12
    0000082C 6DF6                   MOV.L       @R15+,R13
    0000082E 000B                   RTS
    00000830 6EF6                   MOV.L       @R15+,R14
    00000832              L1292:                            
    00000832 0000                   .DATA.W     0
    00000834 <00000000>             .DATA.L     __itos
    00000838 <00000000>             .DATA.L     __les
    0000083C <00000000>             .DATA.L     __ges
    00000840 <00000000>             .DATA.L     _sauvegarde
    00000844 <00000000>             .DATA.L     _pieceCount
    00000848 <00000000>             .DATA.L     __$vehiculesX
    0000084C <00000000>             .DATA.L     __$vehiculesY
    00000850 <00000000>             .DATA.L     _piece
    00000854 <00000000>             .DATA.L     _vehiculeHitbox
      Elements.c   223    
      Elements.c   224    void initZappeurs()
    00000858              _initZappeurs:                   ; function: initZappeurs




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=0
    00000858 D735                   MOV.L       L1294+2,R7 ; _zappeur
    0000085A E500                   MOV         #0,R5
    0000085C 9667                   MOV.W       L1294,R6   ; H'008C
    0000085E 6473                   MOV         R7,R4
    00000860 367C                   ADD         R7,R6
      Elements.c   225    {
      Elements.c   226        int w;
      Elements.c   227    
      Elements.c   228        for (w = 0; w < 5; w++)
    00000862              L1023:                            
      Elements.c   229            zappeur[w].exists = 0;
    00000862 1454                   MOV.L       R5,@(16,R4)
    00000864 741C                   ADD         #28,R4
    00000866 3462                   CMP/HS      R6,R4
    00000868 8BFB                   BF          L1023
      Elements.c   230    }
    0000086A 000B                   RTS
    0000086C 0009                   NOP
      Elements.c   231    int genererZappeurs(int vehicule) // calcule aleatoirement la position des zappeurs afin que barry puisse 
                         +passer au dessus ou en dessous
    0000086E              _genererZappeurs:                ; function: genererZappeurs
                                                           ; frame size=36
                                                           ; used runtime library name:
                                                           ; __modls, __adds, __subs, __stoi, __itos
      Elements.c   232    {
      Elements.c   233        int w, x, type, change, taille;
      Elements.c   234    
      Elements.c   235        for (w = 0; zappeur[w].exists && w < 5; w++); // on cherche la prochaine place du tableau disponible
    0000086E E51C                   MOV         #28,R5
    00000870 2FE6                   MOV.L       R14,@-R15
    00000872 2FD6                   MOV.L       R13,@-R15
    00000874 2FC6                   MOV.L       R12,@-R15
    00000876 2FB6                   MOV.L       R11,@-R15
    00000878 2FA6                   MOV.L       R10,@-R15
    0000087A 6B43                   MOV         R4,R11
    0000087C DE2C                   MOV.L       L1294+2,R14; _zappeur
    0000087E 2F86                   MOV.L       R8,@-R15
    00000880 4F22                   STS.L       PR,@-R15
    00000882 4F12                   STS.L       MACL,@-R15
    00000884 7FFC                   ADD         #-4,R15
    00000886 A001                   BRA         L1024
    00000888 E400                   MOV         #0,R4
    0000088A              L1025:                            
    0000088A 7401                   ADD         #1,R4
    0000088C              L1024:                            
    0000088C 0457                   MUL.L       R5,R4
    0000088E 021A                   STS         MACL,R2
    00000890 32EC                   ADD         R14,R2
    00000892 5324                   MOV.L       @(16,R2),R3
    00000894 2338                   TST         R3,R3
    00000896 8902                   BT          L1026
    00000898 E305                   MOV         #5,R3
    0000089A 3433                   CMP/GE      R3,R4
    0000089C 8BF5                   BF          L1025
    0000089E              L1026:                            
      Elements.c   236    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   237        if (w == 5) return 0; // si il y a trop de zappeurs a l'ecran on arrete
    0000089E 6043                   MOV         R4,R0
    000008A0 8805                   CMP/EQ      #5,R0
    000008A2 8B01                   BF          L1027
    000008A4 A163                   BRA         L1028
    000008A6 E000                   MOV         #0,R0
    000008A8              L1027:                            
      Elements.c   238    
      Elements.c   239        zappeur[w].exists = 1; // on indique qu'il existe
    000008A8 0457                   MUL.L       R5,R4
    000008AA E601                   MOV         #1,R6
      Elements.c   240        zappeur[w].active = 1;
      Elements.c   241        zappeur[w].pos = rand()%2;
    000008AC DD21                   MOV.L       L1294+6,R13; _rand
    000008AE 0C1A                   STS         MACL,R12
    000008B0 6AC3                   MOV         R12,R10
    000008B2 3AEC                   ADD         R14,R10
    000008B4 1A64                   MOV.L       R6,@(16,R10)
    000008B6 4D0B                   JSR         @R13
    000008B8 1A66                   MOV.L       R6,@(24,R10)
    000008BA 4011                   CMP/PZ      R0
    000008BC 8B01                   BF          L1029
    000008BE A005                   BRA         L1030
    000008C0 C901                   AND         #1,R0
    000008C2              L1029:                            
    000008C2 6007                   NOT         R0,R0
    000008C4 7001                   ADD         #1,R0
    000008C6 C901                   AND         #1,R0
    000008C8 6007                   NOT         R0,R0
    000008CA 7001                   ADD         #1,R0
    000008CC              L1030:                            
    000008CC 1A05                   MOV.L       R0,@(20,R10)
      Elements.c   242        zappeur[w].x1 = 128;
    000008CE D31A                   MOV.L       L1294+10,R3; H'43000000
    000008D0 2A32                   MOV.L       R3,@R10
      Elements.c   243    
      Elements.c   244        if (zappeur[w].pos == 0) // zappeur horizontal
    000008D2 52A5                   MOV.L       @(20,R10),R2
    000008D4 2228                   TST         R2,R2
    000008D6 8B5F                   BF          L1031
      Elements.c   245        {
      Elements.c   246            if (vehicule <= 0 || vehicule == 2 || vehicule == 3) zappeur[w].y1 = rand()%51;
    000008D8 4B15                   CMP/PL      R11
    000008DA 8B05                   BF          L1033
    000008DC 60B3                   MOV         R11,R0
    000008DE 8802                   CMP/EQ      #2,R0
    000008E0 8902                   BT          L1033
    000008E2 60B3                   MOV         R11,R0
    000008E4 8803                   CMP/EQ      #3,R0
    000008E6 8B0A                   BF          L1032
    000008E8              L1033:                            
    000008E8 62C3                   MOV         R12,R2
    000008EA 32EC                   ADD         R14,R2
    000008EC 6823                   MOV         R2,R8
    000008EE 4D0B                   JSR         @R13
    000008F0 7804                   ADD         #4,R8
    000008F2 6103                   MOV         R0,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008F4 D311                   MOV.L       L1294+14,R3; __modls
    000008F6 430B                   JSR         @R3
    000008F8 E033                   MOV         #51,R0
    000008FA A028                   BRA         L1278
    000008FC 0009                   NOP
    000008FE              L1032:                            
      Elements.c   247            else zappeur[w].y1 = rand()%2==1?rand()%31:rand()%(51+1-39)+39;
    000008FE 62C3                   MOV         R12,R2
    00000900 32EC                   ADD         R14,R2
    00000902 6823                   MOV         R2,R8
    00000904 4D0B                   JSR         @R13
    00000906 7804                   ADD         #4,R8
    00000908 4011                   CMP/PZ      R0
    0000090A 8B01                   BF          L1036
    0000090C A005                   BRA         L1037
    0000090E C901                   AND         #1,R0
    00000910              L1036:                            
    00000910 6007                   NOT         R0,R0
    00000912 7001                   ADD         #1,R0
    00000914 C901                   AND         #1,R0
    00000916 6007                   NOT         R0,R0
    00000918 7001                   ADD         #1,R0
    0000091A              L1037:                            
    0000091A 8801                   CMP/EQ      #1,R0
    0000091C 8B10                   BF          L1035
    0000091E 4D0B                   JSR         @R13
    00000920 0009                   NOP
    00000922 6103                   MOV         R0,R1
    00000924 D305                   MOV.L       L1294+14,R3; __modls
    00000926 430B                   JSR         @R3
    00000928 E01F                   MOV         #31,R0
    0000092A A010                   BRA         L1278
    0000092C 0009                   NOP
    0000092E              L1294:                            
    0000092E 008C                   .DATA.W     H'008C
    00000930 <00000000>             .DATA.L     _zappeur
    00000934 <00000000>             .DATA.L     _rand
    00000938 43000000               .DATA.L     H'43000000
    0000093C <00000000>             .DATA.L     __modls
    00000940              L1035:                            
    00000940 4D0B                   JSR         @R13
    00000942 0009                   NOP
    00000944 D28F                   MOV.L       L1295+2,R2 ; __modls
    00000946 6103                   MOV         R0,R1
    00000948 420B                   JSR         @R2
    0000094A E00D                   MOV         #13,R0
    0000094C 7027                   ADD         #39,R0
    0000094E              L1278:                            
    0000094E D28E                   MOV.L       L1295+6,R2 ; __itos
    00000950 420B                   JSR         @R2
    00000952 0009                   NOP
    00000954 2802                   MOV.L       R0,@R8
      Elements.c   248            zappeur[w].y2 = zappeur[w].y1;
    00000956 6AC3                   MOV         R12,R10
    00000958 3AEC                   ADD         R14,R10
    0000095A 53A1                   MOV.L       @(4,R10),R3
      Elements.c   249            zappeur[w].x2 = zappeur[w].x1 + rand()%(vehicule <= 0 || vehicule == 2 || vehicule == 3?40:15)+10;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000095C 4D0B                   JSR         @R13
    0000095E 1A33                   MOV.L       R3,@(12,R10)
    00000960 4B15                   CMP/PL      R11
    00000962 8F06                   BF/S        L1040
    00000964 6803                   MOV         R0,R8
    00000966 60B3                   MOV         R11,R0
    00000968 8802                   CMP/EQ      #2,R0
    0000096A 8902                   BT          L1040
    0000096C 60B3                   MOV         R11,R0
    0000096E 8803                   CMP/EQ      #3,R0
    00000970 8B01                   BF          L1039
    00000972              L1040:                            
    00000972 A001                   BRA         L1041
    00000974 E228                   MOV         #40,R2
    00000976              L1039:                            
    00000976 E20F                   MOV         #15,R2
    00000978              L1041:                            
    00000978 D382                   MOV.L       L1295+2,R3 ; __modls
    0000097A 6183                   MOV         R8,R1
    0000097C 430B                   JSR         @R3
    0000097E 6023                   MOV         R2,R0
    00000980 D281                   MOV.L       L1295+6,R2 ; __itos
    00000982 420B                   JSR         @R2
    00000984 0009                   NOP
    00000986 D381                   MOV.L       L1295+10,R3; __adds
    00000988 430B                   JSR         @R3
    0000098A 61A2                   MOV.L       @R10,R1
    0000098C D180                   MOV.L       L1295+14,R1; H'41200000
    0000098E D27F                   MOV.L       L1295+10,R2; __adds
    00000990 420B                   JSR         @R2
    00000992 0009                   NOP
    00000994 A0D4                   BRA         L1042
    00000996 1A02                   MOV.L       R0,@(8,R10)
    00000998              L1031:                            
      Elements.c   250        }
      Elements.c   251        else if (vehicule <= 0 || vehicule == 2 || vehicule == 3)
    00000998 4B15                   CMP/PL      R11
    0000099A 8B07                   BF          L1044
    0000099C 60B3                   MOV         R11,R0
    0000099E 8802                   CMP/EQ      #2,R0
    000009A0 8904                   BT          L1044
    000009A2 60B3                   MOV         R11,R0
    000009A4 8803                   CMP/EQ      #3,R0
    000009A6 8901                   BT          L1296
    000009A8 A08F                   BRA         L1043
    000009AA 0009                   NOP
    000009AC              L1296:                            
    000009AC              L1044:                            
      Elements.c   252        {
      Elements.c   253            type = rand()%3;
    000009AC 4D0B                   JSR         @R13
    000009AE 0009                   NOP
    000009B0 D374                   MOV.L       L1295+2,R3 ; __modls
    000009B2 6103                   MOV         R0,R1
    000009B4 430B                   JSR         @R3
    000009B6 E003                   MOV         #3,R0
    000009B8 6503                   MOV         R0,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   254            for (x=0;x<6&&!missile[x].exists;x++);
    000009BA E606                   MOV         #6,R6
    000009BC A001                   BRA         L1045
    000009BE E400                   MOV         #0,R4
    000009C0              L1046:                            
    000009C0 7401                   ADD         #1,R4
    000009C2              L1045:                            
    000009C2 3463                   CMP/GE      R6,R4
    000009C4 8906                   BT          L1047
    000009C6 6243                   MOV         R4,R2
    000009C8 D072                   MOV.L       L1295+18,R0; H'00000008+_missile
    000009CA 4208                   SHLL2       R2
    000009CC 4208                   SHLL2       R2
    000009CE 032E                   MOV.L       @(R0,R2),R3
    000009D0 2338                   TST         R3,R3
    000009D2 89F5                   BT          L1046
    000009D4              L1047:                            
      Elements.c   255            if (x!=6) type = 2;
    000009D4 6043                   MOV         R4,R0
    000009D6 8806                   CMP/EQ      #6,R0
    000009D8 8900                   BT          L1048
    000009DA E502                   MOV         #2,R5
    000009DC              L1048:                            
      Elements.c   256    
      Elements.c   257            if (type == 0)
    000009DC 2558                   TST         R5,R5
    000009DE 8B23                   BF          L1049
      Elements.c   258            {
      Elements.c   259                taille = rand()%(36+1-18)+(vehicule==3?14:18);
    000009E0 4D0B                   JSR         @R13
    000009E2 0009                   NOP
    000009E4 D367                   MOV.L       L1295+2,R3 ; __modls
    000009E6 6103                   MOV         R0,R1
    000009E8 430B                   JSR         @R3
    000009EA E013                   MOV         #19,R0
    000009EC 6803                   MOV         R0,R8
    000009EE 60B3                   MOV         R11,R0
    000009F0 8803                   CMP/EQ      #3,R0
    000009F2 8F02                   BF/S        L1050
    000009F4 6B83                   MOV         R8,R11
    000009F6 A001                   BRA         L1051
    000009F8 E20E                   MOV         #14,R2
    000009FA              L1050:                            
    000009FA E212                   MOV         #18,R2
    000009FC              L1051:                            
    000009FC 3B2C                   ADD         R2,R11
      Elements.c   260                zappeur[w].y1 = rand()%(53-taille+1-17)+17;
    000009FE 6AC3                   MOV         R12,R10
    00000A00 4D0B                   JSR         @R13
    00000A02 3AEC                   ADD         R14,R10
    00000A04 D25F                   MOV.L       L1295+2,R2 ; __modls
    00000A06 E325                   MOV         #37,R3
    00000A08 33B8                   SUB         R11,R3
    00000A0A 6103                   MOV         R0,R1
    00000A0C 420B                   JSR         @R2
    00000A0E 6033                   MOV         R3,R0
    00000A10 D35D                   MOV.L       L1295+6,R3 ; __itos




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A12 430B                   JSR         @R3
    00000A14 7011                   ADD         #17,R0
    00000A16 1A01                   MOV.L       R0,@(4,R10)
      Elements.c   261                zappeur[w].y2 = zappeur[w].y1 + taille;
    00000A18 D25B                   MOV.L       L1295+6,R2 ; __itos
    00000A1A 420B                   JSR         @R2
    00000A1C 60B3                   MOV         R11,R0
    00000A1E D35B                   MOV.L       L1295+10,R3; __adds
    00000A20 430B                   JSR         @R3
    00000A22 51A1                   MOV.L       @(4,R10),R1
    00000A24 A088                   BRA         L1279
    00000A26 1A03                   MOV.L       R0,@(12,R10)
    00000A28              L1049:                            
      Elements.c   262            }
      Elements.c   263            else if (type == 1)
    00000A28 6053                   MOV         R5,R0
    00000A2A 8801                   CMP/EQ      #1,R0
    00000A2C 8B23                   BF          L1053
      Elements.c   264            {
      Elements.c   265                taille = rand()%(36+1-18)+(vehicule==3?14:18);
    00000A2E 4D0B                   JSR         @R13
    00000A30 0009                   NOP
    00000A32 6103                   MOV         R0,R1
    00000A34 D253                   MOV.L       L1295+2,R2 ; __modls
    00000A36 420B                   JSR         @R2
    00000A38 E013                   MOV         #19,R0
    00000A3A 6803                   MOV         R0,R8
    00000A3C 60B3                   MOV         R11,R0
    00000A3E 8803                   CMP/EQ      #3,R0
    00000A40 8F02                   BF/S        L1054
    00000A42 6B83                   MOV         R8,R11
    00000A44 A001                   BRA         L1055
    00000A46 E30E                   MOV         #14,R3
    00000A48              L1054:                            
    00000A48 E312                   MOV         #18,R3
    00000A4A              L1055:                            
    00000A4A 3B3C                   ADD         R3,R11
      Elements.c   266                zappeur[w].y2 = rand()%(36+1-taille)+taille;
    00000A4C 6AC3                   MOV         R12,R10
    00000A4E 4D0B                   JSR         @R13
    00000A50 3AEC                   ADD         R14,R10
    00000A52 E325                   MOV         #37,R3
    00000A54 D24B                   MOV.L       L1295+2,R2 ; __modls
    00000A56 6103                   MOV         R0,R1
    00000A58 33B8                   SUB         R11,R3
    00000A5A 420B                   JSR         @R2
    00000A5C 6033                   MOV         R3,R0
    00000A5E D34A                   MOV.L       L1295+6,R3 ; __itos
    00000A60 430B                   JSR         @R3
    00000A62 30BC                   ADD         R11,R0
    00000A64 1A03                   MOV.L       R0,@(12,R10)
      Elements.c   267                zappeur[w].y1 = zappeur[w].y2 - taille;
    00000A66 D248                   MOV.L       L1295+6,R2 ; __itos
    00000A68 420B                   JSR         @R2
    00000A6A 60B3                   MOV         R11,R0
    00000A6C D34A                   MOV.L       L1295+22,R3; __subs
    00000A6E 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A70 51A3                   MOV.L       @(12,R10),R1
    00000A72 A061                   BRA         L1279
    00000A74 1A01                   MOV.L       R0,@(4,R10)
    00000A76              L1053:                            
      Elements.c   268            }
      Elements.c   269            else if (type == 2)
    00000A76 8802                   CMP/EQ      #2,R0
    00000A78 8B5E                   BF          L1279
      Elements.c   270            {
      Elements.c   271                taille = rand()%(19+1-18)+(vehicule==3?14:18);
    00000A7A 4D0B                   JSR         @R13
    00000A7C 0009                   NOP
    00000A7E 4011                   CMP/PZ      R0
    00000A80 8B01                   BF          L1058
    00000A82 A005                   BRA         L1059
    00000A84 C901                   AND         #1,R0
    00000A86              L1058:                            
    00000A86 6007                   NOT         R0,R0
    00000A88 7001                   ADD         #1,R0
    00000A8A C901                   AND         #1,R0
    00000A8C 6007                   NOT         R0,R0
    00000A8E 7001                   ADD         #1,R0
    00000A90              L1059:                            
    00000A90 6203                   MOV         R0,R2
    00000A92 60B3                   MOV         R11,R0
    00000A94 8803                   CMP/EQ      #3,R0
    00000A96 8B01                   BF          L1060
    00000A98 A001                   BRA         L1061
    00000A9A EA0E                   MOV         #14,R10
    00000A9C              L1060:                            
    00000A9C EA12                   MOV         #18,R10
    00000A9E              L1061:                            
    00000A9E 3A2C                   ADD         R2,R10
      Elements.c   272                zappeur[w].y1 = rand()%(36-taille+1-17)+17;
    00000AA0 6BC3                   MOV         R12,R11
    00000AA2 4D0B                   JSR         @R13
    00000AA4 3BEC                   ADD         R14,R11
    00000AA6 E314                   MOV         #20,R3
    00000AA8 D236                   MOV.L       L1295+2,R2 ; __modls
    00000AAA 6103                   MOV         R0,R1
    00000AAC 33A8                   SUB         R10,R3
    00000AAE 420B                   JSR         @R2
    00000AB0 6033                   MOV         R3,R0
    00000AB2 D335                   MOV.L       L1295+6,R3 ; __itos
    00000AB4 430B                   JSR         @R3
    00000AB6 7011                   ADD         #17,R0
    00000AB8 1B01                   MOV.L       R0,@(4,R11)
      Elements.c   273                zappeur[w].y2 = zappeur[w].y1 + taille;
    00000ABA D233                   MOV.L       L1295+6,R2 ; __itos
    00000ABC 420B                   JSR         @R2
    00000ABE 60A3                   MOV         R10,R0
    00000AC0 D332                   MOV.L       L1295+10,R3; __adds
    00000AC2 430B                   JSR         @R3
    00000AC4 51B1                   MOV.L       @(4,R11),R1
      Elements.c   274            }
      Elements.c   275    
      Elements.c   276            //zappeur[w].x2 = zappeur[w].x1 + (zappeur[w].pos==1?0:zappeur[w].y2-zappeur[w].y1);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   277            zappeur[w].x2 = zappeur[w].x1;
    00000AC6 A037                   BRA         L1279
    00000AC8 1B03                   MOV.L       R0,@(12,R11)
    00000ACA              L1043:                            
      Elements.c   278        }
      Elements.c   279        else
      Elements.c   280        {
      Elements.c   281            type = rand()%2;
    00000ACA 4D0B                   JSR         @R13
    00000ACC 0009                   NOP
    00000ACE 4011                   CMP/PZ      R0
    00000AD0 8B01                   BF          L1063
    00000AD2 A005                   BRA         L1064
    00000AD4 C901                   AND         #1,R0
    00000AD6              L1063:                            
    00000AD6 6007                   NOT         R0,R0
    00000AD8 7001                   ADD         #1,R0
    00000ADA C901                   AND         #1,R0
    00000ADC 6007                   NOT         R0,R0
    00000ADE 7001                   ADD         #1,R0
    00000AE0              L1064:                            
    00000AE0 6403                   MOV         R0,R4
      Elements.c   282    
      Elements.c   283            if (type == 0)
    00000AE2 2448                   TST         R4,R4
    00000AE4 8B09                   BF          L1065
      Elements.c   284            {
      Elements.c   285                taille = 14;
      Elements.c   286                zappeur[w].y1 = 39;
    00000AE6 64C3                   MOV         R12,R4
    00000AE8 D22C                   MOV.L       L1295+26,R2; H'421C0000
    00000AEA 34EC                   ADD         R14,R4
      Elements.c   287                zappeur[w].y2 = zappeur[w].y1 + taille;
    00000AEC D02C                   MOV.L       L1295+30,R0; H'41600000
    00000AEE 1421                   MOV.L       R2,@(4,R4)
    00000AF0 D326                   MOV.L       L1295+10,R3; __adds
    00000AF2 430B                   JSR         @R3
    00000AF4 6123                   MOV         R2,R1
    00000AF6 A01F                   BRA         L1279
    00000AF8 1403                   MOV.L       R0,@(12,R4)
    00000AFA              L1065:                            
      Elements.c   288            }
      Elements.c   289            else if (type == 1)
    00000AFA 6043                   MOV         R4,R0
    00000AFC 8801                   CMP/EQ      #1,R0
    00000AFE 8B1B                   BF          L1279
      Elements.c   290            {
      Elements.c   291                taille = rand()%(30+1-18)+18;
    00000B00 4D0B                   JSR         @R13
    00000B02 0009                   NOP
    00000B04 D21F                   MOV.L       L1295+2,R2 ; __modls
    00000B06 6103                   MOV         R0,R1
    00000B08 420B                   JSR         @R2
    00000B0A E00D                   MOV         #13,R0
    00000B0C 6B03                   MOV         R0,R11
    00000B0E 7B12                   ADD         #18,R11
      Elements.c   292                zappeur[w].y2 = rand()%(30+1-taille)+taille;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B10 6AC3                   MOV         R12,R10
    00000B12 4D0B                   JSR         @R13
    00000B14 3AEC                   ADD         R14,R10
    00000B16 E31F                   MOV         #31,R3
    00000B18 D21A                   MOV.L       L1295+2,R2 ; __modls
    00000B1A 6103                   MOV         R0,R1
    00000B1C 33B8                   SUB         R11,R3
    00000B1E 420B                   JSR         @R2
    00000B20 6033                   MOV         R3,R0
    00000B22 D319                   MOV.L       L1295+6,R3 ; __itos
    00000B24 430B                   JSR         @R3
    00000B26 30BC                   ADD         R11,R0
    00000B28 1A03                   MOV.L       R0,@(12,R10)
      Elements.c   293                zappeur[w].y1 = zappeur[w].y2 - taille;
    00000B2A D217                   MOV.L       L1295+6,R2 ; __itos
    00000B2C 420B                   JSR         @R2
    00000B2E 60B3                   MOV         R11,R0
    00000B30 D319                   MOV.L       L1295+22,R3; __subs
    00000B32 430B                   JSR         @R3
    00000B34 51A3                   MOV.L       @(12,R10),R1
    00000B36 1A01                   MOV.L       R0,@(4,R10)
    00000B38              L1279:                            
    00000B38 64C3                   MOV         R12,R4
    00000B3A 34EC                   ADD         R14,R4
    00000B3C 6242                   MOV.L       @R4,R2
    00000B3E 1422                   MOV.L       R2,@(8,R4)
    00000B40              L1042:                            
      Elements.c   294            }
      Elements.c   295    
      Elements.c   296            //zappeur[w].x2 = zappeur[w].x1 + (zappeur[w].pos==1?0:zappeur[w].y2-zappeur[w].y1);
      Elements.c   297            zappeur[w].x2 = zappeur[w].x1;
      Elements.c   298    
      Elements.c   299            /*if (rand()%2 && zappeur[w].pos==2)
      Elements.c   300            {
      Elements.c   301                change = zappeur[w].x2;
      Elements.c   302                zappeur[w].x2 = zappeur[w].x1;
      Elements.c   303                zappeur[w].x1 = change;
      Elements.c   304            }*/
      Elements.c   305        }
      Elements.c   306    
      Elements.c   307        return abs((int)(zappeur[w].x2-zappeur[w].x1));
    00000B40 D315                   MOV.L       L1295+22,R3; __subs
    00000B42 61C3                   MOV         R12,R1
    00000B44 31EC                   ADD         R14,R1
    00000B46 6013                   MOV         R1,R0
    00000B48 2F12                   MOV.L       R1,@R15
    00000B4A 5112                   MOV.L       @(8,R1),R1
    00000B4C 430B                   JSR         @R3
    00000B4E 6002                   MOV.L       @R0,R0
    00000B50 D214                   MOV.L       L1295+34,R2; __stoi
    00000B52 420B                   JSR         @R2
    00000B54 0009                   NOP
    00000B56 6403                   MOV         R0,R4
    00000B58 D313                   MOV.L       L1295+38,R3; _abs
    00000B5A 7F04                   ADD         #4,R15
    00000B5C 4F16                   LDS.L       @R15+,MACL
    00000B5E 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B60 68F6                   MOV.L       @R15+,R8
    00000B62 6AF6                   MOV.L       @R15+,R10
    00000B64 6BF6                   MOV.L       @R15+,R11
    00000B66 6CF6                   MOV.L       @R15+,R12
    00000B68 6DF6                   MOV.L       @R15+,R13
    00000B6A 432B                   JMP         @R3
    00000B6C 6EF6                   MOV.L       @R15+,R14
    00000B6E              L1028:                            
      Elements.c   308    }
    00000B6E 7F04                   ADD         #4,R15
    00000B70 4F16                   LDS.L       @R15+,MACL
    00000B72 4F26                   LDS.L       @R15+,PR
    00000B74 68F6                   MOV.L       @R15+,R8
    00000B76 6AF6                   MOV.L       @R15+,R10
    00000B78 6BF6                   MOV.L       @R15+,R11
    00000B7A 6CF6                   MOV.L       @R15+,R12
    00000B7C 6DF6                   MOV.L       @R15+,R13
    00000B7E 000B                   RTS
    00000B80 6EF6                   MOV.L       @R15+,R14
    00000B82              L1295:                            
    00000B82 0000                   .DATA.W     0
    00000B84 <00000000>             .DATA.L     __modls
    00000B88 <00000000>             .DATA.L     __itos
    00000B8C <00000000>             .DATA.L     __adds
    00000B90 41200000               .DATA.L     H'41200000
    00000B94 <00000008>             .DATA.L     H'00000008+_missile
    00000B98 <00000000>             .DATA.L     __subs
    00000B9C 421C0000               .DATA.L     H'421C0000
    00000BA0 41600000               .DATA.L     H'41600000
    00000BA4 <00000000>             .DATA.L     __stoi
    00000BA8 <00000000>             .DATA.L     _abs
      Elements.c   309    int deplacerZappeurs(float vitesseDecalage)
    00000BAC              _deplacerZappeurs:               ; function: deplacerZappeurs
                                                           ; frame size=44
                                                           ; used runtime library name:
                                                           ; __subs, __eqs, __nes, __lts
    00000BAC 2FE6                   MOV.L       R14,@-R15
    00000BAE 2FD6                   MOV.L       R13,@-R15
    00000BB0 2FC6                   MOV.L       R12,@-R15
      Elements.c   310    {
      Elements.c   311        int w, zapNumber = 0;
    00000BB2 ED00                   MOV         #0,R13
    00000BB4 2FB6                   MOV.L       R11,@-R15
    00000BB6 2FA6                   MOV.L       R10,@-R15
    00000BB8 2F96                   MOV.L       R9,@-R15
      Elements.c   312    
      Elements.c   313        for (w = 0; w < 5; w++)
    00000BBA 69D3                   MOV         R13,R9
    00000BBC 2F86                   MOV.L       R8,@-R15
    00000BBE E81C                   MOV         #28,R8
    00000BC0 4F22                   STS.L       PR,@-R15
    00000BC2 4F12                   STS.L       MACL,@-R15
    00000BC4 7FF8                   ADD         #-8,R15
    00000BC6 2F42                   MOV.L       R4,@R15
    00000BC8 1FD1                   MOV.L       R13,@(4,R15)
    00000BCA D475                   MOV.L       L1297+2,R4 ; _zappeur
    00000BCC 6C43                   MOV         R4,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BCE 6E43                   MOV         R4,R14
    00000BD0 A04C                   BRA         L1068
    00000BD2 6B43                   MOV         R4,R11
    00000BD4              L1069:                            
    00000BD4 0987                   MUL.L       R8,R9
    00000BD6 0A1A                   STS         MACL,R10
    00000BD8 D371                   MOV.L       L1297+2,R3 ; _zappeur
    00000BDA 3A3C                   ADD         R3,R10
    00000BDC 52A4                   MOV.L       @(16,R10),R2
    00000BDE 2228                   TST         R2,R2
    00000BE0 8940                   BT          L1072
      Elements.c   314            if (zappeur[w].exists) // si le zappeur existe
      Elements.c   315            {
      Elements.c   316                if (zappeur[w].x1 < -10 && zappeur[w].x2 < -10) // si il est en dehors de l'ecran on indique q
                         +u'il n'existe plus
    00000BE2 D070                   MOV.L       L1297+6,R0 ; H'C1200000
    00000BE4 D270                   MOV.L       L1297+10,R2; __lts
    00000BE6 420B                   JSR         @R2
    00000BE8 61A2                   MOV.L       @R10,R1
    00000BEA 8800                   CMP/EQ      #0,R0
    00000BEC 8907                   BT          L1071
    00000BEE D06D                   MOV.L       L1297+6,R0 ; H'C1200000
    00000BF0 D26D                   MOV.L       L1297+10,R2; __lts
    00000BF2 420B                   JSR         @R2
    00000BF4 51A2                   MOV.L       @(8,R10),R1
    00000BF6 8800                   CMP/EQ      #0,R0
    00000BF8 8901                   BT          L1071
      Elements.c   317                {
      Elements.c   318                    zappeur[w].exists = 0;
      Elements.c   319                    continue;
    00000BFA A033                   BRA         L1072
    00000BFC 1BD4                   MOV.L       R13,@(16,R11)
    00000BFE              L1071:                            
      Elements.c   320                }
      Elements.c   321                zappeur[w].x1-=vitesseDecalage; // sinon on le deplace
    00000BFE 60F2                   MOV.L       @R15,R0
    00000C00 D26A                   MOV.L       L1297+14,R2; __subs
    00000C02 420B                   JSR         @R2
    00000C04 61E2                   MOV.L       @R14,R1
    00000C06 2E02                   MOV.L       R0,@R14
      Elements.c   322                zappeur[w].x2-=vitesseDecalage;
    00000C08 60F2                   MOV.L       @R15,R0
    00000C0A D368                   MOV.L       L1297+14,R3; __subs
    00000C0C 430B                   JSR         @R3
    00000C0E 51E2                   MOV.L       @(8,R14),R1
    00000C10 1E02                   MOV.L       R0,@(8,R14)
      Elements.c   323                zapNumber++;
    00000C12 52F1                   MOV.L       @(4,R15),R2
      Elements.c   324    
      Elements.c   325                if ((sauvegarde->gadgetEquipe[0] == 12 || sauvegarde->gadgetEquipe[1] == 12) && (zappeur[w].x1
                         + == 60 || zappeur[w].x1 == 61) && rand()%4==1) zappeur[w].active = 0;
    00000C14 D366                   MOV.L       L1297+18,R3; _sauvegarde
    00000C16 7201                   ADD         #1,R2
    00000C18 1F21                   MOV.L       R2,@(4,R15)
    00000C1A 6A32                   MOV.L       @R3,R10
    00000C1C 7A0C                   ADD         #12,R10
    00000C1E 60A0                   MOV.B       @R10,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C20 600C                   EXTU.B      R0,R0
    00000C22 880C                   CMP/EQ      #12,R0
    00000C24 8903                   BT          L1074
    00000C26 84A1                   MOV.B       @(1,R10),R0
    00000C28 600C                   EXTU.B      R0,R0
    00000C2A 880C                   CMP/EQ      #12,R0
    00000C2C 8B1A                   BF          L1072
    00000C2E              L1074:                            
    00000C2E D061                   MOV.L       L1297+22,R0; H'42700000
    00000C30 D361                   MOV.L       L1297+26,R3; __eqs
    00000C32 430B                   JSR         @R3
    00000C34 61E2                   MOV.L       @R14,R1
    00000C36 8800                   CMP/EQ      #0,R0
    00000C38 8B05                   BF          L1075
    00000C3A D060                   MOV.L       L1297+30,R0; H'42740000
    00000C3C D260                   MOV.L       L1297+34,R2; __nes
    00000C3E 420B                   JSR         @R2
    00000C40 61E2                   MOV.L       @R14,R1
    00000C42 8800                   CMP/EQ      #0,R0
    00000C44 8B0E                   BF          L1072
    00000C46              L1075:                            
    00000C46 D35F                   MOV.L       L1297+38,R3; _rand
    00000C48 430B                   JSR         @R3
    00000C4A 0009                   NOP
    00000C4C 4011                   CMP/PZ      R0
    00000C4E 8B01                   BF          L1076
    00000C50 A005                   BRA         L1077
    00000C52 C903                   AND         #3,R0
    00000C54              L1076:                            
    00000C54 6007                   NOT         R0,R0
    00000C56 7001                   ADD         #1,R0
    00000C58 C903                   AND         #3,R0
    00000C5A 6007                   NOT         R0,R0
    00000C5C 7001                   ADD         #1,R0
    00000C5E              L1077:                            
    00000C5E 8801                   CMP/EQ      #1,R0
    00000C60 8B00                   BF          L1072
    00000C62 1CD6                   MOV.L       R13,@(24,R12)
    00000C64              L1072:                            
    00000C64 7901                   ADD         #1,R9
    00000C66 7C1C                   ADD         #28,R12
    00000C68 7E1C                   ADD         #28,R14
    00000C6A 7B1C                   ADD         #28,R11
    00000C6C              L1068:                            
    00000C6C E305                   MOV         #5,R3
    00000C6E 3933                   CMP/GE      R3,R9
    00000C70 8BB0                   BF          L1069
      Elements.c   326            }
      Elements.c   327    
      Elements.c   328        return zapNumber;
    00000C72 50F1                   MOV.L       @(4,R15),R0
      Elements.c   329    }
    00000C74 7F08                   ADD         #8,R15
    00000C76 4F16                   LDS.L       @R15+,MACL
    00000C78 4F26                   LDS.L       @R15+,PR
    00000C7A 68F6                   MOV.L       @R15+,R8
    00000C7C 69F6                   MOV.L       @R15+,R9




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C7E 6AF6                   MOV.L       @R15+,R10
    00000C80 6BF6                   MOV.L       @R15+,R11
    00000C82 6CF6                   MOV.L       @R15+,R12
    00000C84 6DF6                   MOV.L       @R15+,R13
    00000C86 000B                   RTS
    00000C88 6EF6                   MOV.L       @R15+,R14
      Elements.c   330    void afficherZappeurs(int lvl)
    00000C8A              _afficherZappeurs:               ; function: afficherZappeurs
                                                           ; frame size=48
                                                           ; used runtime library name:
                                                           ; __modls, __adds, __stoi, __itos
    00000C8A 6143                   MOV         R4,R1
    00000C8C D34E                   MOV.L       L1297+42,R3; __modls
    00000C8E 2FE6                   MOV.L       R14,@-R15
    00000C90 2FD6                   MOV.L       R13,@-R15
    00000C92 2FC6                   MOV.L       R12,@-R15
    00000C94 2FB6                   MOV.L       R11,@-R15
      Elements.c   331    {
      Elements.c   332        int v, w;
      Elements.c   333    
      Elements.c   334        for (v = 0; v < 5; v++)
    00000C96 EC00                   MOV         #0,R12
    00000C98 2FA6                   MOV.L       R10,@-R15
    00000C9A 2F96                   MOV.L       R9,@-R15
    00000C9C 2F86                   MOV.L       R8,@-R15
    00000C9E 4F22                   STS.L       PR,@-R15
    00000CA0 4F12                   STS.L       MACL,@-R15
    00000CA2 7FF8                   ADD         #-8,R15
    00000CA4 2FC2                   MOV.L       R12,@R15
    00000CA6 430B                   JSR         @R3
    00000CA8 E006                   MOV         #6,R0
    00000CAA E801                   MOV         #1,R8
    00000CAC DB47                   MOV.L       L1297+46,R11; _ML_line
    00000CAE E903                   MOV         #3,R9
    00000CB0 1F01                   MOV.L       R0,@(4,R15)
    00000CB2              L1079:                            
    00000CB2 E31C                   MOV         #28,R3
    00000CB4 62F2                   MOV.L       @R15,R2
    00000CB6 0237                   MUL.L       R3,R2
    00000CB8 D139                   MOV.L       L1297+2,R1 ; _zappeur
    00000CBA 0E1A                   STS         MACL,R14
    00000CBC 3E1C                   ADD         R1,R14
    00000CBE 52E4                   MOV.L       @(16,R14),R2
    00000CC0 2228                   TST         R2,R2
    00000CC2 8B01                   BF          L1298
    00000CC4 A121                   BRA         L1080
    00000CC6 0009                   NOP
    00000CC8              L1298:                            
      Elements.c   335        {
      Elements.c   336            if (zappeur[v].exists) // si le zappeur existe
      Elements.c   337            {
      Elements.c   338                if (zappeur[v].active)
    00000CC8 52E6                   MOV.L       @(24,R14),R2
    00000CCA 2228                   TST         R2,R2
    00000CCC 8B01                   BF          L1299
    00000CCE A0EA                   BRA         L1081
    00000CD0 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CD2              L1299:                            
      Elements.c   339                {
      Elements.c   340                    for (w=0; w < 4; w++)
    00000CD2 6AC3                   MOV         R12,R10
    00000CD4              L1082:                            
    00000CD4 D33E                   MOV.L       L1297+50,R3; __itos
    00000CD6 430B                   JSR         @R3
    00000CD8 60A3                   MOV         R10,R0
    00000CDA 52E5                   MOV.L       @(20,R14),R2
    00000CDC 2228                   TST         R2,R2
    00000CDE 8F02                   BF/S        L1300
    00000CE0 6D03                   MOV         R0,R13
    00000CE2 A081                   BRA         L1083
    00000CE4 0009                   NOP
    00000CE6              L1300:                            
      Elements.c   341                        if (zappeur[v].pos)
      Elements.c   342                        {
      Elements.c   343                            ML_line(zappeur[v].x1+w+3,zappeur[v].y1+5,zappeur[v].x2+w+3,zappeur[v].y2+4,ML_WHI
                         +TE); // affichage du "zap"
    00000CE6 2FC6                   MOV.L       R12,@-R15
    00000CE8 D03A                   MOV.L       L1297+54,R0; H'40800000
    00000CEA D33B                   MOV.L       L1297+58,R3; __adds
    00000CEC 430B                   JSR         @R3
    00000CEE 51E3                   MOV.L       @(12,R14),R1
    00000CF0 D23A                   MOV.L       L1297+62,R2; __stoi
    00000CF2 420B                   JSR         @R2
    00000CF4 0009                   NOP
    00000CF6 6703                   MOV         R0,R7
    00000CF8 51E2                   MOV.L       @(8,R14),R1
    00000CFA D337                   MOV.L       L1297+58,R3; __adds
    00000CFC 430B                   JSR         @R3
    00000CFE 60D3                   MOV         R13,R0
    00000D00 D137                   MOV.L       L1297+66,R1; H'40400000
    00000D02 D235                   MOV.L       L1297+58,R2; __adds
    00000D04 420B                   JSR         @R2
    00000D06 0009                   NOP
    00000D08 D334                   MOV.L       L1297+62,R3; __stoi
    00000D0A 430B                   JSR         @R3
    00000D0C 0009                   NOP
    00000D0E 6603                   MOV         R0,R6
    00000D10 D231                   MOV.L       L1297+58,R2; __adds
    00000D12 D034                   MOV.L       L1297+70,R0; H'40A00000
    00000D14 420B                   JSR         @R2
    00000D16 51E1                   MOV.L       @(4,R14),R1
    00000D18 D330                   MOV.L       L1297+62,R3; __stoi
    00000D1A 430B                   JSR         @R3
    00000D1C 0009                   NOP
    00000D1E 6503                   MOV         R0,R5
    00000D20 61E2                   MOV.L       @R14,R1
    00000D22 D22D                   MOV.L       L1297+58,R2; __adds
    00000D24 420B                   JSR         @R2
    00000D26 60D3                   MOV         R13,R0
    00000D28 D12D                   MOV.L       L1297+66,R1; H'40400000
    00000D2A D32B                   MOV.L       L1297+58,R3; __adds
    00000D2C 430B                   JSR         @R3
    00000D2E 0009                   NOP
    00000D30 D22A                   MOV.L       L1297+62,R2; __stoi




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D32 420B                   JSR         @R2
    00000D34 0009                   NOP
    00000D36 4B0B                   JSR         @R11
    00000D38 6403                   MOV         R0,R4
    00000D3A 7F04                   ADD         #4,R15
      Elements.c   344                            if (lvl%6<3) ML_line(zappeur[v].x1+w+3,zappeur[v].y1+5,zappeur[v].x2+w+3,zappeur[v
                         +].y2+4,ML_BLACK);
    00000D3C 53F1                   MOV.L       @(4,R15),R3
    00000D3E 3393                   CMP/GE      R9,R3
    00000D40 8B01                   BF          L1301
    00000D42 A0AA                   BRA         L1085
    00000D44 0009                   NOP
    00000D46              L1301:                            
    00000D46 2F86                   MOV.L       R8,@-R15
    00000D48 D022                   MOV.L       L1297+54,R0; H'40800000
    00000D4A D323                   MOV.L       L1297+58,R3; __adds
    00000D4C 430B                   JSR         @R3
    00000D4E 51E3                   MOV.L       @(12,R14),R1
    00000D50 D222                   MOV.L       L1297+62,R2; __stoi
    00000D52 420B                   JSR         @R2
    00000D54 0009                   NOP
    00000D56 6703                   MOV         R0,R7
    00000D58 51E2                   MOV.L       @(8,R14),R1
    00000D5A D31F                   MOV.L       L1297+58,R3; __adds
    00000D5C 430B                   JSR         @R3
    00000D5E 60D3                   MOV         R13,R0
    00000D60 D11F                   MOV.L       L1297+66,R1; H'40400000
    00000D62 D21D                   MOV.L       L1297+58,R2; __adds
    00000D64 420B                   JSR         @R2
    00000D66 0009                   NOP
    00000D68 D31C                   MOV.L       L1297+62,R3; __stoi
    00000D6A 430B                   JSR         @R3
    00000D6C 0009                   NOP
    00000D6E 6603                   MOV         R0,R6
    00000D70 D219                   MOV.L       L1297+58,R2; __adds
    00000D72 D01C                   MOV.L       L1297+70,R0; H'40A00000
    00000D74 420B                   JSR         @R2
    00000D76 51E1                   MOV.L       @(4,R14),R1
    00000D78 D318                   MOV.L       L1297+62,R3; __stoi
    00000D7A 430B                   JSR         @R3
    00000D7C 0009                   NOP
    00000D7E 6503                   MOV         R0,R5
    00000D80 61E2                   MOV.L       @R14,R1
    00000D82 D215                   MOV.L       L1297+58,R2; __adds
    00000D84 420B                   JSR         @R2
    00000D86 60D3                   MOV         R13,R0
    00000D88 D115                   MOV.L       L1297+66,R1; H'40400000
    00000D8A D313                   MOV.L       L1297+58,R3; __adds
    00000D8C 430B                   JSR         @R3
    00000D8E 0009                   NOP
    00000D90 D212                   MOV.L       L1297+62,R2; __stoi
    00000D92 420B                   JSR         @R2
    00000D94 0009                   NOP
    00000D96 4B0B                   JSR         @R11
    00000D98 6403                   MOV         R0,R4
    00000D9A A07E                   BRA         L1085
    00000D9C 7F04                   ADD         #4,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D9E              L1297:                            
    00000D9E 0000                   .DATA.W     0
    00000DA0 <00000000>             .DATA.L     _zappeur
    00000DA4 C1200000               .DATA.L     H'C1200000
    00000DA8 <00000000>             .DATA.L     __lts
    00000DAC <00000000>             .DATA.L     __subs
    00000DB0 <00000000>             .DATA.L     _sauvegarde
    00000DB4 42700000               .DATA.L     H'42700000
    00000DB8 <00000000>             .DATA.L     __eqs
    00000DBC 42740000               .DATA.L     H'42740000
    00000DC0 <00000000>             .DATA.L     __nes
    00000DC4 <00000000>             .DATA.L     _rand
    00000DC8 <00000000>             .DATA.L     __modls
    00000DCC <00000000>             .DATA.L     _ML_line
    00000DD0 <00000000>             .DATA.L     __itos
    00000DD4 40800000               .DATA.L     H'40800000
    00000DD8 <00000000>             .DATA.L     __adds
    00000DDC <00000000>             .DATA.L     __stoi
    00000DE0 40400000               .DATA.L     H'40400000
    00000DE4 40A00000               .DATA.L     H'40A00000
    00000DE8              L1083:                            
      Elements.c   345                        }
      Elements.c   346                        else
      Elements.c   347                        {
      Elements.c   348                            ML_line(zappeur[v].x1+3,zappeur[v].y1+w+3,zappeur[v].x2+3,zappeur[v].y2+w+3,ML_WHI
                         +TE);
    00000DE8 2FC6                   MOV.L       R12,@-R15
    00000DEA 51E3                   MOV.L       @(12,R14),R1
    00000DEC D250                   MOV.L       L1302,R2   ; __adds
    00000DEE 420B                   JSR         @R2
    00000DF0 60D3                   MOV         R13,R0
    00000DF2 D150                   MOV.L       L1302+4,R1 ; H'40400000
    00000DF4 D34E                   MOV.L       L1302,R3   ; __adds
    00000DF6 430B                   JSR         @R3
    00000DF8 0009                   NOP
    00000DFA D24F                   MOV.L       L1302+8,R2 ; __stoi
    00000DFC 420B                   JSR         @R2
    00000DFE 0009                   NOP
    00000E00 D34B                   MOV.L       L1302,R3   ; __adds
    00000E02 6703                   MOV         R0,R7
    00000E04 D04B                   MOV.L       L1302+4,R0 ; H'40400000
    00000E06 430B                   JSR         @R3
    00000E08 51E2                   MOV.L       @(8,R14),R1
    00000E0A D24B                   MOV.L       L1302+8,R2 ; __stoi
    00000E0C 420B                   JSR         @R2
    00000E0E 0009                   NOP
    00000E10 51E1                   MOV.L       @(4,R14),R1
    00000E12 6603                   MOV         R0,R6
    00000E14 D346                   MOV.L       L1302,R3   ; __adds
    00000E16 430B                   JSR         @R3
    00000E18 60D3                   MOV         R13,R0
    00000E1A D146                   MOV.L       L1302+4,R1 ; H'40400000
    00000E1C D244                   MOV.L       L1302,R2   ; __adds
    00000E1E 420B                   JSR         @R2
    00000E20 0009                   NOP
    00000E22 D345                   MOV.L       L1302+8,R3 ; __stoi
    00000E24 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E26 0009                   NOP
    00000E28 D241                   MOV.L       L1302,R2   ; __adds
    00000E2A 6503                   MOV         R0,R5
    00000E2C D041                   MOV.L       L1302+4,R0 ; H'40400000
    00000E2E 420B                   JSR         @R2
    00000E30 61E2                   MOV.L       @R14,R1
    00000E32 D341                   MOV.L       L1302+8,R3 ; __stoi
    00000E34 430B                   JSR         @R3
    00000E36 0009                   NOP
    00000E38 4B0B                   JSR         @R11
    00000E3A 6403                   MOV         R0,R4
    00000E3C 7F04                   ADD         #4,R15
      Elements.c   349                            if (lvl%6<3) ML_line(zappeur[v].x1+3,zappeur[v].y1+w+3,zappeur[v].x2+3,zappeur[v].
                         +y2+w+3,ML_BLACK);
    00000E3E 52F1                   MOV.L       @(4,R15),R2
    00000E40 3293                   CMP/GE      R9,R2
    00000E42 892A                   BT          L1085
    00000E44 2F86                   MOV.L       R8,@-R15
    00000E46 51E3                   MOV.L       @(12,R14),R1
    00000E48 D239                   MOV.L       L1302,R2   ; __adds
    00000E4A 420B                   JSR         @R2
    00000E4C 60D3                   MOV         R13,R0
    00000E4E D139                   MOV.L       L1302+4,R1 ; H'40400000
    00000E50 D337                   MOV.L       L1302,R3   ; __adds
    00000E52 430B                   JSR         @R3
    00000E54 0009                   NOP
    00000E56 D238                   MOV.L       L1302+8,R2 ; __stoi
    00000E58 420B                   JSR         @R2
    00000E5A 0009                   NOP
    00000E5C D334                   MOV.L       L1302,R3   ; __adds
    00000E5E 6703                   MOV         R0,R7
    00000E60 D034                   MOV.L       L1302+4,R0 ; H'40400000
    00000E62 430B                   JSR         @R3
    00000E64 51E2                   MOV.L       @(8,R14),R1
    00000E66 D234                   MOV.L       L1302+8,R2 ; __stoi
    00000E68 420B                   JSR         @R2
    00000E6A 0009                   NOP
    00000E6C 51E1                   MOV.L       @(4,R14),R1
    00000E6E 6603                   MOV         R0,R6
    00000E70 D32F                   MOV.L       L1302,R3   ; __adds
    00000E72 430B                   JSR         @R3
    00000E74 60D3                   MOV         R13,R0
    00000E76 D12F                   MOV.L       L1302+4,R1 ; H'40400000
    00000E78 D22D                   MOV.L       L1302,R2   ; __adds
    00000E7A 420B                   JSR         @R2
    00000E7C 0009                   NOP
    00000E7E D32E                   MOV.L       L1302+8,R3 ; __stoi
    00000E80 430B                   JSR         @R3
    00000E82 0009                   NOP
    00000E84 D22A                   MOV.L       L1302,R2   ; __adds
    00000E86 6503                   MOV         R0,R5
    00000E88 D02A                   MOV.L       L1302+4,R0 ; H'40400000
    00000E8A 420B                   JSR         @R2
    00000E8C 61E2                   MOV.L       @R14,R1
    00000E8E D32A                   MOV.L       L1302+8,R3 ; __stoi
    00000E90 430B                   JSR         @R3
    00000E92 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E94 4B0B                   JSR         @R11
    00000E96 6403                   MOV         R0,R4
    00000E98 7F04                   ADD         #4,R15
    00000E9A              L1085:                            
    00000E9A 7A01                   ADD         #1,R10
    00000E9C E204                   MOV         #4,R2
    00000E9E 3A23                   CMP/GE      R2,R10
    00000EA0 8901                   BT          L1303
    00000EA2 AF17                   BRA         L1082
    00000EA4 0009                   NOP
    00000EA6              L1303:                            
    00000EA6              L1081:                            
      Elements.c   350                        }
      Elements.c   351                }
      Elements.c   352    
      Elements.c   353                ML_bmp_16_and_cl(zapAlpha,zappeur[v].x1,zappeur[v].y1); // masque alpha des zappeurs
    00000EA6 E31C                   MOV         #28,R3
    00000EA8 62F2                   MOV.L       @R15,R2
    00000EAA 0237                   MUL.L       R3,R2
    00000EAC D123                   MOV.L       L1302+12,R1; _zappeur
    00000EAE 0E1A                   STS         MACL,R14
    00000EB0 D221                   MOV.L       L1302+8,R2 ; __stoi
    00000EB2 3E1C                   ADD         R1,R14
    00000EB4 420B                   JSR         @R2
    00000EB6 50E1                   MOV.L       @(4,R14),R0
    00000EB8 D21F                   MOV.L       L1302+8,R2 ; __stoi
    00000EBA 6603                   MOV         R0,R6
    00000EBC 420B                   JSR         @R2
    00000EBE 60E2                   MOV.L       @R14,R0
    00000EC0 D41F                   MOV.L       L1302+16,R4; __$zapAlpha
    00000EC2 D220                   MOV.L       L1302+20,R2; _ML_bmp_16_and_cl
    00000EC4 420B                   JSR         @R2
    00000EC6 6503                   MOV         R0,R5
      Elements.c   354                ML_bmp_16_and_cl(zapAlpha,zappeur[v].x2,zappeur[v].y2);
    00000EC8 D31B                   MOV.L       L1302+8,R3 ; __stoi
    00000ECA 430B                   JSR         @R3
    00000ECC 50E3                   MOV.L       @(12,R14),R0
    00000ECE 6603                   MOV         R0,R6
    00000ED0 D219                   MOV.L       L1302+8,R2 ; __stoi
    00000ED2 420B                   JSR         @R2
    00000ED4 50E2                   MOV.L       @(8,R14),R0
    00000ED6 D41A                   MOV.L       L1302+16,R4; __$zapAlpha
    00000ED8 D31A                   MOV.L       L1302+20,R3; _ML_bmp_16_and_cl
    00000EDA 430B                   JSR         @R3
    00000EDC 6503                   MOV         R0,R5
      Elements.c   355                ML_bmp_16_or_cl(zap,zappeur[v].x1,zappeur[v].y1); // affichage des extremites des zappeurs
    00000EDE D216                   MOV.L       L1302+8,R2 ; __stoi
    00000EE0 420B                   JSR         @R2
    00000EE2 50E1                   MOV.L       @(4,R14),R0
    00000EE4 D314                   MOV.L       L1302+8,R3 ; __stoi
    00000EE6 6603                   MOV         R0,R6
    00000EE8 430B                   JSR         @R3
    00000EEA 60E2                   MOV.L       @R14,R0
    00000EEC D416                   MOV.L       L1302+24,R4; __$zap
    00000EEE D217                   MOV.L       L1302+28,R2; _ML_bmp_16_or_cl
    00000EF0 420B                   JSR         @R2
    00000EF2 6503                   MOV         R0,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   356                ML_bmp_16_or_cl(zap,zappeur[v].x2,zappeur[v].y2);
    00000EF4 D310                   MOV.L       L1302+8,R3 ; __stoi
    00000EF6 430B                   JSR         @R3
    00000EF8 50E3                   MOV.L       @(12,R14),R0
    00000EFA 6603                   MOV         R0,R6
    00000EFC D20E                   MOV.L       L1302+8,R2 ; __stoi
    00000EFE 420B                   JSR         @R2
    00000F00 50E2                   MOV.L       @(8,R14),R0
    00000F02 D411                   MOV.L       L1302+24,R4; __$zap
    00000F04 D311                   MOV.L       L1302+28,R3; _ML_bmp_16_or_cl
    00000F06 430B                   JSR         @R3
    00000F08 6503                   MOV         R0,R5
    00000F0A              L1080:                            
    00000F0A E305                   MOV         #5,R3
    00000F0C 62F2                   MOV.L       @R15,R2
    00000F0E 7201                   ADD         #1,R2
    00000F10 3233                   CMP/GE      R3,R2
    00000F12 8D02                   BT/S        L1304
    00000F14 2F22                   MOV.L       R2,@R15
    00000F16 AECC                   BRA         L1079
    00000F18 0009                   NOP
    00000F1A              L1304:                            
      Elements.c   357            }
      Elements.c   358        }
      Elements.c   359    }
    00000F1A 7F08                   ADD         #8,R15
    00000F1C 4F16                   LDS.L       @R15+,MACL
    00000F1E 4F26                   LDS.L       @R15+,PR
    00000F20 68F6                   MOV.L       @R15+,R8
    00000F22 69F6                   MOV.L       @R15+,R9
    00000F24 6AF6                   MOV.L       @R15+,R10
    00000F26 6BF6                   MOV.L       @R15+,R11
    00000F28 6CF6                   MOV.L       @R15+,R12
    00000F2A 6DF6                   MOV.L       @R15+,R13
    00000F2C 000B                   RTS
    00000F2E 6EF6                   MOV.L       @R15+,R14
    00000F30              L1302:                            
    00000F30 <00000000>             .DATA.L     __adds
    00000F34 40400000               .DATA.L     H'40400000
    00000F38 <00000000>             .DATA.L     __stoi
    00000F3C <00000000>             .DATA.L     _zappeur
    00000F40 <00000000>             .DATA.L     __$zapAlpha
    00000F44 <00000000>             .DATA.L     _ML_bmp_16_and_cl
    00000F48 <00000000>             .DATA.L     __$zap
    00000F4C <00000000>             .DATA.L     _ML_bmp_16_or_cl
      Elements.c   360    
      Elements.c   361    int collisionZappeurs(int yBarry, int xBarry, int vehicule)
    00000F50              _collisionZappeurs:              ; function: collisionZappeurs
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __adds, __itos, __ges, __les
    00000F50 2FE6                   MOV.L       R14,@-R15
    00000F52 2FD6                   MOV.L       R13,@-R15
    00000F54 2FC6                   MOV.L       R12,@-R15
    00000F56 2FB6                   MOV.L       R11,@-R15
    00000F58 2FA6                   MOV.L       R10,@-R15
    00000F5A 2F96                   MOV.L       R9,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F5C 2F86                   MOV.L       R8,@-R15
    00000F5E 4F22                   STS.L       PR,@-R15
    00000F60 D73E                   MOV.L       L1305+2,R7 ; _zappeur
    00000F62 7FF8                   ADD         #-8,R15
    00000F64 9379                   MOV.W       L1305,R3   ; H'008C
    00000F66 6E73                   MOV         R7,R14
    00000F68 D23D                   MOV.L       L1305+6,R2 ; __$vehiculesX
    00000F6A 1F71                   MOV.L       R7,@(4,R15)
    00000F6C 2F72                   MOV.L       R7,@R15
    00000F6E 59F1                   MOV.L       @(4,R15),R9
    00000F70 2F22                   MOV.L       R2,@R15
    00000F72 393C                   ADD         R3,R9
    00000F74 D83B                   MOV.L       L1305+10,R8; __$vehiculesY
      Elements.c   362    {
      Elements.c   363        int w, x2, y2, x1, y1;
      Elements.c   364    
      Elements.c   365        for (w = 0; w < 5; w++)
    00000F76 3E92                   CMP/HS      R9,R14
    00000F78 DC3B                   MOV.L       L1305+14,R12; _vehiculeHitbox
    00000F7A DD3C                   MOV.L       L1305+18,R13; _sauvegarde
    00000F7C 8D62                   BT/S        L1087
    00000F7E EB00                   MOV         #0,R11
    00000F80              L1088:                            
      Elements.c   366        {
      Elements.c   367            if (zappeur[w].exists)
    00000F80 53E4                   MOV.L       @(16,R14),R3
    00000F82 2338                   TST         R3,R3
    00000F84 895A                   BT          L1089
      Elements.c   368            {
      Elements.c   369                /*if (zappeur[w].pos != 2)
      Elements.c   370                {*/
      Elements.c   371                    if (zappeur[w].x1 + 2 <= xBarry + vehiculesX[1][vehiculeHitbox] && zappeur[w].x2 + 2 >= xB
                         +arry + vehiculesX[0][vehiculeHitbox] - 7 && zappeur[w].y1 + 2 <= yBarry + vehiculesY[1][vehiculeHitbox] &&
                         + zappeur[w].y2 + 2 >= yBarry + vehiculesY[0][vehiculeHitbox] - 7 && zappeur[w].active && zappeur[w].exists
                         +)
    00000F86 D03A                   MOV.L       L1305+22,R0; H'40000000
    00000F88 D33A                   MOV.L       L1305+26,R3; __adds
    00000F8A 430B                   JSR         @R3
    00000F8C 6172                   MOV.L       @R7,R1
    00000F8E 6103                   MOV         R0,R1
    00000F90 63F2                   MOV.L       @R15,R3
    00000F92 6AC2                   MOV.L       @R12,R10
    00000F94 D238                   MOV.L       L1305+30,R2; __itos
    00000F96 3A3C                   ADD         R3,R10
    00000F98 84AC                   MOV.B       @(12,R10),R0
    00000F9A 600C                   EXTU.B      R0,R0
    00000F9C 420B                   JSR         @R2
    00000F9E 305C                   ADD         R5,R0
    00000FA0 D236                   MOV.L       L1305+34,R2; __les
    00000FA2 420B                   JSR         @R2
    00000FA4 0009                   NOP
    00000FA6 8800                   CMP/EQ      #0,R0
    00000FA8 8948                   BT          L1089
    00000FAA D031                   MOV.L       L1305+22,R0; H'40000000
    00000FAC D331                   MOV.L       L1305+26,R3; __adds
    00000FAE 430B                   JSR         @R3
    00000FB0 5172                   MOV.L       @(8,R7),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FB2 6103                   MOV         R0,R1
    00000FB4 D330                   MOV.L       L1305+30,R3; __itos
    00000FB6 60A0                   MOV.B       @R10,R0
    00000FB8 600C                   EXTU.B      R0,R0
    00000FBA 305C                   ADD         R5,R0
    00000FBC 430B                   JSR         @R3
    00000FBE 70F9                   ADD         #-7,R0
    00000FC0 D32F                   MOV.L       L1305+38,R3; __ges
    00000FC2 430B                   JSR         @R3
    00000FC4 0009                   NOP
    00000FC6 8800                   CMP/EQ      #0,R0
    00000FC8 8938                   BT          L1089
    00000FCA D029                   MOV.L       L1305+22,R0; H'40000000
    00000FCC D229                   MOV.L       L1305+26,R2; __adds
    00000FCE 420B                   JSR         @R2
    00000FD0 5171                   MOV.L       @(4,R7),R1
    00000FD2 6103                   MOV         R0,R1
    00000FD4 D328                   MOV.L       L1305+30,R3; __itos
    00000FD6 60C2                   MOV.L       @R12,R0
    00000FD8 308C                   ADD         R8,R0
    00000FDA 840C                   MOV.B       @(12,R0),R0
    00000FDC 600C                   EXTU.B      R0,R0
    00000FDE 430B                   JSR         @R3
    00000FE0 304C                   ADD         R4,R0
    00000FE2 D326                   MOV.L       L1305+34,R3; __les
    00000FE4 430B                   JSR         @R3
    00000FE6 0009                   NOP
    00000FE8 8800                   CMP/EQ      #0,R0
    00000FEA 8927                   BT          L1089
    00000FEC D020                   MOV.L       L1305+22,R0; H'40000000
    00000FEE D221                   MOV.L       L1305+26,R2; __adds
    00000FF0 420B                   JSR         @R2
    00000FF2 5173                   MOV.L       @(12,R7),R1
    00000FF4 D320                   MOV.L       L1305+30,R3; __itos
    00000FF6 6103                   MOV         R0,R1
    00000FF8 60C2                   MOV.L       @R12,R0
    00000FFA 008C                   MOV.B       @(R0,R8),R0
    00000FFC 600C                   EXTU.B      R0,R0
    00000FFE 304C                   ADD         R4,R0
    00001000 430B                   JSR         @R3
    00001002 70F9                   ADD         #-7,R0
    00001004 D31E                   MOV.L       L1305+38,R3; __ges
    00001006 430B                   JSR         @R3
    00001008 0009                   NOP
    0000100A 8800                   CMP/EQ      #0,R0
    0000100C 8916                   BT          L1089
    0000100E 5276                   MOV.L       @(24,R7),R2
    00001010 2228                   TST         R2,R2
    00001012 8913                   BT          L1089
    00001014 5274                   MOV.L       @(16,R7),R2
    00001016 2228                   TST         R2,R2
    00001018 8910                   BT          L1089
      Elements.c   372                    {
      Elements.c   373                        if (vehicule == 0)
    0000101A 2668                   TST         R6,R6
    0000101C 8B0C                   BF          L1091
      Elements.c   374                        {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   375                            sauvegarde->statMort[0] += 1;
      Elements.c   376                            if (sauvegarde->succes[5] != -1) sauvegarde->succes[5] = 0;
    0000101E E165                   MOV         #101,R1
    00001020 62D2                   MOV.L       @R13,R2
    00001022 7254                   ADD         #84,R2
    00001024 6321                   MOV.W       @R2,R3
    00001026 7301                   ADD         #1,R3
    00001028 2231                   MOV.W       R3,@R2
    0000102A 60D2                   MOV.L       @R13,R0
    0000102C 001C                   MOV.B       @(R0,R1),R0
    0000102E 88FF                   CMP/EQ      #-1,R0
    00001030 8902                   BT          L1091
    00001032 E065                   MOV         #101,R0
    00001034 62D2                   MOV.L       @R13,R2
    00001036 02B4                   MOV.B       R11,@(R0,R2)
    00001038              L1091:                            
      Elements.c   377                        }
      Elements.c   378                        return 1;
    00001038 A005                   BRA         L1093
    0000103A E001                   MOV         #1,R0
    0000103C              L1089:                            
    0000103C 7E1C                   ADD         #28,R14
    0000103E 3E92                   CMP/HS      R9,R14
    00001040 8F9E                   BF/S        L1088
    00001042 771C                   ADD         #28,R7
    00001044              L1087:                            
      Elements.c   379                    }
      Elements.c   380                /*}
      Elements.c   381                else
      Elements.c   382                {
      Elements.c   383                    y1 = yBarry + vehiculesY[0][vehiculeHitbox];
      Elements.c   384                    x1 = zappeur[w].x1+(y1-zappeur[w].y1);
      Elements.c   385                    y2 = yBarry + vehiculesY[1][vehiculeHitbox];
      Elements.c   386                    x2 = zappeur[w].x1+(y2-zappeur[w].y1);
      Elements.c   387    
      Elements.c   388                    if ((x1 < xBarry + vehiculesX[1][vehiculeHitbox] && x1 > xBarry + vehiculesX[0][vehiculeHi
                         +tbox] && y1 < zappeur[w].y2 + 2 && y1 > zappeur[w].y1 + 2)/*||(x2 < xBarry + vehiculesX[1][vehiculeHitbox]
                         + && x2 > xBarry + vehiculesX[0][vehiculeHitbox] && y2 < zappeur[w].y2 + 2 && y2 > zappeur[w].y1 + 2))
      Elements.c   389                    {
      Elements.c   390                        if (vehicule == 0)
      Elements.c   391                        {
      Elements.c   392                            sauvegarde->statMort[0] += 1;
      Elements.c   393                            if (sauvegarde->succes[5] != -1) sauvegarde->succes[5] = 0;
      Elements.c   394                        }
      Elements.c   395                        return 1;
      Elements.c   396                    }*/
      Elements.c   397            }
      Elements.c   398        }
      Elements.c   399        return 0;
    00001044 E000                   MOV         #0,R0
      Elements.c   400    }
    00001046              L1093:                            
    00001046 7F08                   ADD         #8,R15
    00001048 4F26                   LDS.L       @R15+,PR
    0000104A 68F6                   MOV.L       @R15+,R8
    0000104C 69F6                   MOV.L       @R15+,R9
    0000104E 6AF6                   MOV.L       @R15+,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001050 6BF6                   MOV.L       @R15+,R11
    00001052 6CF6                   MOV.L       @R15+,R12
    00001054 6DF6                   MOV.L       @R15+,R13
    00001056 000B                   RTS
    00001058 6EF6                   MOV.L       @R15+,R14
    0000105A              L1305:                            
    0000105A 008C                   .DATA.W     H'008C
    0000105C <00000000>             .DATA.L     _zappeur
    00001060 <00000000>             .DATA.L     __$vehiculesX
    00001064 <00000000>             .DATA.L     __$vehiculesY
    00001068 <00000000>             .DATA.L     _vehiculeHitbox
    0000106C <00000000>             .DATA.L     _sauvegarde
    00001070 40000000               .DATA.L     H'40000000
    00001074 <00000000>             .DATA.L     __adds
    00001078 <00000000>             .DATA.L     __itos
    0000107C <00000000>             .DATA.L     __les
    00001080 <00000000>             .DATA.L     __ges
      Elements.c   401    
      Elements.c   402    void initLasers()
    00001084              _initLasers:                     ; function: initLasers
                                                           ; frame size=8
                                                           ; used runtime library name:
                                                           ; __itos
    00001084 4F22                   STS.L       PR,@-R15
    00001086 E500                   MOV         #0,R5
    00001088 D438                   MOV.L       L1306+2,R4 ; _laser
    0000108A 7FFC                   ADD         #-4,R15
    0000108C 2F42                   MOV.L       R4,@R15
    0000108E 6743                   MOV         R4,R7
    00001090 6653                   MOV         R5,R6
    00001092 7748                   ADD         #72,R7
      Elements.c   403    {
      Elements.c   404        int w;
      Elements.c   405    
      Elements.c   406        for (w = 0; w < 6; w++)
    00001094              L1094:                            
      Elements.c   407        {
      Elements.c   408            laser[w].exists = 0;
    00001094 1451                   MOV.L       R5,@(4,R4)
      Elements.c   409            laser[w].phase = 0;
    00001096 1452                   MOV.L       R5,@(8,R4)
      Elements.c   410            laser[w].y = 11*w;
    00001098 D335                   MOV.L       L1306+6,R3 ; __itos
    0000109A 430B                   JSR         @R3
    0000109C 6063                   MOV         R6,R0
    0000109E 2402                   MOV.L       R0,@R4
    000010A0 740C                   ADD         #12,R4
    000010A2 3472                   CMP/HS      R7,R4
    000010A4 8FF6                   BF/S        L1094
    000010A6 760B                   ADD         #11,R6
      Elements.c   411        }
      Elements.c   412    }
    000010A8 7F04                   ADD         #4,R15
    000010AA 4F26                   LDS.L       @R15+,PR
    000010AC 000B                   RTS
    000010AE 0009                   NOP
      Elements.c   413    void genererLasers(int level)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010B0              _genererLasers:                  ; function: genererLasers
                                                           ; frame size=12
                                                           ; used runtime library name:
                                                           ; __modls
    000010B0 2FE6                   MOV.L       R14,@-R15
      Elements.c   414    {
      Elements.c   415        int w, a = 9;
      Elements.c   416    
      Elements.c   417        if (level >= 3 && level < 7) a += 5;
    000010B2 E303                   MOV         #3,R3
    000010B4 2FD6                   MOV.L       R13,@-R15
    000010B6 3433                   CMP/GE      R3,R4
    000010B8 4F22                   STS.L       PR,@-R15
    000010BA 8F05                   BF/S        L1095
    000010BC EE09                   MOV         #9,R14
    000010BE E107                   MOV         #7,R1
    000010C0 3413                   CMP/GE      R1,R4
    000010C2 8901                   BT          L1095
    000010C4 A004                   BRA         L1096
    000010C6 EE0E                   MOV         #14,R14
    000010C8              L1095:                            
      Elements.c   418        else if (level >= 7) a += 8;
    000010C8 E207                   MOV         #7,R2
    000010CA 3423                   CMP/GE      R2,R4
    000010CC 8B00                   BF          L1096
    000010CE EE11                   MOV         #17,R14
    000010D0              L1096:                            
      Elements.c   419    
      Elements.c   420        chosenPattern = rand()%a; // on genere aleatoirement le paterne du laser selon la difficulte
    000010D0 DD28                   MOV.L       L1306+10,R13; _chosenPattern
    000010D2 D229                   MOV.L       L1306+14,R2; _rand
    000010D4 420B                   JSR         @R2
    000010D6 0009                   NOP
    000010D8 D328                   MOV.L       L1306+18,R3; __modls
    000010DA 6103                   MOV         R0,R1
    000010DC 430B                   JSR         @R3
    000010DE 60E3                   MOV         R14,R0
    000010E0 2D02                   MOV.L       R0,@R13
      Elements.c   421    
      Elements.c   422        for (w = 0; w < 6; w++)
    000010E2 E600                   MOV         #0,R6
    000010E4 D421                   MOV.L       L1306+2,R4 ; _laser
    000010E6 EE06                   MOV         #6,R14
    000010E8 D125                   MOV.L       L1306+22,R1; __$laserPattern
    000010EA E701                   MOV         #1,R7
    000010EC E500                   MOV         #0,R5
    000010EE              L1098:                            
      Elements.c   423            if (laserPattern[chosenPattern][w]) laser[w].exists = 1;
    000010EE 60D2                   MOV.L       @R13,R0
    000010F0 4008                   SHLL2       R0
    000010F2 4008                   SHLL2       R0
    000010F4 301C                   ADD         R1,R0
    000010F6 035D                   MOV.W       @(R0,R5),R3
    000010F8 633D                   EXTU.W      R3,R3
    000010FA 2338                   TST         R3,R3
    000010FC 8D01                   BT/S        L1099
    000010FE 7601                   ADD         #1,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001100 1471                   MOV.L       R7,@(4,R4)
    00001102              L1099:                            
    00001102 740C                   ADD         #12,R4
    00001104 36E3                   CMP/GE      R14,R6
    00001106 8FF2                   BF/S        L1098
    00001108 7502                   ADD         #2,R5
      Elements.c   424    }
    0000110A 4F26                   LDS.L       @R15+,PR
    0000110C 6DF6                   MOV.L       @R15+,R13
    0000110E 000B                   RTS
    00001110 6EF6                   MOV.L       @R15+,R14
      Elements.c   425    int activerLasers(int *temps) //  on active les lasers en fonction de leurs paternes
    00001112              _activerLasers:                  ; function: activerLasers
                                                           ; frame size=68
                                                           ; used runtime library name:
                                                           ; __modls, __addd, __subd, __stod, __dtos
      Elements.c   426    {
      Elements.c   427        int a = 0, w;
    00001112 E700                   MOV         #0,R7
    00001114 D515                   MOV.L       L1306+2,R5 ; _laser
    00001116 E601                   MOV         #1,R6
    00001118 2FE6                   MOV.L       R14,@-R15
    0000111A 2FD6                   MOV.L       R13,@-R15
    0000111C 2FC6                   MOV.L       R12,@-R15
    0000111E ED02                   MOV         #2,R13
    00001120 DE14                   MOV.L       L1306+10,R14; _chosenPattern
    00001122 6C73                   MOV         R7,R12
    00001124 2FB6                   MOV.L       R11,@-R15
    00001126 2FA6                   MOV.L       R10,@-R15
    00001128 2F96                   MOV.L       R9,@-R15
    0000112A 2F86                   MOV.L       R8,@-R15
    0000112C 4F22                   STS.L       PR,@-R15
    0000112E 7FF8                   ADD         #-8,R15
    00001130 69E2                   MOV.L       @R14,R9
    00001132 6093                   MOV         R9,R0
    00001134 8807                   CMP/EQ      #7,R0
    00001136 8F49                   BF/S        L1100
    00001138 6B53                   MOV         R5,R11
      Elements.c   428    
      Elements.c   429        if (chosenPattern == 7)
      Elements.c   430        {
      Elements.c   431            if (laser[0].exists) a = 1;
    0000113A 52B1                   MOV.L       @(4,R11),R2
    0000113C 2228                   TST         R2,R2
    0000113E 8D01                   BT/S        L1101
      Elements.c   432            if (*temps < 8 || *temps > 280) laser[0].phase = 0;
    00001140 6342                   MOV.L       @R4,R3
    00001142 6C63                   MOV         R6,R12
    00001144              L1101:                            
    00001144 2F32                   MOV.L       R3,@R15
    00001146 E208                   MOV         #8,R2
    00001148 3323                   CMP/GE      R2,R3
    0000114A 8B03                   BF          L1103
    0000114C 910D                   MOV.W       L1306,R1   ; H'0118
    0000114E 63F2                   MOV.L       @R15,R3
    00001150 3317                   CMP/GT      R1,R3
    00001152 8B01                   BF          L1102




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001154              L1103:                            
    00001154 A017                   BRA         L1104
    00001156 1B72                   MOV.L       R7,@(8,R11)
    00001158              L1102:                            
      Elements.c   433            else if (*temps%96<48) laser[0].phase = 1;
    00001158 6142                   MOV.L       @R4,R1
    0000115A D308                   MOV.L       L1306+18,R3; __modls
    0000115C 430B                   JSR         @R3
    0000115E E060                   MOV         #96,R0
    00001160 E230                   MOV         #48,R2
    00001162 3023                   CMP/GE      R2,R0
    00001164 890E                   BT          L1105
    00001166 A00E                   BRA         L1104
    00001168 1B62                   MOV.L       R6,@(8,R11)
    0000116A              L1306:                            
    0000116A 0118                   .DATA.W     H'0118
    0000116C <00000000>             .DATA.L     _laser
    00001170 <00000000>             .DATA.L     __itos
    00001174 <00000000>             .DATA.L     _chosenPattern
    00001178 <00000000>             .DATA.L     _rand
    0000117C <00000000>             .DATA.L     __modls
    00001180 <00000000>             .DATA.L     __$laserPattern
    00001184              L1105:                            
      Elements.c   434            else laser[0].phase = 2;
    00001184 1BD2                   MOV.L       R13,@(8,R11)
    00001186              L1104:                            
      Elements.c   435            if (*temps < 280 && *temps > 8) laser[0].y+=0.20;
    00001186 6642                   MOV.L       @R4,R6
    00001188 9361                   MOV.W       L1307,R3   ; H'0118
    0000118A 3633                   CMP/GE      R3,R6
    0000118C 8916                   BT          L1107
    0000118E E108                   MOV         #8,R1
    00001190 3617                   CMP/GT      R1,R6
    00001192 8B13                   BF          L1107
    00001194 D32F                   MOV.L       L1307+6,R3 ; H'9999999A
    00001196 7FF8                   ADD         #-8,R15
    00001198 D230                   MOV.L       L1307+14,R2; __stod
    0000119A 2F36                   MOV.L       R3,@-R15
    0000119C D32E                   MOV.L       L1307+10,R3; H'3FC99999
    0000119E 2F36                   MOV.L       R3,@-R15
    000011A0 7FF8                   ADD         #-8,R15
    000011A2 6052                   MOV.L       @R5,R0
    000011A4 420B                   JSR         @R2
    000011A6 2FF6                   MOV.L       R15,@-R15
    000011A8 62F3                   MOV         R15,R2
    000011AA 7210                   ADD         #16,R2
    000011AC 2F26                   MOV.L       R2,@-R15
    000011AE D22C                   MOV.L       L1307+18,R2; __addd
    000011B0 420B                   JSR         @R2
    000011B2 0009                   NOP
    000011B4 D22B                   MOV.L       L1307+22,R2; __dtos
    000011B6 420B                   JSR         @R2
    000011B8 0009                   NOP
    000011BA 2502                   MOV.L       R0,@R5
    000011BC              L1107:                            
      Elements.c   436            if (*temps > 296)
    000011BC 9348                   MOV.W       L1307+2,R3 ; H'0128




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000011BE 6142                   MOV.L       @R4,R1
    000011C0 3137                   CMP/GT      R3,R1
    000011C2 8B01                   BF          L1308
    000011C4 A1B5                   BRA         L823
    000011C6 0009                   NOP
    000011C8              L1308:                            
      Elements.c   437            {
      Elements.c   438                *temps = -1;
      Elements.c   439                initLasers();
    000011C8 A1B6                   BRA         L1109
    000011CA 0009                   NOP
    000011CC              L1100:                            
    000011CC 6A53                   MOV         R5,R10
    000011CE 6093                   MOV         R9,R0
    000011D0 8808                   CMP/EQ      #8,R0
    000011D2 8F4D                   BF/S        L1110
    000011D4 7A3C                   ADD         #60,R10
      Elements.c   440            }
      Elements.c   441        }
      Elements.c   442        else if (chosenPattern == 8)
      Elements.c   443        {
      Elements.c   444            if (laser[5].exists) a = 1;
    000011D6 52A1                   MOV.L       @(4,R10),R2
    000011D8 2228                   TST         R2,R2
    000011DA 8D01                   BT/S        L1111
      Elements.c   445            if (*temps < 8 || *temps > 280) laser[5].phase = 0;
    000011DC 6342                   MOV.L       @R4,R3
    000011DE 6C63                   MOV         R6,R12
    000011E0              L1111:                            
    000011E0 2F32                   MOV.L       R3,@R15
    000011E2 E208                   MOV         #8,R2
    000011E4 3323                   CMP/GE      R2,R3
    000011E6 8B03                   BF          L1113
    000011E8 9131                   MOV.W       L1307,R1   ; H'0118
    000011EA 63F2                   MOV.L       @R15,R3
    000011EC 3317                   CMP/GT      R1,R3
    000011EE 8B01                   BF          L1112
    000011F0              L1113:                            
    000011F0 A00A                   BRA         L1114
    000011F2 1A72                   MOV.L       R7,@(8,R10)
    000011F4              L1112:                            
      Elements.c   446            else if (*temps%96<48) laser[5].phase = 1;
    000011F4 6142                   MOV.L       @R4,R1
    000011F6 D31C                   MOV.L       L1307+26,R3; __modls
    000011F8 430B                   JSR         @R3
    000011FA E060                   MOV         #96,R0
    000011FC E230                   MOV         #48,R2
    000011FE 3023                   CMP/GE      R2,R0
    00001200 8901                   BT          L1115
    00001202 A001                   BRA         L1114
    00001204 1A62                   MOV.L       R6,@(8,R10)
    00001206              L1115:                            
      Elements.c   447            else laser[5].phase = 2;
    00001206 1AD2                   MOV.L       R13,@(8,R10)
    00001208              L1114:                            
      Elements.c   448            if (*temps < 280 && *temps > 8) laser[5].y-=0.20;
    00001208 6642                   MOV.L       @R4,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000120A 9320                   MOV.W       L1307,R3   ; H'0118
    0000120C 3633                   CMP/GE      R3,R6
    0000120E 8916                   BT          L1117
    00001210 E108                   MOV         #8,R1
    00001212 3617                   CMP/GT      R1,R6
    00001214 8B13                   BF          L1117
    00001216 7FF8                   ADD         #-8,R15
    00001218 D30E                   MOV.L       L1307+6,R3 ; H'9999999A
    0000121A 2F36                   MOV.L       R3,@-R15
    0000121C D30E                   MOV.L       L1307+10,R3; H'3FC99999
    0000121E 2F36                   MOV.L       R3,@-R15
    00001220 D20E                   MOV.L       L1307+14,R2; __stod
    00001222 7FF8                   ADD         #-8,R15
    00001224 505F                   MOV.L       @(60,R5),R0
    00001226 420B                   JSR         @R2
    00001228 2FF6                   MOV.L       R15,@-R15
    0000122A 62F3                   MOV         R15,R2
    0000122C 7210                   ADD         #16,R2
    0000122E 2F26                   MOV.L       R2,@-R15
    00001230 D20E                   MOV.L       L1307+30,R2; __subd
    00001232 420B                   JSR         @R2
    00001234 0009                   NOP
    00001236 D20B                   MOV.L       L1307+22,R2; __dtos
    00001238 420B                   JSR         @R2
    0000123A 0009                   NOP
    0000123C 150F                   MOV.L       R0,@(60,R5)
    0000123E              L1117:                            
      Elements.c   449            if (*temps > 296)
    0000123E 9307                   MOV.W       L1307+2,R3 ; H'0128
    00001240 6142                   MOV.L       @R4,R1
    00001242 3137                   CMP/GT      R3,R1
    00001244 8B01                   BF          L1309
    00001246 A174                   BRA         L823
    00001248 0009                   NOP
    0000124A              L1309:                            
      Elements.c   450            {
      Elements.c   451                *temps = -1;
      Elements.c   452                initLasers();
    0000124A A175                   BRA         L1109
    0000124C 0009                   NOP
    0000124E              L1307:                            
    0000124E 0118                   .DATA.W     H'0118
    00001250 0128                   .DATA.W     H'0128
    00001252 0000                   .DATA.W     0
    00001254 9999999A               .DATA.L     H'9999999A
    00001258 3FC99999               .DATA.L     H'3FC99999
    0000125C <00000000>             .DATA.L     __stod
    00001260 <00000000>             .DATA.L     __addd
    00001264 <00000000>             .DATA.L     __dtos
    00001268 <00000000>             .DATA.L     __modls
    0000126C <00000000>             .DATA.L     __subd
    00001270              L1110:                            
      Elements.c   453            }
      Elements.c   454        }
      Elements.c   455        else if (chosenPattern == 15)
    00001270 880F                   CMP/EQ      #15,R0
    00001272 8B58                   BF          L1120




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   456        {
      Elements.c   457            if (laser[0].exists && laser[5].exists) a = 1;
    00001274 52B1                   MOV.L       @(4,R11),R2
    00001276 2228                   TST         R2,R2
    00001278 8903                   BT          L1121
    0000127A 53A1                   MOV.L       @(4,R10),R3
    0000127C 2338                   TST         R3,R3
    0000127E 8900                   BT          L1121
    00001280 6C63                   MOV         R6,R12
    00001282              L1121:                            
      Elements.c   458            if (*temps < 16 || *temps > 156) laser[0].phase = 0, laser[5].phase = 0;
    00001282 E210                   MOV         #16,R2
    00001284 6342                   MOV.L       @R4,R3
    00001286 2F32                   MOV.L       R3,@R15
    00001288 3323                   CMP/GE      R2,R3
    0000128A 8B03                   BF          L1123
    0000128C 9164                   MOV.W       L1310,R1   ; H'009C
    0000128E 63F2                   MOV.L       @R15,R3
    00001290 3317                   CMP/GT      R1,R3
    00001292 8B03                   BF          L1122
    00001294              L1123:                            
    00001294 1572                   MOV.L       R7,@(8,R5)
    00001296 E044                   MOV         #68,R0
    00001298 A00E                   BRA         L1124
    0000129A 0576                   MOV.L       R7,@(R0,R5)
    0000129C              L1122:                            
      Elements.c   459            else if (*temps%160>64) laser[0].phase = 1, laser[5].phase = 1;
    0000129C 905D                   MOV.W       L1310+2,R0 ; H'00A0
    0000129E D230                   MOV.L       L1310+8,R2 ; __modls
    000012A0 420B                   JSR         @R2
    000012A2 6142                   MOV.L       @R4,R1
    000012A4 E340                   MOV         #64,R3
    000012A6 3037                   CMP/GT      R3,R0
    000012A8 8B03                   BF          L1125
    000012AA E044                   MOV         #68,R0
    000012AC 1562                   MOV.L       R6,@(8,R5)
    000012AE A003                   BRA         L1124
    000012B0 0566                   MOV.L       R6,@(R0,R5)
    000012B2              L1125:                            
      Elements.c   460            else laser[0].phase = 2, laser[5].phase = 2;
    000012B2 E044                   MOV         #68,R0
    000012B4 15D2                   MOV.L       R13,@(8,R5)
    000012B6 05D6                   MOV.L       R13,@(R0,R5)
    000012B8              L1124:                            
      Elements.c   461            if (*temps < 156 && *temps > 32) laser[0].y+=0.20, laser[5].y-=0.20;
    000012B8 6642                   MOV.L       @R4,R6
    000012BA 934D                   MOV.W       L1310,R3   ; H'009C
    000012BC 3633                   CMP/GE      R3,R6
    000012BE 892A                   BT          L1127
    000012C0 E120                   MOV         #32,R1
    000012C2 3617                   CMP/GT      R1,R6
    000012C4 8B27                   BF          L1127
    000012C6 7FF8                   ADD         #-8,R15
    000012C8 D326                   MOV.L       L1310+12,R3; H'9999999A
    000012CA 2F36                   MOV.L       R3,@-R15
    000012CC D326                   MOV.L       L1310+16,R3; H'3FC99999
    000012CE 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012D0 D226                   MOV.L       L1310+20,R2; __stod
    000012D2 7FF8                   ADD         #-8,R15
    000012D4 6052                   MOV.L       @R5,R0
    000012D6 420B                   JSR         @R2
    000012D8 2FF6                   MOV.L       R15,@-R15
    000012DA 62F3                   MOV         R15,R2
    000012DC 7210                   ADD         #16,R2
    000012DE 2F26                   MOV.L       R2,@-R15
    000012E0 D223                   MOV.L       L1310+24,R2; __addd
    000012E2 420B                   JSR         @R2
    000012E4 0009                   NOP
    000012E6 D223                   MOV.L       L1310+28,R2; __dtos
    000012E8 420B                   JSR         @R2
    000012EA 0009                   NOP
    000012EC 2502                   MOV.L       R0,@R5
    000012EE 7FF8                   ADD         #-8,R15
    000012F0 D31C                   MOV.L       L1310+12,R3; H'9999999A
    000012F2 2F36                   MOV.L       R3,@-R15
    000012F4 D31C                   MOV.L       L1310+16,R3; H'3FC99999
    000012F6 2F36                   MOV.L       R3,@-R15
    000012F8 D21C                   MOV.L       L1310+20,R2; __stod
    000012FA 7FF8                   ADD         #-8,R15
    000012FC 505F                   MOV.L       @(60,R5),R0
    000012FE 420B                   JSR         @R2
    00001300 2FF6                   MOV.L       R15,@-R15
    00001302 62F3                   MOV         R15,R2
    00001304 7210                   ADD         #16,R2
    00001306 2F26                   MOV.L       R2,@-R15
    00001308 D21B                   MOV.L       L1310+32,R2; __subd
    0000130A 420B                   JSR         @R2
    0000130C 0009                   NOP
    0000130E D219                   MOV.L       L1310+28,R2; __dtos
    00001310 420B                   JSR         @R2
    00001312 0009                   NOP
    00001314 150F                   MOV.L       R0,@(60,R5)
    00001316              L1127:                            
      Elements.c   462            if (*temps > 172)
    00001316 9321                   MOV.W       L1310+4,R3 ; H'00AC
    00001318 6142                   MOV.L       @R4,R1
    0000131A 3137                   CMP/GT      R3,R1
    0000131C 8B01                   BF          L1311
    0000131E A108                   BRA         L823
    00001320 0009                   NOP
    00001322              L1311:                            
      Elements.c   463            {
      Elements.c   464                *temps = -1;
      Elements.c   465                initLasers();
    00001322 A109                   BRA         L1109
    00001324 0009                   NOP
    00001326              L1120:                            
      Elements.c   466            }
      Elements.c   467        }
      Elements.c   468        else if (chosenPattern == 16)
    00001326 6093                   MOV         R9,R0
    00001328 8810                   CMP/EQ      #16,R0
    0000132A 8901                   BT          L1312
    0000132C A099                   BRA         L1130




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000132E 0009                   NOP
    00001330              L1312:                            
      Elements.c   469        {
      Elements.c   470            if (laser[0].exists && laser[5].exists) a = 1;
    00001330 52B1                   MOV.L       @(4,R11),R2
    00001332 2228                   TST         R2,R2
    00001334 8903                   BT          L1131
    00001336 53A1                   MOV.L       @(4,R10),R3
    00001338 2338                   TST         R3,R3
    0000133A 8900                   BT          L1131
    0000133C 6C63                   MOV         R6,R12
    0000133E              L1131:                            
      Elements.c   471            if (*temps < 16 || *temps > 304) laser[0].phase = 0, laser[5].phase = 0;
    0000133E E210                   MOV         #16,R2
    00001340 6342                   MOV.L       @R4,R3
    00001342 2F32                   MOV.L       R3,@R15
    00001344 3323                   CMP/GE      R2,R3
    00001346 8B03                   BF          L1133
    00001348 9109                   MOV.W       L1310+6,R1 ; H'0130
    0000134A 63F2                   MOV.L       @R15,R3
    0000134C 3317                   CMP/GT      R1,R3
    0000134E 8B15                   BF          L1132
    00001350              L1133:                            
    00001350 1572                   MOV.L       R7,@(8,R5)
    00001352 E044                   MOV         #68,R0
    00001354 A020                   BRA         L1134
    00001356 0576                   MOV.L       R7,@(R0,R5)
    00001358              L1310:                            
    00001358 009C                   .DATA.W     H'009C
    0000135A 00A0                   .DATA.W     H'00A0
    0000135C 00AC                   .DATA.W     H'00AC
    0000135E 0130                   .DATA.W     H'0130
    00001360 <00000000>             .DATA.L     __modls
    00001364 9999999A               .DATA.L     H'9999999A
    00001368 3FC99999               .DATA.L     H'3FC99999
    0000136C <00000000>             .DATA.L     __stod
    00001370 <00000000>             .DATA.L     __addd
    00001374 <00000000>             .DATA.L     __dtos
    00001378 <00000000>             .DATA.L     __subd
    0000137C              L1132:                            
      Elements.c   472            else if (*temps%160>64) laser[0].phase = 1, laser[5].phase = 1;
    0000137C 9077                   MOV.W       L1313,R0   ; H'00A0
    0000137E D23E                   MOV.L       L1313+10,R2; __modls
    00001380 420B                   JSR         @R2
    00001382 6142                   MOV.L       @R4,R1
    00001384 E340                   MOV         #64,R3
    00001386 3037                   CMP/GT      R3,R0
    00001388 8B03                   BF          L1135
    0000138A E044                   MOV         #68,R0
    0000138C 1562                   MOV.L       R6,@(8,R5)
    0000138E A003                   BRA         L1134
    00001390 0566                   MOV.L       R6,@(R0,R5)
    00001392              L1135:                            
      Elements.c   473            else laser[0].phase = 2, laser[5].phase = 2;
    00001392 E044                   MOV         #68,R0
    00001394 15D2                   MOV.L       R13,@(8,R5)
    00001396 05D6                   MOV.L       R13,@(R0,R5)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001398              L1134:                            
      Elements.c   474            if (*temps < 156 && *temps > 32) laser[0].y+=0.20, laser[5].y-=0.20;
    00001398 6642                   MOV.L       @R4,R6
    0000139A 9369                   MOV.W       L1313+2,R3 ; H'009C
    0000139C 3633                   CMP/GE      R3,R6
    0000139E 892B                   BT          L1137
    000013A0 E120                   MOV         #32,R1
    000013A2 3617                   CMP/GT      R1,R6
    000013A4 8B28                   BF          L1137
    000013A6 7FF8                   ADD         #-8,R15
    000013A8 D334                   MOV.L       L1313+14,R3; H'9999999A
    000013AA 2F36                   MOV.L       R3,@-R15
    000013AC D334                   MOV.L       L1313+18,R3; H'3FC99999
    000013AE 2F36                   MOV.L       R3,@-R15
    000013B0 D234                   MOV.L       L1313+22,R2; __stod
    000013B2 7FF8                   ADD         #-8,R15
    000013B4 6052                   MOV.L       @R5,R0
    000013B6 420B                   JSR         @R2
    000013B8 2FF6                   MOV.L       R15,@-R15
    000013BA 62F3                   MOV         R15,R2
    000013BC 7210                   ADD         #16,R2
    000013BE 2F26                   MOV.L       R2,@-R15
    000013C0 D231                   MOV.L       L1313+26,R2; __addd
    000013C2 420B                   JSR         @R2
    000013C4 0009                   NOP
    000013C6 D231                   MOV.L       L1313+30,R2; __dtos
    000013C8 420B                   JSR         @R2
    000013CA 0009                   NOP
    000013CC 2502                   MOV.L       R0,@R5
    000013CE 7FF8                   ADD         #-8,R15
    000013D0 D32A                   MOV.L       L1313+14,R3; H'9999999A
    000013D2 2F36                   MOV.L       R3,@-R15
    000013D4 D32A                   MOV.L       L1313+18,R3; H'3FC99999
    000013D6 2F36                   MOV.L       R3,@-R15
    000013D8 D22A                   MOV.L       L1313+22,R2; __stod
    000013DA 7FF8                   ADD         #-8,R15
    000013DC 505F                   MOV.L       @(60,R5),R0
    000013DE 420B                   JSR         @R2
    000013E0 2FF6                   MOV.L       R15,@-R15
    000013E2 62F3                   MOV         R15,R2
    000013E4 7210                   ADD         #16,R2
    000013E6 2F26                   MOV.L       R2,@-R15
    000013E8 D229                   MOV.L       L1313+34,R2; __subd
    000013EA 420B                   JSR         @R2
    000013EC 0009                   NOP
    000013EE D227                   MOV.L       L1313+30,R2; __dtos
    000013F0 420B                   JSR         @R2
    000013F2 0009                   NOP
    000013F4 A02F                   BRA         L1138
    000013F6 150F                   MOV.L       R0,@(60,R5)
    000013F8              L1137:                            
      Elements.c   475            else if (*temps > 180 && *temps < 304) laser[0].y-=0.20, laser[5].y+=0.20;
    000013F8 6642                   MOV.L       @R4,R6
    000013FA 923A                   MOV.W       L1313+4,R2 ; H'00B4
    000013FC 3627                   CMP/GT      R2,R6
    000013FE 8B2A                   BF          L1138
    00001400 9138                   MOV.W       L1313+6,R1 ; H'0130




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001402 3613                   CMP/GE      R1,R6
    00001404 8927                   BT          L1138
    00001406 7FF8                   ADD         #-8,R15
    00001408 D21C                   MOV.L       L1313+14,R2; H'9999999A
    0000140A 2F26                   MOV.L       R2,@-R15
    0000140C D21C                   MOV.L       L1313+18,R2; H'3FC99999
    0000140E 2F26                   MOV.L       R2,@-R15
    00001410 D31C                   MOV.L       L1313+22,R3; __stod
    00001412 7FF8                   ADD         #-8,R15
    00001414 6052                   MOV.L       @R5,R0
    00001416 430B                   JSR         @R3
    00001418 2FF6                   MOV.L       R15,@-R15
    0000141A 63F3                   MOV         R15,R3
    0000141C 7310                   ADD         #16,R3
    0000141E 2F36                   MOV.L       R3,@-R15
    00001420 D31B                   MOV.L       L1313+34,R3; __subd
    00001422 430B                   JSR         @R3
    00001424 0009                   NOP
    00001426 D319                   MOV.L       L1313+30,R3; __dtos
    00001428 430B                   JSR         @R3
    0000142A 0009                   NOP
    0000142C 2502                   MOV.L       R0,@R5
    0000142E 7FF8                   ADD         #-8,R15
    00001430 D212                   MOV.L       L1313+14,R2; H'9999999A
    00001432 2F26                   MOV.L       R2,@-R15
    00001434 D212                   MOV.L       L1313+18,R2; H'3FC99999
    00001436 2F26                   MOV.L       R2,@-R15
    00001438 D312                   MOV.L       L1313+22,R3; __stod
    0000143A 7FF8                   ADD         #-8,R15
    0000143C 505F                   MOV.L       @(60,R5),R0
    0000143E 430B                   JSR         @R3
    00001440 2FF6                   MOV.L       R15,@-R15
    00001442 63F3                   MOV         R15,R3
    00001444 7310                   ADD         #16,R3
    00001446 2F36                   MOV.L       R3,@-R15
    00001448 D30F                   MOV.L       L1313+26,R3; __addd
    0000144A 430B                   JSR         @R3
    0000144C 0009                   NOP
    0000144E D30F                   MOV.L       L1313+30,R3; __dtos
    00001450 430B                   JSR         @R3
    00001452 0009                   NOP
    00001454 150F                   MOV.L       R0,@(60,R5)
    00001456              L1138:                            
      Elements.c   476            if (*temps > 312)
    00001456 920E                   MOV.W       L1313+8,R2 ; H'0138
    00001458 6142                   MOV.L       @R4,R1
    0000145A 3127                   CMP/GT      R2,R1
    0000145C 8969                   BT          L823
      Elements.c   477            {
      Elements.c   478                *temps = -1;
      Elements.c   479                initLasers();
    0000145E A06B                   BRA         L1109
    00001460 0009                   NOP
    00001462              L1130:                            
      Elements.c   480            }
      Elements.c   481        }
      Elements.c   482        else




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   483        {
      Elements.c   484            for (w = 0; w < 6; w++)
    00001462 6A73                   MOV         R7,R10
    00001464 2F72                   MOV.L       R7,@R15
    00001466 68B3                   MOV         R11,R8
    00001468 DB0A                   MOV.L       L1313+38,R11; __$laserPattern
    0000146A A055                   BRA         L1142
    0000146C 6983                   MOV         R8,R9
    0000146E              L1313:                            
    0000146E 00A0                   .DATA.W     H'00A0
    00001470 009C                   .DATA.W     H'009C
    00001472 00B4                   .DATA.W     H'00B4
    00001474 0130                   .DATA.W     H'0130
    00001476 0138                   .DATA.W     H'0138
    00001478 <00000000>             .DATA.L     __modls
    0000147C 9999999A               .DATA.L     H'9999999A
    00001480 3FC99999               .DATA.L     H'3FC99999
    00001484 <00000000>             .DATA.L     __stod
    00001488 <00000000>             .DATA.L     __addd
    0000148C <00000000>             .DATA.L     __dtos
    00001490 <00000000>             .DATA.L     __subd
    00001494 <00000000>             .DATA.L     __$laserPattern
    00001498              L1143:                            
    00001498 62A3                   MOV         R10,R2
    0000149A 63A3                   MOV         R10,R3
    0000149C 4200                   SHLL        R2
    0000149E 323C                   ADD         R3,R2
    000014A0 4208                   SHLL2       R2
    000014A2 325C                   ADD         R5,R2
    000014A4 1F21                   MOV.L       R2,@(4,R15)
    000014A6 5321                   MOV.L       @(4,R2),R3
    000014A8 2338                   TST         R3,R3
    000014AA 892F                   BT          L1144
    000014AC 60E2                   MOV.L       @R14,R0
    000014AE 6CA3                   MOV         R10,R12
    000014B0 6242                   MOV.L       @R4,R2
    000014B2 4008                   SHLL2       R0
    000014B4 4C00                   SHLL        R12
    000014B6 4008                   SHLL2       R0
    000014B8 30BC                   ADD         R11,R0
    000014BA 03CD                   MOV.W       @(R0,R12),R3
    000014BC 633D                   EXTU.W      R3,R3
    000014BE 73CE                   ADD         #-50,R3
    000014C0 3320                   CMP/EQ      R2,R3
    000014C2 8B02                   BF          L1145
      Elements.c   485            {
      Elements.c   486                if (laser[w].exists) // on definit les phases de chaque laser
      Elements.c   487                {
      Elements.c   488                    if (laserPattern[chosenPattern][w]-50 == *temps) laser[w].phase = 1;
    000014C4 51F1                   MOV.L       @(4,R15),R1
    000014C6 A020                   BRA         L1146
    000014C8 1162                   MOV.L       R6,@(8,R1)
    000014CA              L1145:                            
      Elements.c   489                    else if (laserPattern[chosenPattern][w] == *temps) laser[w].phase = 2;
    000014CA 60E2                   MOV.L       @R14,R0
    000014CC 6242                   MOV.L       @R4,R2
    000014CE 4008                   SHLL2       R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014D0 4008                   SHLL2       R0
    000014D2 30BC                   ADD         R11,R0
    000014D4 03CD                   MOV.W       @(R0,R12),R3
    000014D6 633D                   EXTU.W      R3,R3
    000014D8 3320                   CMP/EQ      R2,R3
    000014DA 8B01                   BF          L1147
    000014DC A015                   BRA         L1146
    000014DE 19D2                   MOV.L       R13,@(8,R9)
    000014E0              L1147:                            
      Elements.c   490                    else if (laserPattern[chosenPattern][7]-7 == *temps || laserPattern[chosenPattern][w]+lase
                         +rPattern[chosenPattern][6] == *temps) laser[w].phase = 0;
    000014E0 6CE2                   MOV.L       @R14,R12
    000014E2 4C08                   SHLL2       R12
    000014E4 6342                   MOV.L       @R4,R3
    000014E6 4C08                   SHLL2       R12
    000014E8 3CBC                   ADD         R11,R12
    000014EA 85C7                   MOV.W       @(14,R12),R0
    000014EC 1F31                   MOV.L       R3,@(4,R15)
    000014EE 600D                   EXTU.W      R0,R0
    000014F0 70F9                   ADD         #-7,R0
    000014F2 3030                   CMP/EQ      R3,R0
    000014F4 8908                   BT          L1150
    000014F6 60F2                   MOV.L       @R15,R0
    000014F8 52F1                   MOV.L       @(4,R15),R2
    000014FA 03CD                   MOV.W       @(R0,R12),R3
    000014FC 85C6                   MOV.W       @(12,R12),R0
    000014FE 633D                   EXTU.W      R3,R3
    00001500 600D                   EXTU.W      R0,R0
    00001502 330C                   ADD         R0,R3
    00001504 3320                   CMP/EQ      R2,R3
    00001506 8B00                   BF          L1146
    00001508              L1150:                            
    00001508 1872                   MOV.L       R7,@(8,R8)
    0000150A              L1146:                            
      Elements.c   491                    a = 1;
    0000150A 6C63                   MOV         R6,R12
    0000150C              L1144:                            
    0000150C 62F2                   MOV.L       @R15,R2
    0000150E 790C                   ADD         #12,R9
    00001510 7A01                   ADD         #1,R10
    00001512 780C                   ADD         #12,R8
    00001514 7202                   ADD         #2,R2
    00001516 2F22                   MOV.L       R2,@R15
    00001518              L1142:                            
    00001518 E306                   MOV         #6,R3
    0000151A 3A33                   CMP/GE      R3,R10
    0000151C 8BBC                   BF          L1143
      Elements.c   492                }
      Elements.c   493            }
      Elements.c   494    
      Elements.c   495            if (laserPattern[chosenPattern][7]+8 == *temps) // si le paterne est finit on arrete
    0000151E 61E2                   MOV.L       @R14,R1
    00001520 6342                   MOV.L       @R4,R3
    00001522 4108                   SHLL2       R1
    00001524 4108                   SHLL2       R1
    00001526 31BC                   ADD         R11,R1
    00001528 8517                   MOV.W       @(14,R1),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000152A 600D                   EXTU.W      R0,R0
    0000152C 7008                   ADD         #8,R0
    0000152E 3030                   CMP/EQ      R3,R0
    00001530 8B02                   BF          L1109
    00001532              L823:
      Elements.c   496            {
      Elements.c   497                *temps = -1;
    00001532 E1FF                   MOV         #-1,R1
      Elements.c   498                initLasers();
    00001534 BDA6                   BSR         _initLasers
    00001536 2412                   MOV.L       R1,@R4
    00001538              L1109:                            
      Elements.c   499            }
      Elements.c   500        }
      Elements.c   501    
      Elements.c   502        return a;
    00001538 60C3                   MOV         R12,R0
      Elements.c   503    }
    0000153A 7F08                   ADD         #8,R15
    0000153C 4F26                   LDS.L       @R15+,PR
    0000153E 68F6                   MOV.L       @R15+,R8
    00001540 69F6                   MOV.L       @R15+,R9
    00001542 6AF6                   MOV.L       @R15+,R10
    00001544 6BF6                   MOV.L       @R15+,R11
    00001546 6CF6                   MOV.L       @R15+,R12
    00001548 6DF6                   MOV.L       @R15+,R13
    0000154A 000B                   RTS
    0000154C 6EF6                   MOV.L       @R15+,R14
      Elements.c   504    void afficherLasers(temps)
    0000154E              _afficherLasers:                 ; function: afficherLasers
                                                           ; frame size=76
                                                           ; used runtime library name:
                                                           ; __modls, __adds, __stoi
    0000154E 2FE6                   MOV.L       R14,@-R15
    00001550 2FD6                   MOV.L       R13,@-R15
    00001552 6E43                   MOV         R4,R14
    00001554 D330                   MOV.L       L1314+6,R3 ; __modls
    00001556 61E3                   MOV         R14,R1
    00001558 2FC6                   MOV.L       R12,@-R15
    0000155A 2FB6                   MOV.L       R11,@-R15
    0000155C 2FA6                   MOV.L       R10,@-R15
    0000155E 2F96                   MOV.L       R9,@-R15
    00001560 2F86                   MOV.L       R8,@-R15
      Elements.c   505    {
      Elements.c   506        int w;
      Elements.c   507    
      Elements.c   508        for (w = 0; w < 6; w++) // dessin des rayons
    00001562 E900                   MOV         #0,R9
    00001564 DA2B                   MOV.L       L1314+2,R10; _laser
    00001566 4F22                   STS.L       PR,@-R15
    00001568 7FE0                   ADD         #-32,R15
    0000156A 64A3                   MOV         R10,R4
    0000156C 1F41                   MOV.L       R4,@(4,R15)
    0000156E 1F42                   MOV.L       R4,@(8,R15)
    00001570 1F44                   MOV.L       R4,@(16,R15)
    00001572 430B                   JSR         @R3
    00001574 E006                   MOV         #6,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001576 E8FF                   MOV         #-1,R8
    00001578 DB28                   MOV.L       L1314+10,R11; _ML_rectangle
    0000157A EC03                   MOV         #3,R12
    0000157C 1F03                   MOV.L       R0,@(12,R15)
    0000157E ED01                   MOV         #1,R13
    00001580              L1153:                            
    00001580 6393                   MOV         R9,R3
    00001582 6293                   MOV         R9,R2
    00001584 4300                   SHLL        R3
    00001586 332C                   ADD         R2,R3
    00001588 4308                   SHLL2       R3
    0000158A 33AC                   ADD         R10,R3
    0000158C 2F32                   MOV.L       R3,@R15
    0000158E 5032                   MOV.L       @(8,R3),R0
    00001590 8801                   CMP/EQ      #1,R0
    00001592 8B4D                   BF          L1154
      Elements.c   509        {
      Elements.c   510            if (laser[w].phase == 1) // si le laser est a sa premiere phase
      Elements.c   511            {
      Elements.c   512                ML_rectangle(6,laser[w].y+1,121,laser[w].y+5,1,ML_BLACK,ML_CHECKER); // animation du laser
    00001594 2FC6                   MOV.L       R12,@-R15
    00001596 2FD6                   MOV.L       R13,@-R15
    00001598 2FD6                   MOV.L       R13,@-R15
    0000159A 51F3                   MOV.L       @(12,R15),R1
    0000159C D020                   MOV.L       L1314+14,R0; H'40A00000
    0000159E 1F19                   MOV.L       R1,@(36,R15)
    000015A0 6112                   MOV.L       @R1,R1
    000015A2 1F1A                   MOV.L       R1,@(40,R15)
    000015A4 D31F                   MOV.L       L1314+18,R3; __adds
    000015A6 430B                   JSR         @R3
    000015A8 0009                   NOP
    000015AA D21F                   MOV.L       L1314+22,R2; __stoi
    000015AC 420B                   JSR         @R2
    000015AE 0009                   NOP
    000015B0 51FA                   MOV.L       @(40,R15),R1
    000015B2 6703                   MOV         R0,R7
    000015B4 D31B                   MOV.L       L1314+18,R3; __adds
    000015B6 D01D                   MOV.L       L1314+26,R0; H'3F800000
    000015B8 430B                   JSR         @R3
    000015BA E679                   MOV         #121,R6
    000015BC D21A                   MOV.L       L1314+22,R2; __stoi
    000015BE 420B                   JSR         @R2
    000015C0 0009                   NOP
    000015C2 6503                   MOV         R0,R5
    000015C4 4B0B                   JSR         @R11
    000015C6 E406                   MOV         #6,R4
    000015C8 7F0C                   ADD         #12,R15
      Elements.c   513                if (temps%6<3) ML_rectangle(6,laser[w].y+1,121,laser[w].y+5,1,ML_TRANSPARENT,ML_XOR);
    000015CA 53F3                   MOV.L       @(12,R15),R3
    000015CC 33C3                   CMP/GE      R12,R3
    000015CE 896B                   BT          L1156
    000015D0 D214                   MOV.L       L1314+18,R2; __adds
    000015D2 E102                   MOV         #2,R1
    000015D4 2F16                   MOV.L       R1,@-R15
    000015D6 6093                   MOV         R9,R0
    000015D8 2F86                   MOV.L       R8,@-R15
    000015DA 6393                   MOV         R9,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015DC D110                   MOV.L       L1314+14,R1; H'40A00000
    000015DE 4000                   SHLL        R0
    000015E0 2FD6                   MOV.L       R13,@-R15
    000015E2 303C                   ADD         R3,R0
    000015E4 4008                   SHLL2       R0
    000015E6 30AC                   ADD         R10,R0
    000015E8 1F08                   MOV.L       R0,@(32,R15)
    000015EA 6002                   MOV.L       @R0,R0
    000015EC 420B                   JSR         @R2
    000015EE 1F03                   MOV.L       R0,@(12,R15)
    000015F0 D30D                   MOV.L       L1314+22,R3; __stoi
    000015F2 430B                   JSR         @R3
    000015F4 0009                   NOP
    000015F6 6703                   MOV         R0,R7
    000015F8 51F3                   MOV.L       @(12,R15),R1
    000015FA D00C                   MOV.L       L1314+26,R0; H'3F800000
    000015FC D209                   MOV.L       L1314+18,R2; __adds
    000015FE 420B                   JSR         @R2
    00001600 E679                   MOV         #121,R6
    00001602 D309                   MOV.L       L1314+22,R3; __stoi
    00001604 430B                   JSR         @R3
    00001606 0009                   NOP
    00001608 6503                   MOV         R0,R5
    0000160A 4B0B                   JSR         @R11
    0000160C E406                   MOV         #6,R4
    0000160E A04B                   BRA         L1156
    00001610 7F0C                   ADD         #12,R15
    00001612              L1314:                            
    00001612 0000                   .DATA.W     0
    00001614 <00000000>             .DATA.L     _laser
    00001618 <00000000>             .DATA.L     __modls
    0000161C <00000000>             .DATA.L     _ML_rectangle
    00001620 40A00000               .DATA.L     H'40A00000
    00001624 <00000000>             .DATA.L     __adds
    00001628 <00000000>             .DATA.L     __stoi
    0000162C 3F800000               .DATA.L     H'3F800000
    00001630              L1154:                            
      Elements.c   514            }
      Elements.c   515            else if (laser[w].phase == 2) // si le laser est a sa deuxieme phase
    00001630 50F4                   MOV.L       @(16,R15),R0
    00001632 5002                   MOV.L       @(8,R0),R0
    00001634 8802                   CMP/EQ      #2,R0
    00001636 8B37                   BF          L1156
      Elements.c   516            {
      Elements.c   517                ML_rectangle(6,laser[w].y+1,121,laser[w].y+5,1,ML_CHECKER,ML_BLACK); // animation du laser
    00001638 2FD6                   MOV.L       R13,@-R15
    0000163A 2FC6                   MOV.L       R12,@-R15
    0000163C 2FD6                   MOV.L       R13,@-R15
    0000163E 51F5                   MOV.L       @(20,R15),R1
    00001640 D045                   MOV.L       L1315+2,R0 ; H'40A00000
    00001642 6112                   MOV.L       @R1,R1
    00001644 D345                   MOV.L       L1315+6,R3 ; __adds
    00001646 1F13                   MOV.L       R1,@(12,R15)
    00001648 430B                   JSR         @R3
    0000164A 0009                   NOP
    0000164C D244                   MOV.L       L1315+10,R2; __stoi
    0000164E 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001650 0009                   NOP
    00001652 6703                   MOV         R0,R7
    00001654 51F3                   MOV.L       @(12,R15),R1
    00001656 D043                   MOV.L       L1315+14,R0; H'3F800000
    00001658 D340                   MOV.L       L1315+6,R3 ; __adds
    0000165A 430B                   JSR         @R3
    0000165C E679                   MOV         #121,R6
    0000165E D240                   MOV.L       L1315+10,R2; __stoi
    00001660 420B                   JSR         @R2
    00001662 0009                   NOP
    00001664 6503                   MOV         R0,R5
    00001666 4B0B                   JSR         @R11
    00001668 E406                   MOV         #6,R4
    0000166A 7F0C                   ADD         #12,R15
      Elements.c   518                if (temps%6<3) ML_rectangle(6,laser[w].y+1,121,laser[w].y+5,1,ML_XOR,ML_TRANSPARENT);
    0000166C 53F3                   MOV.L       @(12,R15),R3
    0000166E 33C3                   CMP/GE      R12,R3
    00001670 891A                   BT          L1156
    00001672 E302                   MOV         #2,R3
    00001674 D038                   MOV.L       L1315+2,R0 ; H'40A00000
    00001676 2F86                   MOV.L       R8,@-R15
    00001678 2F36                   MOV.L       R3,@-R15
    0000167A 2FD6                   MOV.L       R13,@-R15
    0000167C 51F4                   MOV.L       @(16,R15),R1
    0000167E 6112                   MOV.L       @R1,R1
    00001680 D236                   MOV.L       L1315+6,R2 ; __adds
    00001682 1F13                   MOV.L       R1,@(12,R15)
    00001684 420B                   JSR         @R2
    00001686 0009                   NOP
    00001688 D235                   MOV.L       L1315+10,R2; __stoi
    0000168A 420B                   JSR         @R2
    0000168C 0009                   NOP
    0000168E 6703                   MOV         R0,R7
    00001690 51F3                   MOV.L       @(12,R15),R1
    00001692 D034                   MOV.L       L1315+14,R0; H'3F800000
    00001694 D231                   MOV.L       L1315+6,R2 ; __adds
    00001696 420B                   JSR         @R2
    00001698 E679                   MOV         #121,R6
    0000169A D231                   MOV.L       L1315+10,R2; __stoi
    0000169C 420B                   JSR         @R2
    0000169E 0009                   NOP
    000016A0 6503                   MOV         R0,R5
    000016A2 4B0B                   JSR         @R11
    000016A4 E406                   MOV         #6,R4
    000016A6 7F0C                   ADD         #12,R15
    000016A8              L1156:                            
    000016A8 53F1                   MOV.L       @(4,R15),R3
    000016AA 7901                   ADD         #1,R9
    000016AC 730C                   ADD         #12,R3
    000016AE 1F31                   MOV.L       R3,@(4,R15)
    000016B0 52F2                   MOV.L       @(8,R15),R2
    000016B2 E306                   MOV         #6,R3
    000016B4 720C                   ADD         #12,R2
    000016B6 3933                   CMP/GE      R3,R9
    000016B8 1F22                   MOV.L       R2,@(8,R15)
    000016BA 51F4                   MOV.L       @(16,R15),R1
    000016BC 710C                   ADD         #12,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016BE 8D02                   BT/S        L1316
    000016C0 1F14                   MOV.L       R1,@(16,R15)
    000016C2 AF5D                   BRA         L1153
    000016C4 0009                   NOP
    000016C6              L1316:                            
    000016C6 64A3                   MOV         R10,R4
    000016C8 9845                   MOV.W       L1315,R8   ; H'0080
    000016CA ED08                   MOV         #8,R13
    000016CC D926                   MOV.L       L1315+18,R9; _ML_bmp_8_and_cl
    000016CE 6CA3                   MOV         R10,R12
    000016D0 6BA3                   MOV         R10,R11
    000016D2 7A48                   ADD         #72,R10
    000016D4 1FA2                   MOV.L       R10,@(8,R15)
    000016D6 63E3                   MOV         R14,R3
    000016D8 DA24                   MOV.L       L1315+22,R10; _ML_bmp_8_or_cl
    000016DA 38E8                   SUB         R14,R8
    000016DC 73F8                   ADD         #-8,R3
    000016DE 1F31                   MOV.L       R3,@(4,R15)
      Elements.c   519            }
      Elements.c   520        }
      Elements.c   521    
      Elements.c   522        for (w = 0; w < 6; w++) // dessin des canons
    000016E0              L1159:                            
      Elements.c   523        {
      Elements.c   524            if (laser[w].exists) // si le laser existe
    000016E0 53B1                   MOV.L       @(4,R11),R3
    000016E2 2338                   TST         R3,R3
    000016E4 8B01                   BF          L1317
    000016E6 A087                   BRA         L1160
    000016E8 0009                   NOP
    000016EA              L1317:                            
      Elements.c   525            {
      Elements.c   526                ML_bmp_8_and_cl(laserGaucheAlpha,temps<=8?-8+temps:temps>laserPattern[chosenPattern][7]?laserP
                         +attern[chosenPattern][7]-temps:0,laser[w].y); // masque alpha des canons du laser
    000016EA D31D                   MOV.L       L1315+10,R3; __stoi
    000016EC 430B                   JSR         @R3
    000016EE 60C2                   MOV.L       @R12,R0
    000016F0 3ED7                   CMP/GT      R13,R14
    000016F2 8D02                   BT/S        L1161
    000016F4 6603                   MOV         R0,R6
    000016F6 A011                   BRA         L1163
    000016F8 55F1                   MOV.L       @(4,R15),R5
    000016FA              L1161:                            
    000016FA D31D                   MOV.L       L1315+26,R3; _chosenPattern
    000016FC D01D                   MOV.L       L1315+30,R0; H'0000000E+__$laserPattern
    000016FE 6532                   MOV.L       @R3,R5
    00001700 4508                   SHLL2       R5
    00001702 4508                   SHLL2       R5
    00001704 055D                   MOV.W       @(R0,R5),R5
    00001706 655D                   EXTU.W      R5,R5
    00001708 3E57                   CMP/GT      R5,R14
    0000170A 8B06                   BF          L1162
    0000170C 6532                   MOV.L       @R3,R5
    0000170E 4508                   SHLL2       R5
    00001710 4508                   SHLL2       R5
    00001712 055D                   MOV.W       @(R0,R5),R5
    00001714 655D                   EXTU.W      R5,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001716 A001                   BRA         L1163
    00001718 35E8                   SUB         R14,R5
    0000171A              L1162:                            
    0000171A E500                   MOV         #0,R5
    0000171C              L1163:                            
    0000171C D416                   MOV.L       L1315+34,R4; __$laserGaucheAlpha
    0000171E 490B                   JSR         @R9
    00001720 0009                   NOP
      Elements.c   527                ML_bmp_8_and_cl(laserDroiteAlpha,temps<=8?128-temps:temps>laserPattern[chosenPattern][7]?temps
                         +-laserPattern[chosenPattern][7]+120:120,laser[w].y);
    00001722 D30F                   MOV.L       L1315+10,R3; __stoi
    00001724 430B                   JSR         @R3
    00001726 60C2                   MOV.L       @R12,R0
    00001728 3ED7                   CMP/GT      R13,R14
    0000172A 8D02                   BT/S        L1165
    0000172C 6603                   MOV         R0,R6
    0000172E A026                   BRA         L1167
    00001730 6583                   MOV         R8,R5
    00001732              L1165:                            
    00001732 D30F                   MOV.L       L1315+26,R3; _chosenPattern
    00001734 D00F                   MOV.L       L1315+30,R0; H'0000000E+__$laserPattern
    00001736 6532                   MOV.L       @R3,R5
    00001738 4508                   SHLL2       R5
    0000173A 4508                   SHLL2       R5
    0000173C 055D                   MOV.W       @(R0,R5),R5
    0000173E 655D                   EXTU.W      R5,R5
    00001740 3E57                   CMP/GT      R5,R14
    00001742 8B1B                   BF          L1166
    00001744 6232                   MOV.L       @R3,R2
    00001746 65E3                   MOV         R14,R5
    00001748 4208                   SHLL2       R2
    0000174A 4208                   SHLL2       R2
    0000174C 012D                   MOV.W       @(R0,R2),R1
    0000174E 611D                   EXTU.W      R1,R1
    00001750 3518                   SUB         R1,R5
    00001752 A014                   BRA         L1167
    00001754 7578                   ADD         #120,R5
    00001756              L1315:                            
    00001756 0080                   .DATA.W     H'0080
    00001758 40A00000               .DATA.L     H'40A00000
    0000175C <00000000>             .DATA.L     __adds
    00001760 <00000000>             .DATA.L     __stoi
    00001764 3F800000               .DATA.L     H'3F800000
    00001768 <00000000>             .DATA.L     _ML_bmp_8_and_cl
    0000176C <00000000>             .DATA.L     _ML_bmp_8_or_cl
    00001770 <00000000>             .DATA.L     _chosenPattern
    00001774 <0000000E>             .DATA.L     H'0000000E+__$laserPattern
    00001778 <00000000>             .DATA.L     __$laserGaucheAlpha
    0000177C              L1166:                            
    0000177C E578                   MOV         #120,R5
    0000177E              L1167:                            
    0000177E D483                   MOV.L       L1318,R4   ; __$laserDroiteAlpha
    00001780 490B                   JSR         @R9
    00001782 0009                   NOP
      Elements.c   528                ML_bmp_8_or_cl(laserGauche,temps<=8?-8+temps:temps>laserPattern[chosenPattern][7]?laserPattern
                         +[chosenPattern][7]-temps:0,laser[w].y); // affichage des canons, animation d'entrée et de sortie
    00001784 D382                   MOV.L       L1318+4,R3 ; __stoi




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001786 430B                   JSR         @R3
    00001788 60C2                   MOV.L       @R12,R0
    0000178A 3ED7                   CMP/GT      R13,R14
    0000178C 8D02                   BT/S        L1169
    0000178E 6603                   MOV         R0,R6
    00001790 A011                   BRA         L1171
    00001792 55F1                   MOV.L       @(4,R15),R5
    00001794              L1169:                            
    00001794 D37F                   MOV.L       L1318+8,R3 ; _chosenPattern
    00001796 6532                   MOV.L       @R3,R5
    00001798 D07F                   MOV.L       L1318+12,R0; H'0000000E+__$laserPattern
    0000179A 4508                   SHLL2       R5
    0000179C 4508                   SHLL2       R5
    0000179E 055D                   MOV.W       @(R0,R5),R5
    000017A0 655D                   EXTU.W      R5,R5
    000017A2 3E57                   CMP/GT      R5,R14
    000017A4 8B06                   BF          L1170
    000017A6 6532                   MOV.L       @R3,R5
    000017A8 4508                   SHLL2       R5
    000017AA 4508                   SHLL2       R5
    000017AC 055D                   MOV.W       @(R0,R5),R5
    000017AE 655D                   EXTU.W      R5,R5
    000017B0 A001                   BRA         L1171
    000017B2 35E8                   SUB         R14,R5
    000017B4              L1170:                            
    000017B4 E500                   MOV         #0,R5
    000017B6              L1171:                            
    000017B6 D479                   MOV.L       L1318+16,R4; __$laserGauche
    000017B8 4A0B                   JSR         @R10
    000017BA 0009                   NOP
      Elements.c   529                ML_bmp_8_or_cl(laserDroite,temps<=8?128-temps:temps>laserPattern[chosenPattern][7]?temps-laser
                         +Pattern[chosenPattern][7]+120:120,laser[w].y);
    000017BC D374                   MOV.L       L1318+4,R3 ; __stoi
    000017BE 430B                   JSR         @R3
    000017C0 60C2                   MOV.L       @R12,R0
    000017C2 3ED7                   CMP/GT      R13,R14
    000017C4 8D02                   BT/S        L1173
    000017C6 6603                   MOV         R0,R6
    000017C8 A013                   BRA         L1175
    000017CA 6583                   MOV         R8,R5
    000017CC              L1173:                            
    000017CC D371                   MOV.L       L1318+8,R3 ; _chosenPattern
    000017CE 6532                   MOV.L       @R3,R5
    000017D0 D071                   MOV.L       L1318+12,R0; H'0000000E+__$laserPattern
    000017D2 4508                   SHLL2       R5
    000017D4 4508                   SHLL2       R5
    000017D6 055D                   MOV.W       @(R0,R5),R5
    000017D8 655D                   EXTU.W      R5,R5
    000017DA 3E57                   CMP/GT      R5,R14
    000017DC 8B08                   BF          L1174
    000017DE 65E3                   MOV         R14,R5
    000017E0 6232                   MOV.L       @R3,R2
    000017E2 4208                   SHLL2       R2
    000017E4 4208                   SHLL2       R2
    000017E6 012D                   MOV.W       @(R0,R2),R1
    000017E8 611D                   EXTU.W      R1,R1
    000017EA 3518                   SUB         R1,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017EC A001                   BRA         L1175
    000017EE 7578                   ADD         #120,R5
    000017F0              L1174:                            
    000017F0 E578                   MOV         #120,R5
    000017F2              L1175:                            
    000017F2 D46B                   MOV.L       L1318+20,R4; __$laserDroite
    000017F4 4A0B                   JSR         @R10
    000017F6 0009                   NOP
    000017F8              L1160:                            
    000017F8 53F2                   MOV.L       @(8,R15),R3
    000017FA 7B0C                   ADD         #12,R11
    000017FC 3B32                   CMP/HS      R3,R11
    000017FE 8D02                   BT/S        L1319
    00001800 7C0C                   ADD         #12,R12
    00001802 AF6D                   BRA         L1159
    00001804 0009                   NOP
    00001806              L1319:                            
      Elements.c   530            }
      Elements.c   531        }
      Elements.c   532    }
    00001806 7F20                   ADD         #32,R15
    00001808 4F26                   LDS.L       @R15+,PR
    0000180A 68F6                   MOV.L       @R15+,R8
    0000180C 69F6                   MOV.L       @R15+,R9
    0000180E 6AF6                   MOV.L       @R15+,R10
    00001810 6BF6                   MOV.L       @R15+,R11
    00001812 6CF6                   MOV.L       @R15+,R12
    00001814 6DF6                   MOV.L       @R15+,R13
    00001816 000B                   RTS
    00001818 6EF6                   MOV.L       @R15+,R14
      Elements.c   533    int collisionLasers(int yBarry, int vehicule)
    0000181A              _collisionLasers:                ; function: collisionLasers
                                                           ; frame size=16
                                                           ; used runtime library name:
                                                           ; __adds, __itos, __ges, __les
    0000181A 2FE6                   MOV.L       R14,@-R15
    0000181C 2FD6                   MOV.L       R13,@-R15
    0000181E 2FC6                   MOV.L       R12,@-R15
    00001820 4F22                   STS.L       PR,@-R15
    00001822 D760                   MOV.L       L1318+24,R7; _laser
    00001824 DE60                   MOV.L       L1318+28,R14; __$vehiculesY
    00001826 6673                   MOV         R7,R6
    00001828 6D73                   MOV         R7,R13
    0000182A 7D48                   ADD         #72,R13
      Elements.c   534    {
      Elements.c   535        int w;
      Elements.c   536    
      Elements.c   537        for (w = 0; w < 6; w++)
    0000182C D75F                   MOV.L       L1318+32,R7; _sauvegarde
    0000182E 36D2                   CMP/HS      R13,R6
    00001830 8D3D                   BT/S        L1177
    00001832 EC00                   MOV         #0,R12
    00001834              L1178:                            
      Elements.c   538            if (laser[w].exists && laser[w].phase == 2 && laser[w].y + 1 <= yBarry + vehiculesY[1][vehiculeHit
                         +box] && laser[w].y + 1 >= yBarry + vehiculesY[0][vehiculeHitbox] - 5)
    00001834 5261                   MOV.L       @(4,R6),R2
    00001836 2228                   TST         R2,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001838 8936                   BT          L1179
    0000183A 5062                   MOV.L       @(8,R6),R0
    0000183C 8802                   CMP/EQ      #2,R0
    0000183E 8B33                   BF          L1179
    00001840 D05B                   MOV.L       L1318+36,R0; H'3F800000
    00001842 D25C                   MOV.L       L1318+40,R2; __adds
    00001844 420B                   JSR         @R2
    00001846 6162                   MOV.L       @R6,R1
    00001848 D35B                   MOV.L       L1318+44,R3; _vehiculeHitbox
    0000184A 6103                   MOV         R0,R1
    0000184C D25B                   MOV.L       L1318+48,R2; __itos
    0000184E 6032                   MOV.L       @R3,R0
    00001850 30EC                   ADD         R14,R0
    00001852 840C                   MOV.B       @(12,R0),R0
    00001854 600C                   EXTU.B      R0,R0
    00001856 420B                   JSR         @R2
    00001858 304C                   ADD         R4,R0
    0000185A D259                   MOV.L       L1318+52,R2; __les
    0000185C 420B                   JSR         @R2
    0000185E 0009                   NOP
    00001860 8800                   CMP/EQ      #0,R0
    00001862 8921                   BT          L1179
    00001864 D052                   MOV.L       L1318+36,R0; H'3F800000
    00001866 D253                   MOV.L       L1318+40,R2; __adds
    00001868 420B                   JSR         @R2
    0000186A 6162                   MOV.L       @R6,R1
    0000186C D253                   MOV.L       L1318+48,R2; __itos
    0000186E 6103                   MOV         R0,R1
    00001870 6032                   MOV.L       @R3,R0
    00001872 00EC                   MOV.B       @(R0,R14),R0
    00001874 600C                   EXTU.B      R0,R0
    00001876 304C                   ADD         R4,R0
    00001878 420B                   JSR         @R2
    0000187A 70FB                   ADD         #-5,R0
    0000187C D251                   MOV.L       L1318+56,R2; __ges
    0000187E 420B                   JSR         @R2
    00001880 0009                   NOP
    00001882 8800                   CMP/EQ      #0,R0
    00001884 8910                   BT          L1179
      Elements.c   539            {
      Elements.c   540                if (vehicule == 0)
    00001886 2558                   TST         R5,R5
    00001888 8B0C                   BF          L1180
      Elements.c   541                {
      Elements.c   542                    sauvegarde->statMort[1] += 1;
    0000188A E056                   MOV         #86,R0
    0000188C 6372                   MOV.L       @R7,R3
      Elements.c   543                    if (sauvegarde->succes[5] != -1) sauvegarde->succes[5] = 0;
    0000188E E165                   MOV         #101,R1
    00001890 023D                   MOV.W       @(R0,R3),R2
    00001892 7201                   ADD         #1,R2
    00001894 0325                   MOV.W       R2,@(R0,R3)
    00001896 6072                   MOV.L       @R7,R0
    00001898 001C                   MOV.B       @(R0,R1),R0
    0000189A 88FF                   CMP/EQ      #-1,R0
    0000189C 8902                   BT          L1180
    0000189E E065                   MOV         #101,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000018A0 6272                   MOV.L       @R7,R2
    000018A2 02C4                   MOV.B       R12,@(R0,R2)
    000018A4              L1180:                            
      Elements.c   544                }
      Elements.c   545                return 1; // si la piece touche barry
    000018A4 A004                   BRA         L1182
    000018A6 E001                   MOV         #1,R0
    000018A8              L1179:                            
    000018A8 760C                   ADD         #12,R6
    000018AA 36D2                   CMP/HS      R13,R6
    000018AC 8BC2                   BF          L1178
    000018AE              L1177:                            
      Elements.c   546            }
      Elements.c   547    
      Elements.c   548    
      Elements.c   549        return 0;
    000018AE E000                   MOV         #0,R0
      Elements.c   550    }
    000018B0              L1182:                            
    000018B0 4F26                   LDS.L       @R15+,PR
    000018B2 6CF6                   MOV.L       @R15+,R12
    000018B4 6DF6                   MOV.L       @R15+,R13
    000018B6 000B                   RTS
    000018B8 6EF6                   MOV.L       @R15+,R14
      Elements.c   551    
      Elements.c   552    void initMissiles()
    000018BA              _initMissiles:                   ; function: initMissiles
                                                           ; frame size=0
    000018BA E500                   MOV         #0,R5
    000018BC D742                   MOV.L       L1318+60,R7; _missile
    000018BE 6473                   MOV         R7,R4
    000018C0 6673                   MOV         R7,R6
    000018C2 7660                   ADD         #96,R6
      Elements.c   553    {
      Elements.c   554        int w;
      Elements.c   555    
      Elements.c   556        for (w = 0; w <6; w++)
    000018C4              L1183:                            
      Elements.c   557            missile[w].exists = 0;
    000018C4 1452                   MOV.L       R5,@(8,R4)
    000018C6 7410                   ADD         #16,R4
    000018C8 3462                   CMP/HS      R6,R4
    000018CA 8BFB                   BF          L1183
      Elements.c   558    }
    000018CC 000B                   RTS
    000018CE 0009                   NOP
      Elements.c   559    int genererMissiles(int yBarry)
    000018D0              _genererMissiles:                ; function: genererMissiles
                                                           ; frame size=0
      Elements.c   560    {
      Elements.c   561        int w;
      Elements.c   562    
      Elements.c   563        for (w = 0; missile[w].exists && w < 6; w++); // on regarde s'il y a pas trop de missiles a l'ecran
    000018D0 D73D                   MOV.L       L1318+60,R7; _missile
    000018D2 A001                   BRA         L1184
    000018D4 E500                   MOV         #0,R5
    000018D6              L1185:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000018D6 7501                   ADD         #1,R5
    000018D8              L1184:                            
    000018D8 6253                   MOV         R5,R2
    000018DA 4208                   SHLL2       R2
    000018DC 4208                   SHLL2       R2
    000018DE 327C                   ADD         R7,R2
    000018E0 5322                   MOV.L       @(8,R2),R3
    000018E2 2338                   TST         R3,R3
    000018E4 8902                   BT          L1186
    000018E6 E306                   MOV         #6,R3
    000018E8 3533                   CMP/GE      R3,R5
    000018EA 8BF4                   BF          L1185
    000018EC              L1186:                            
      Elements.c   564        if (w == 6) return 0;
    000018EC 6053                   MOV         R5,R0
    000018EE 8806                   CMP/EQ      #6,R0
    000018F0 8B01                   BF          L1187
    000018F2 000B                   RTS
    000018F4 E000                   MOV         #0,R0
    000018F6              L1187:                            
      Elements.c   565    
      Elements.c   566        missile[w].exists = 1;
    000018F6 6653                   MOV         R5,R6
    000018F8 4608                   SHLL2       R6
    000018FA 4608                   SHLL2       R6
    000018FC 367C                   ADD         R7,R6
    000018FE E301                   MOV         #1,R3
    00001900 1632                   MOV.L       R3,@(8,R6)
      Elements.c   567        missile[w].temps = 0;
    00001902 E200                   MOV         #0,R2
    00001904 1623                   MOV.L       R2,@(12,R6)
      Elements.c   568        missile[w].x = 128;
    00001906 737F                   ADD         #127,R3
    00001908 2632                   MOV.L       R3,@R6
      Elements.c   569        missile[w].y = yBarry; // on definit le missile aux coordonees de barry
    0000190A 1641                   MOV.L       R4,@(4,R6)
      Elements.c   570    }
    0000190C              L1188:                            
    0000190C 000B                   RTS
    0000190E 0009                   NOP
      Elements.c   571    int deplacerMissiles(int yBarry)
    00001910              _deplacerMissiles:               ; function: deplacerMissiles
                                                           ; frame size=52
    00001910 2FE6                   MOV.L       R14,@-R15
      Elements.c   572    {
      Elements.c   573        int w, a = 0, phase1, phase2;
      Elements.c   574    
      Elements.c   575        phase1 = 40;
    00001912 E328                   MOV         #40,R3
    00001914 2FD6                   MOV.L       R13,@-R15
      Elements.c   576        phase2 = 60;
    00001916 E23C                   MOV         #60,R2
    00001918 2FC6                   MOV.L       R12,@-R15
    0000191A 2FB6                   MOV.L       R11,@-R15
    0000191C 2FA6                   MOV.L       R10,@-R15
    0000191E EA00                   MOV         #0,R10
    00001920 DD29                   MOV.L       L1318+60,R13; _missile




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   577    
      Elements.c   578        for (w = 0; w < 6; w++)
    00001922 6CA3                   MOV         R10,R12
    00001924 2F96                   MOV.L       R9,@-R15
    00001926 2F86                   MOV.L       R8,@-R15
    00001928 4F22                   STS.L       PR,@-R15
    0000192A 7FEC                   ADD         #-20,R15
    0000192C 2F42                   MOV.L       R4,@R15
    0000192E E400                   MOV         #0,R4
    00001930 1FA4                   MOV.L       R10,@(16,R15)
    00001932 34DC                   ADD         R13,R4
    00001934 1F32                   MOV.L       R3,@(8,R15)
    00001936 6843                   MOV         R4,R8
    00001938 1F23                   MOV.L       R2,@(12,R15)
    0000193A 6B43                   MOV         R4,R11
    0000193C A08E                   BRA         L1189
    0000193E 1F41                   MOV.L       R4,@(4,R15)
    00001940              L1190:                            
    00001940 69C3                   MOV         R12,R9
    00001942 4908                   SHLL2       R9
    00001944 4908                   SHLL2       R9
    00001946 39DC                   ADD         R13,R9
    00001948 5392                   MOV.L       @(8,R9),R3
    0000194A 2338                   TST         R3,R3
    0000194C 8B01                   BF          L1320
    0000194E A07F                   BRA         L1192
    00001950 0009                   NOP
    00001952              L1320:                            
      Elements.c   579        {
      Elements.c   580            if (missile[w].exists == 0) continue;
      Elements.c   581            a = 1;
    00001952 E201                   MOV         #1,R2
    00001954 1F24                   MOV.L       R2,@(16,R15)
    00001956 6EC3                   MOV         R12,R14
      Elements.c   582            missile[w].temps++;
    00001958 5393                   MOV.L       @(12,R9),R3
    0000195A 4E08                   SHLL2       R14
    0000195C 7301                   ADD         #1,R3
    0000195E 4E08                   SHLL2       R14
    00001960 1933                   MOV.L       R3,@(12,R9)
    00001962 53F2                   MOV.L       @(8,R15),R3
    00001964 5293                   MOV.L       @(12,R9),R2
    00001966 3233                   CMP/GE      R3,R2
    00001968 8D30                   BT/S        L1193
    0000196A 3EDC                   ADD         R13,R14
      Elements.c   583    
      Elements.c   584            if (missile[w].temps < phase1) // si le missile est pas encore lance il suit barry
      Elements.c   585            {
      Elements.c   586                if (missile[w].y < yBarry) missile[w].y++;
    0000196C 63F2                   MOV.L       @R15,R3
    0000196E 51E1                   MOV.L       @(4,R14),R1
    00001970 3133                   CMP/GE      R3,R1
    00001972 8903                   BT          L1194
    00001974 53E1                   MOV.L       @(4,R14),R3
    00001976 7301                   ADD         #1,R3
    00001978 A06A                   BRA         L1192
    0000197A 1E31                   MOV.L       R3,@(4,R14)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000197C              L1194:                            
      Elements.c   587                else if (missile[w].y > yBarry) missile[w].y--;
    0000197C 61F2                   MOV.L       @R15,R1
    0000197E 52E1                   MOV.L       @(4,R14),R2
    00001980 3217                   CMP/GT      R1,R2
    00001982 8B65                   BF          L1192
    00001984 53E1                   MOV.L       @(4,R14),R3
    00001986 73FF                   ADD         #-1,R3
    00001988 A062                   BRA         L1192
    0000198A 1E31                   MOV.L       R3,@(4,R14)
    0000198C              L1318:                            
    0000198C <00000000>             .DATA.L     __$laserDroiteAlpha
    00001990 <00000000>             .DATA.L     __stoi
    00001994 <00000000>             .DATA.L     _chosenPattern
    00001998 <0000000E>             .DATA.L     H'0000000E+__$laserPattern
    0000199C <00000000>             .DATA.L     __$laserGauche
    000019A0 <00000000>             .DATA.L     __$laserDroite
    000019A4 <00000000>             .DATA.L     _laser
    000019A8 <00000000>             .DATA.L     __$vehiculesY
    000019AC <00000000>             .DATA.L     _sauvegarde
    000019B0 3F800000               .DATA.L     H'3F800000
    000019B4 <00000000>             .DATA.L     __adds
    000019B8 <00000000>             .DATA.L     _vehiculeHitbox
    000019BC <00000000>             .DATA.L     __itos
    000019C0 <00000000>             .DATA.L     __les
    000019C4 <00000000>             .DATA.L     __ges
    000019C8 <00000000>             .DATA.L     _missile
    000019CC              L1193:                            
      Elements.c   588            }
      Elements.c   589            else if (missile[w].temps >= phase2) // sinon on le bloque et on le fait avancer
    000019CC 51F3                   MOV.L       @(12,R15),R1
    000019CE 52E3                   MOV.L       @(12,R14),R2
    000019D0 3213                   CMP/GE      R1,R2
    000019D2 8B3D                   BF          L1192
      Elements.c   590            {
      Elements.c   591                if (missile[w].exists == 1)
    000019D4 50E2                   MOV.L       @(8,R14),R0
    000019D6 8801                   CMP/EQ      #1,R0
    000019D8 8B2F                   BF          L1199
      Elements.c   592                {
      Elements.c   593                    missile[w].x -= 4;
      Elements.c   594    
      Elements.c   595                    if (missile[w].x < -16) // si le missile sort de l'ecran on le supprime
    000019DA E2F0                   MOV         #-16,R2
    000019DC 63E2                   MOV.L       @R14,R3
    000019DE 73FC                   ADD         #-4,R3
    000019E0 2E32                   MOV.L       R3,@R14
    000019E2 6133                   MOV         R3,R1
    000019E4 3123                   CMP/GE      R2,R1
    000019E6 8904                   BT          L1200
      Elements.c   596                        missile[w].exists = 0;
    000019E8 60C3                   MOV         R12,R0
    000019EA 4008                   SHLL2       R0
    000019EC 4008                   SHLL2       R0
    000019EE 30DC                   ADD         R13,R0
    000019F0 10A2                   MOV.L       R10,@(8,R0)
    000019F2              L1200:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   597    
      Elements.c   598                    if (missile[w].x == 60 && rand()%2==1 && (sauvegarde->gadgetEquipe[0] == 4 || sauvegarde->
                         +gadgetEquipe[1] == 4)) missile[w].exists = 2;
    000019F2 60C3                   MOV         R12,R0
    000019F4 4008                   SHLL2       R0
    000019F6 4008                   SHLL2       R0
    000019F8 00DE                   MOV.L       @(R0,R13),R0
    000019FA 883C                   CMP/EQ      #60,R0
    000019FC 8B28                   BF          L1192
    000019FE D280                   MOV.L       L1321+2,R2 ; _rand
    00001A00 420B                   JSR         @R2
    00001A02 0009                   NOP
    00001A04 4011                   CMP/PZ      R0
    00001A06 8B01                   BF          L1202
    00001A08 A005                   BRA         L1203
    00001A0A C901                   AND         #1,R0
    00001A0C              L1202:                            
    00001A0C 6007                   NOT         R0,R0
    00001A0E 7001                   ADD         #1,R0
    00001A10 C901                   AND         #1,R0
    00001A12 6007                   NOT         R0,R0
    00001A14 7001                   ADD         #1,R0
    00001A16              L1203:                            
    00001A16 8801                   CMP/EQ      #1,R0
    00001A18 8B1A                   BF          L1192
    00001A1A D37A                   MOV.L       L1321+6,R3 ; _sauvegarde
    00001A1C 6032                   MOV.L       @R3,R0
    00001A1E 840C                   MOV.B       @(12,R0),R0
    00001A20 600C                   EXTU.B      R0,R0
    00001A22 8804                   CMP/EQ      #4,R0
    00001A24 8904                   BT          L1204
    00001A26 6032                   MOV.L       @R3,R0
    00001A28 840D                   MOV.B       @(13,R0),R0
    00001A2A 600C                   EXTU.B      R0,R0
    00001A2C 8804                   CMP/EQ      #4,R0
    00001A2E 8B0F                   BF          L1192
    00001A30              L1204:                            
    00001A30 53F1                   MOV.L       @(4,R15),R3
    00001A32 E202                   MOV         #2,R2
    00001A34 1322                   MOV.L       R2,@(8,R3)
    00001A36 A00B                   BRA         L1192
    00001A38 0009                   NOP
    00001A3A              L1199:                            
      Elements.c   599                }
      Elements.c   600                else
      Elements.c   601                {
      Elements.c   602                    missile[w].x -= 3;
      Elements.c   603                    missile[w].exists += 1;
      Elements.c   604                    if (missile[w].exists > 10) missile[w].exists = 0;
    00001A3A E20A                   MOV         #10,R2
    00001A3C 61B2                   MOV.L       @R11,R1
    00001A3E 71FD                   ADD         #-3,R1
    00001A40 2B12                   MOV.L       R1,@R11
    00001A42 53B2                   MOV.L       @(8,R11),R3
    00001A44 7301                   ADD         #1,R3
    00001A46 6133                   MOV         R3,R1
    00001A48 1B32                   MOV.L       R3,@(8,R11)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A4A 3127                   CMP/GT      R2,R1
    00001A4C 8B00                   BF          L1192
    00001A4E 18A2                   MOV.L       R10,@(8,R8)
    00001A50              L1192:                            
    00001A50 52F1                   MOV.L       @(4,R15),R2
    00001A52 7C01                   ADD         #1,R12
    00001A54 7810                   ADD         #16,R8
    00001A56 7B10                   ADD         #16,R11
    00001A58 7210                   ADD         #16,R2
    00001A5A 1F21                   MOV.L       R2,@(4,R15)
    00001A5C              L1189:                            
    00001A5C E306                   MOV         #6,R3
    00001A5E 3C33                   CMP/GE      R3,R12
    00001A60 8901                   BT          L1322
    00001A62 AF6D                   BRA         L1190
    00001A64 0009                   NOP
    00001A66              L1322:                            
      Elements.c   605                }
      Elements.c   606            }
      Elements.c   607        }
      Elements.c   608    
      Elements.c   609        return a;
    00001A66 50F4                   MOV.L       @(16,R15),R0
      Elements.c   610    }
    00001A68 7F14                   ADD         #20,R15
    00001A6A 4F26                   LDS.L       @R15+,PR
    00001A6C 68F6                   MOV.L       @R15+,R8
    00001A6E 69F6                   MOV.L       @R15+,R9
    00001A70 6AF6                   MOV.L       @R15+,R10
    00001A72 6BF6                   MOV.L       @R15+,R11
    00001A74 6CF6                   MOV.L       @R15+,R12
    00001A76 6DF6                   MOV.L       @R15+,R13
    00001A78 000B                   RTS
    00001A7A 6EF6                   MOV.L       @R15+,R14
      Elements.c   611    void afficherMissiles(int lvl)
    00001A7C              _afficherMissiles:               ; function: afficherMissiles
                                                           ; frame size=76
                                                           ; used runtime library name:
                                                           ; __modls
    00001A7C 2FE6                   MOV.L       R14,@-R15
      Elements.c   612    {
      Elements.c   613        int w, phase1, phase2;
      Elements.c   614    
      Elements.c   615        phase1 = 40;
    00001A7E E328                   MOV         #40,R3
    00001A80 2FD6                   MOV.L       R13,@-R15
      Elements.c   616        phase2 = 60;
    00001A82 E23C                   MOV         #60,R2
    00001A84 2FC6                   MOV.L       R12,@-R15
    00001A86 E500                   MOV         #0,R5
    00001A88 2FB6                   MOV.L       R11,@-R15
    00001A8A 6043                   MOV         R4,R0
    00001A8C 2FA6                   MOV.L       R10,@-R15
    00001A8E EB06                   MOV         #6,R11
    00001A90 2F96                   MOV.L       R9,@-R15
      Elements.c   617    
      Elements.c   618        for (w = 0;w < 6; w++)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A92 EA00                   MOV         #0,R10
    00001A94 2F86                   MOV.L       R8,@-R15
    00001A96 E903                   MOV         #3,R9
    00001A98 4F22                   STS.L       PR,@-R15
    00001A9A 4011                   CMP/PZ      R0
    00001A9C D85A                   MOV.L       L1321+10,R8; _missile
    00001A9E 7FE0                   ADD         #-32,R15
    00001AA0 1F32                   MOV.L       R3,@(8,R15)
    00001AA2 358C                   ADD         R8,R5
    00001AA4 1F21                   MOV.L       R2,@(4,R15)
    00001AA6 6D53                   MOV         R5,R13
    00001AA8 1F53                   MOV.L       R5,@(12,R15)
    00001AAA 2F52                   MOV.L       R5,@R15
    00001AAC 8F02                   BF/S        L1208
    00001AAE EE01                   MOV         #1,R14
    00001AB0 A005                   BRA         L1209
    00001AB2 C907                   AND         #7,R0
    00001AB4              L1208:                            
    00001AB4 6007                   NOT         R0,R0
    00001AB6 7001                   ADD         #1,R0
    00001AB8 C907                   AND         #7,R0
    00001ABA 6007                   NOT         R0,R0
    00001ABC 7001                   ADD         #1,R0
    00001ABE              L1209:                            
    00001ABE 1F06                   MOV.L       R0,@(24,R15)
    00001AC0              L1210:                            
    00001AC0 6CA3                   MOV         R10,R12
    00001AC2 4C08                   SHLL2       R12
    00001AC4 4C08                   SHLL2       R12
    00001AC6 3C8C                   ADD         R8,R12
    00001AC8 50C2                   MOV.L       @(8,R12),R0
    00001ACA 8801                   CMP/EQ      #1,R0
    00001ACC 8B6D                   BF          L1211
    00001ACE D44F                   MOV.L       L1321+14,R4; __$warning1
    00001AD0 52F2                   MOV.L       @(8,R15),R2
    00001AD2 53C3                   MOV.L       @(12,R12),R3
    00001AD4 3323                   CMP/GE      R2,R3
    00001AD6 8905                   BT          L1212
      Elements.c   619        {
      Elements.c   620            if (missile[w].exists == 1) // si le missile existe
      Elements.c   621            {
      Elements.c   622                if (missile[w].temps < phase1) // affichage du point d'exclamation
      Elements.c   623                    ML_bmp_8_or(warning1,119,missile[w].y);
    00001AD8 56C1                   MOV.L       @(4,R12),R6
    00001ADA D34D                   MOV.L       L1321+18,R3; _ML_bmp_8_or
    00001ADC 430B                   JSR         @R3
    00001ADE E577                   MOV         #119,R5
    00001AE0 A077                   BRA         L1223
    00001AE2 0009                   NOP
    00001AE4              L1212:                            
      Elements.c   624                else if (missile[w].temps >= phase1 && missile[w].temps < phase2) // clignotement du point d'e
                         +xclamation
    00001AE4 1FC5                   MOV.L       R12,@(20,R15)
    00001AE6 55C3                   MOV.L       @(12,R12),R5
    00001AE8 53F2                   MOV.L       @(8,R15),R3
    00001AEA 3533                   CMP/GE      R3,R5
    00001AEC 8B20                   BF          L1214




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001AEE 51F1                   MOV.L       @(4,R15),R1
    00001AF0 3513                   CMP/GE      R1,R5
    00001AF2 891D                   BT          L1214
      Elements.c   625                {
      Elements.c   626                    ML_bmp_8_or(warning1,119,missile[w].y);
    00001AF4 56C1                   MOV.L       @(4,R12),R6
    00001AF6 D246                   MOV.L       L1321+18,R2; _ML_bmp_8_or
    00001AF8 420B                   JSR         @R2
    00001AFA E577                   MOV         #119,R5
      Elements.c   627                    if (missile[w].temps%3) ML_rectangle(121,missile[w].y-1,124,missile[w].y+8,1,ML_XOR,ML_XOR
                         +);
    00001AFC 51C3                   MOV.L       @(12,R12),R1
    00001AFE D345                   MOV.L       L1321+22,R3; __modls
    00001B00 430B                   JSR         @R3
    00001B02 6093                   MOV         R9,R0
    00001B04 2008                   TST         R0,R0
    00001B06 8964                   BT          L1223
    00001B08 D343                   MOV.L       L1321+26,R3; _ML_rectangle
    00001B0A E102                   MOV         #2,R1
    00001B0C 2F16                   MOV.L       R1,@-R15
    00001B0E 6CA3                   MOV         R10,R12
    00001B10 2F16                   MOV.L       R1,@-R15
    00001B12 E67C                   MOV         #124,R6
    00001B14 2FE6                   MOV.L       R14,@-R15
    00001B16 4C08                   SHLL2       R12
    00001B18 4C08                   SHLL2       R12
    00001B1A 3C8C                   ADD         R8,R12
    00001B1C 1FC7                   MOV.L       R12,@(28,R15)
    00001B1E 5CC1                   MOV.L       @(4,R12),R12
    00001B20 67C3                   MOV         R12,R7
    00001B22 7708                   ADD         #8,R7
    00001B24 65C3                   MOV         R12,R5
    00001B26 75FF                   ADD         #-1,R5
    00001B28 430B                   JSR         @R3
    00001B2A E479                   MOV         #121,R4
    00001B2C A051                   BRA         L1223
    00001B2E 7F0C                   ADD         #12,R15
    00001B30              L1214:                            
      Elements.c   628                }
      Elements.c   629                else if (missile[w].temps >= phase2)
    00001B30 53F1                   MOV.L       @(4,R15),R3
    00001B32 52C3                   MOV.L       @(12,R12),R2
    00001B34 3233                   CMP/GE      R3,R2
    00001B36 8B4C                   BF          L1223
      Elements.c   630                {
      Elements.c   631                    ML_bmp_16_and_cl(missile[w].temps%6<3?missile1Alpha:missile2Alpha,missile[w].x,missile[w].
                         +y); // masque alpha du missile
    00001B38 D336                   MOV.L       L1321+22,R3; __modls
    00001B3A 6CA3                   MOV         R10,R12
    00001B3C 4C08                   SHLL2       R12
    00001B3E 4C08                   SHLL2       R12
    00001B40 3C8C                   ADD         R8,R12
    00001B42 56C1                   MOV.L       @(4,R12),R6
    00001B44 65C2                   MOV.L       @R12,R5
    00001B46 51C3                   MOV.L       @(12,R12),R1
    00001B48 430B                   JSR         @R3
    00001B4A 60B3                   MOV         R11,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B4C 3093                   CMP/GE      R9,R0
    00001B4E 8902                   BT          L1218
    00001B50 D432                   MOV.L       L1321+30,R4; __$missile1Alpha
    00001B52 A001                   BRA         L1219
    00001B54 0009                   NOP
    00001B56              L1218:                            
    00001B56 D432                   MOV.L       L1321+34,R4; __$missile2Alpha
    00001B58              L1219:                            
    00001B58 D232                   MOV.L       L1321+38,R2; _ML_bmp_16_and_cl
    00001B5A 420B                   JSR         @R2
    00001B5C 0009                   NOP
      Elements.c   632                    ML_bmp_16_or_cl(missile[w].temps%6<3?missile1:missile2,missile[w].x,missile[w].y); // affi
                         +chage et aimation du missile
    00001B5E 56C1                   MOV.L       @(4,R12),R6
    00001B60 65C2                   MOV.L       @R12,R5
    00001B62 51C3                   MOV.L       @(12,R12),R1
    00001B64 D32B                   MOV.L       L1321+22,R3; __modls
    00001B66 430B                   JSR         @R3
    00001B68 60B3                   MOV         R11,R0
    00001B6A 3093                   CMP/GE      R9,R0
    00001B6C 8902                   BT          L1220
    00001B6E D42E                   MOV.L       L1321+42,R4; __$missile1
    00001B70 A001                   BRA         L1221
    00001B72 0009                   NOP
    00001B74              L1220:                            
    00001B74 D42D                   MOV.L       L1321+46,R4; __$missile2
    00001B76              L1221:                            
    00001B76 D22E                   MOV.L       L1321+50,R2; _ML_bmp_16_or_cl
    00001B78 420B                   JSR         @R2
    00001B7A 0009                   NOP
      Elements.c   633                    if (lvl%8<4) ML_rectangle(missile[w].x+1,missile[w].y+2,missile[w].x+8,missile[w].y+6,1,ML
                         +_BLACK,ML_BLACK);
    00001B7C 52F6                   MOV.L       @(24,R15),R2
    00001B7E E304                   MOV         #4,R3
    00001B80 3233                   CMP/GE      R3,R2
    00001B82 8926                   BT          L1223
    00001B84 2FE6                   MOV.L       R14,@-R15
    00001B86 2FE6                   MOV.L       R14,@-R15
    00001B88 2FE6                   MOV.L       R14,@-R15
    00001B8A 57F3                   MOV.L       @(12,R15),R7
    00001B8C D222                   MOV.L       L1321+26,R2; _ML_rectangle
    00001B8E 5771                   MOV.L       @(4,R7),R7
    00001B90 1F7A                   MOV.L       R7,@(40,R15)
    00001B92 7706                   ADD         #6,R7
    00001B94 5CF3                   MOV.L       @(12,R15),R12
    00001B96 6CC2                   MOV.L       @R12,R12
    00001B98 55FA                   MOV.L       @(40,R15),R5
    00001B9A 64C3                   MOV         R12,R4
    00001B9C 66C3                   MOV         R12,R6
    00001B9E 7608                   ADD         #8,R6
    00001BA0 7502                   ADD         #2,R5
    00001BA2 420B                   JSR         @R2
    00001BA4 7401                   ADD         #1,R4
    00001BA6 A014                   BRA         L1223
    00001BA8 7F0C                   ADD         #12,R15
    00001BAA              L1211:                            
      Elements.c   634                }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   635            }
      Elements.c   636            else if (missile[w].exists > 1)
    00001BAA 52F3                   MOV.L       @(12,R15),R2
    00001BAC 5322                   MOV.L       @(8,R2),R3
    00001BAE 33E7                   CMP/GT      R14,R3
    00001BB0 8B0F                   BF          L1223
      Elements.c   637            {
      Elements.c   638                ML_filled_circle(missile[w].x+7,missile[w].y+4,missile[w].exists,ML_WHITE);
    00001BB2 E700                   MOV         #0,R7
    00001BB4 56D2                   MOV.L       @(8,R13),R6
    00001BB6 55D1                   MOV.L       @(4,R13),R5
    00001BB8 64D2                   MOV.L       @R13,R4
    00001BBA 7504                   ADD         #4,R5
    00001BBC D31D                   MOV.L       L1321+54,R3; _ML_filled_circle
    00001BBE 430B                   JSR         @R3
    00001BC0 7407                   ADD         #7,R4
      Elements.c   639                ML_circle(missile[w].x+7,missile[w].y+4,missile[w].exists,ML_BLACK);
    00001BC2 E701                   MOV         #1,R7
    00001BC4 56D2                   MOV.L       @(8,R13),R6
    00001BC6 55D1                   MOV.L       @(4,R13),R5
    00001BC8 64D2                   MOV.L       @R13,R4
    00001BCA 7504                   ADD         #4,R5
    00001BCC D21A                   MOV.L       L1321+58,R2; _ML_circle
    00001BCE 420B                   JSR         @R2
    00001BD0 7407                   ADD         #7,R4
    00001BD2              L1223:                            
    00001BD2 7A01                   ADD         #1,R10
    00001BD4 53F3                   MOV.L       @(12,R15),R3
    00001BD6 7D10                   ADD         #16,R13
    00001BD8 7310                   ADD         #16,R3
    00001BDA 3AB3                   CMP/GE      R11,R10
    00001BDC 1F33                   MOV.L       R3,@(12,R15)
    00001BDE 62F2                   MOV.L       @R15,R2
    00001BE0 7210                   ADD         #16,R2
    00001BE2 8D02                   BT/S        L1323
    00001BE4 2F22                   MOV.L       R2,@R15
    00001BE6 AF6B                   BRA         L1210
    00001BE8 0009                   NOP
    00001BEA              L1323:                            
      Elements.c   640            }
      Elements.c   641        }
      Elements.c   642    }
    00001BEA 7F20                   ADD         #32,R15
    00001BEC 4F26                   LDS.L       @R15+,PR
    00001BEE 68F6                   MOV.L       @R15+,R8
    00001BF0 69F6                   MOV.L       @R15+,R9
    00001BF2 6AF6                   MOV.L       @R15+,R10
    00001BF4 6BF6                   MOV.L       @R15+,R11
    00001BF6 6CF6                   MOV.L       @R15+,R12
    00001BF8 6DF6                   MOV.L       @R15+,R13
    00001BFA 000B                   RTS
    00001BFC 6EF6                   MOV.L       @R15+,R14
    00001BFE              L1321:                            
    00001BFE 0000                   .DATA.W     0
    00001C00 <00000000>             .DATA.L     _rand
    00001C04 <00000000>             .DATA.L     _sauvegarde
    00001C08 <00000000>             .DATA.L     _missile




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C0C <00000000>             .DATA.L     __$warning1
    00001C10 <00000000>             .DATA.L     _ML_bmp_8_or
    00001C14 <00000000>             .DATA.L     __modls
    00001C18 <00000000>             .DATA.L     _ML_rectangle
    00001C1C <00000000>             .DATA.L     __$missile1Alpha
    00001C20 <00000000>             .DATA.L     __$missile2Alpha
    00001C24 <00000000>             .DATA.L     _ML_bmp_16_and_cl
    00001C28 <00000000>             .DATA.L     __$missile1
    00001C2C <00000000>             .DATA.L     __$missile2
    00001C30 <00000000>             .DATA.L     _ML_bmp_16_or_cl
    00001C34 <00000000>             .DATA.L     _ML_filled_circle
    00001C38 <00000000>             .DATA.L     _ML_circle
      Elements.c   643    int collisionMissiles(int yBarry, int xBarry, int vehicule)
    00001C3C              _collisionMissiles:              ; function: collisionMissiles
                                                           ; frame size=20
    00001C3C 2FE6                   MOV.L       R14,@-R15
    00001C3E 2FD6                   MOV.L       R13,@-R15
    00001C40 2FC6                   MOV.L       R12,@-R15
    00001C42 2FB6                   MOV.L       R11,@-R15
    00001C44 D783                   MOV.L       L1324,R7   ; _missile
    00001C46 7FFC                   ADD         #-4,R15
    00001C48 DB83                   MOV.L       L1324+4,R11; __$vehiculesX
    00001C4A 6C73                   MOV         R7,R12
    00001C4C DD83                   MOV.L       L1324+8,R13; __$vehiculesY
    00001C4E 7C60                   ADD         #96,R12
      Elements.c   644    {
      Elements.c   645        int w;
      Elements.c   646    
      Elements.c   647        for (w = 0; w < 6; w++)
    00001C50 DE83                   MOV.L       L1324+12,R14; _sauvegarde
    00001C52 37C2                   CMP/HS      R12,R7
    00001C54 8D3A                   BT/S        L1225
    00001C56 2F72                   MOV.L       R7,@R15
    00001C58              L1226:                            
      Elements.c   648        {
      Elements.c   649            if (missile[w].exists == 1 && missile[w].x <= xBarry + vehiculesX[1][vehiculeHitbox] && missile[w]
                         +.x >= xBarry + vehiculesX[0][vehiculeHitbox] - 8 && missile[w].y <= yBarry + vehiculesY[1][vehiculeHitbox]
                         + && missile[w].y >= yBarry + vehiculesY[0][vehiculeHitbox] - 7) // si la piece touche barry
    00001C58 5072                   MOV.L       @(8,R7),R0
    00001C5A 8801                   CMP/EQ      #1,R0
    00001C5C 8B33                   BF          L1227
    00001C5E D281                   MOV.L       L1324+16,R2; _vehiculeHitbox
    00001C60 6322                   MOV.L       @R2,R3
    00001C62 33BC                   ADD         R11,R3
    00001C64 843C                   MOV.B       @(12,R3),R0
    00001C66 600C                   EXTU.B      R0,R0
    00001C68 6372                   MOV.L       @R7,R3
    00001C6A 305C                   ADD         R5,R0
    00001C6C 3307                   CMP/GT      R0,R3
    00001C6E 892A                   BT          L1227
    00001C70 6022                   MOV.L       @R2,R0
    00001C72 03BC                   MOV.B       @(R0,R11),R3
    00001C74 6172                   MOV.L       @R7,R1
    00001C76 633C                   EXTU.B      R3,R3
    00001C78 335C                   ADD         R5,R3
    00001C7A 73F8                   ADD         #-8,R3
    00001C7C 3133                   CMP/GE      R3,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C7E 8B22                   BF          L1227
    00001C80 6022                   MOV.L       @R2,R0
    00001C82 30DC                   ADD         R13,R0
    00001C84 840C                   MOV.B       @(12,R0),R0
    00001C86 600C                   EXTU.B      R0,R0
    00001C88 5371                   MOV.L       @(4,R7),R3
    00001C8A 304C                   ADD         R4,R0
    00001C8C 3307                   CMP/GT      R0,R3
    00001C8E 891A                   BT          L1227
    00001C90 6022                   MOV.L       @R2,R0
    00001C92 03DC                   MOV.B       @(R0,R13),R3
    00001C94 5171                   MOV.L       @(4,R7),R1
    00001C96 633C                   EXTU.B      R3,R3
    00001C98 334C                   ADD         R4,R3
    00001C9A 73F9                   ADD         #-7,R3
    00001C9C 3133                   CMP/GE      R3,R1
    00001C9E 8B12                   BF          L1227
      Elements.c   650            {
      Elements.c   651                if (vehicule == 0)
    00001CA0 2668                   TST         R6,R6
    00001CA2 8B0E                   BF          L1228
      Elements.c   652                {
      Elements.c   653                    sauvegarde->statMort[2] += 1;
    00001CA4 63E2                   MOV.L       @R14,R3
    00001CA6 E058                   MOV         #88,R0
    00001CA8 023D                   MOV.W       @(R0,R3),R2
      Elements.c   654                    if (sauvegarde->succes[5] != -1) sauvegarde->succes[5] += 1;
    00001CAA E165                   MOV         #101,R1
    00001CAC 7201                   ADD         #1,R2
    00001CAE 0325                   MOV.W       R2,@(R0,R3)
    00001CB0 60E2                   MOV.L       @R14,R0
    00001CB2 001C                   MOV.B       @(R0,R1),R0
    00001CB4 88FF                   CMP/EQ      #-1,R0
    00001CB6 8904                   BT          L1228
    00001CB8 62E2                   MOV.L       @R14,R2
    00001CBA E065                   MOV         #101,R0
    00001CBC 032C                   MOV.B       @(R0,R2),R3
    00001CBE 7301                   ADD         #1,R3
    00001CC0 0234                   MOV.B       R3,@(R0,R2)
    00001CC2              L1228:                            
      Elements.c   655                }
      Elements.c   656                return 1;
    00001CC2 A004                   BRA         L1230
    00001CC4 E001                   MOV         #1,R0
    00001CC6              L1227:                            
    00001CC6 7710                   ADD         #16,R7
    00001CC8 37C2                   CMP/HS      R12,R7
    00001CCA 8BC5                   BF          L1226
    00001CCC              L1225:                            
      Elements.c   657            }
      Elements.c   658        }
      Elements.c   659    
      Elements.c   660        return 0;
    00001CCC E000                   MOV         #0,R0
      Elements.c   661    }
    00001CCE              L1230:                            
    00001CCE 7F04                   ADD         #4,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001CD0 6BF6                   MOV.L       @R15+,R11
    00001CD2 6CF6                   MOV.L       @R15+,R12
    00001CD4 6DF6                   MOV.L       @R15+,R13
    00001CD6 000B                   RTS
    00001CD8 6EF6                   MOV.L       @R15+,R14
      Elements.c   662    
      Elements.c   663    void initBox()
    00001CDA              _initBox:                        ; function: initBox
                                                           ; frame size=0
      Elements.c   664    {
      Elements.c   665        boxPos = -13;
    00001CDA D363                   MOV.L       L1324+20,R3; H'C1500000
    00001CDC D263                   MOV.L       L1324+24,R2; __$boxPos
      Elements.c   666    }
    00001CDE 000B                   RTS
    00001CE0 2232                   MOV.L       R3,@R2
      Elements.c   667    void genererBox()
    00001CE2              _genererBox:                     ; function: genererBox
                                                           ; frame size=0
      Elements.c   668    {
      Elements.c   669        boxPos = 140;
    00001CE2 D163                   MOV.L       L1324+28,R1; H'430C0000
    00001CE4 D061                   MOV.L       L1324+24,R0; __$boxPos
      Elements.c   670    }
    00001CE6 000B                   RTS
    00001CE8 2012                   MOV.L       R1,@R0
      Elements.c   671    int deplacerBox(float vitesseDecalage, int *isBox)
    00001CEA              _deplacerBox:                    ; function: deplacerBox
                                                           ; frame size=4
                                                           ; used runtime library name:
                                                           ; __subs, __les
    00001CEA 4F22                   STS.L       PR,@-R15
      Elements.c   672    {
      Elements.c   673        if (boxPos <= -13)
    00001CEC D65F                   MOV.L       L1324+24,R6; __$boxPos
    00001CEE D05E                   MOV.L       L1324+20,R0; H'C1500000
    00001CF0 D360                   MOV.L       L1324+32,R3; __les
    00001CF2 430B                   JSR         @R3
    00001CF4 6162                   MOV.L       @R6,R1
    00001CF6 8800                   CMP/EQ      #0,R0
    00001CF8 8904                   BT          L1231
      Elements.c   674        {
      Elements.c   675            *isBox = 0;
    00001CFA E400                   MOV         #0,R4
    00001CFC 2542                   MOV.L       R4,@R5
    00001CFE 4F26                   LDS.L       @R15+,PR
    00001D00 000B                   RTS
    00001D02 6043                   MOV         R4,R0
    00001D04              L1231:                            
      Elements.c   676             return 0;
      Elements.c   677        }
      Elements.c   678        else
      Elements.c   679        {
      Elements.c   680            boxPos -= vitesseDecalage;
    00001D04 D35C                   MOV.L       L1324+36,R3; __subs
    00001D06 6043                   MOV         R4,R0
    00001D08 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D0A 6162                   MOV.L       @R6,R1
    00001D0C 2602                   MOV.L       R0,@R6
      Elements.c   681            return 1;
    00001D0E E001                   MOV         #1,R0
      Elements.c   682        }
      Elements.c   683    }
    00001D10              L1232:                            
    00001D10 4F26                   LDS.L       @R15+,PR
    00001D12 000B                   RTS
    00001D14 0009                   NOP
      Elements.c   684    void afficherBox()
    00001D16              _afficherBox:                    ; function: afficherBox
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __adds, __stoi
      Elements.c   685    {
      Elements.c   686        ML_rectangle(boxPos+1,7,boxPos+12,18,1,ML_WHITE,ML_WHITE);
    00001D16 E300                   MOV         #0,R3
    00001D18 D058                   MOV.L       L1324+40,R0; H'41400000
    00001D1A E201                   MOV         #1,R2
    00001D1C 2FE6                   MOV.L       R14,@-R15
    00001D1E E712                   MOV         #18,R7
    00001D20 4F22                   STS.L       PR,@-R15
    00001D22 DE52                   MOV.L       L1324+24,R14; __$boxPos
    00001D24 2F36                   MOV.L       R3,@-R15
    00001D26 2F36                   MOV.L       R3,@-R15
    00001D28 2F26                   MOV.L       R2,@-R15
    00001D2A D255                   MOV.L       L1324+44,R2; __adds
    00001D2C 420B                   JSR         @R2
    00001D2E 61E2                   MOV.L       @R14,R1
    00001D30 D254                   MOV.L       L1324+48,R2; __stoi
    00001D32 420B                   JSR         @R2
    00001D34 0009                   NOP
    00001D36 6603                   MOV         R0,R6
    00001D38 D251                   MOV.L       L1324+44,R2; __adds
    00001D3A E507                   MOV         #7,R5
    00001D3C D052                   MOV.L       L1324+52,R0; H'3F800000
    00001D3E 420B                   JSR         @R2
    00001D40 61E2                   MOV.L       @R14,R1
    00001D42 D250                   MOV.L       L1324+48,R2; __stoi
    00001D44 420B                   JSR         @R2
    00001D46 0009                   NOP
    00001D48 D150                   MOV.L       L1324+56,R1; _ML_rectangle
    00001D4A 410B                   JSR         @R1
    00001D4C 6403                   MOV         R0,R4
      Elements.c   687        ML_bmp_or_cl(box,boxPos,6,14,14);
    00001D4E E30E                   MOV         #14,R3
    00001D50 D24C                   MOV.L       L1324+48,R2; __stoi
    00001D52 E606                   MOV         #6,R6
    00001D54 2F36                   MOV.L       R3,@-R15
    00001D56 6733                   MOV         R3,R7
    00001D58 420B                   JSR         @R2
    00001D5A 60E2                   MOV.L       @R14,R0
    00001D5C D44C                   MOV.L       L1324+60,R4; __$box
    00001D5E D14D                   MOV.L       L1324+64,R1; _ML_bmp_or_cl
    00001D60 410B                   JSR         @R1
    00001D62 6503                   MOV         R0,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Elements.c   688    }
    00001D64 7F10                   ADD         #16,R15
    00001D66 4F26                   LDS.L       @R15+,PR
    00001D68 000B                   RTS
    00001D6A 6EF6                   MOV.L       @R15+,R14
      Elements.c   689    int collisionBox(int yBarry)
    00001D6C              _collisionBox:                   ; function: collisionBox
                                                           ; frame size=4
                                                           ; used runtime library name:
                                                           ; __itos, __ges, __les
    00001D6C 4F22                   STS.L       PR,@-R15
    00001D6E D63D                   MOV.L       L1324+16,R6; _vehiculeHitbox
    00001D70 D33E                   MOV.L       L1324+24,R3; __$boxPos
    00001D72 6532                   MOV.L       @R3,R5
    00001D74 6262                   MOV.L       @R6,R2
    00001D76 D738                   MOV.L       L1324+4,R7 ; __$vehiculesX
    00001D78 372C                   ADD         R2,R7
    00001D7A 847C                   MOV.B       @(12,R7),R0
    00001D7C D246                   MOV.L       L1324+68,R2; __itos
    00001D7E 600C                   EXTU.B      R0,R0
    00001D80 420B                   JSR         @R2
    00001D82 7008                   ADD         #8,R0
    00001D84 D23B                   MOV.L       L1324+32,R2; __les
    00001D86 420B                   JSR         @R2
    00001D88 6153                   MOV         R5,R1
    00001D8A 8800                   CMP/EQ      #0,R0
    00001D8C 8921                   BT          L1234
    00001D8E 6070                   MOV.B       @R7,R0
    00001D90 D241                   MOV.L       L1324+68,R2; __itos
    00001D92 600C                   EXTU.B      R0,R0
    00001D94 420B                   JSR         @R2
    00001D96 70FA                   ADD         #-6,R0
    00001D98 D240                   MOV.L       L1324+72,R2; __ges
    00001D9A 420B                   JSR         @R2
    00001D9C 6153                   MOV         R5,R1
    00001D9E 8800                   CMP/EQ      #0,R0
    00001DA0 8917                   BT          L1234
    00001DA2 6262                   MOV.L       @R6,R2
    00001DA4 D12D                   MOV.L       L1324+8,R1 ; __$vehiculesY
    00001DA6 312C                   ADD         R2,R1
    00001DA8 841C                   MOV.B       @(12,R1),R0
    00001DAA E206                   MOV         #6,R2
    00001DAC 600C                   EXTU.B      R0,R0
    00001DAE 304C                   ADD         R4,R0
    00001DB0 3023                   CMP/GE      R2,R0
    00001DB2 8B0E                   BF          L1234
    00001DB4 6162                   MOV.L       @R6,R1
    00001DB6 D029                   MOV.L       L1324+8,R0 ; __$vehiculesY
    00001DB8 301C                   ADD         R1,R0
    00001DBA 6300                   MOV.B       @R0,R3
    00001DBC 633C                   EXTU.B      R3,R3
    00001DBE 334C                   ADD         R4,R3
    00001DC0 73F2                   ADD         #-14,R3
    00001DC2 3327                   CMP/GT      R2,R3
    00001DC4 8905                   BT          L1234
      Elements.c   690    {
      Elements.c   691        if (boxPos <= 8 + vehiculesX[1][vehiculeHitbox] && boxPos >= 8 + vehiculesX[0][vehiculeHitbox] - 14 &&




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         + 6 <= yBarry + vehiculesY[1][vehiculeHitbox] && 6 >= yBarry + vehiculesY[0][vehiculeHitbox] - 14)
      Elements.c   692        {
      Elements.c   693            boxPos = -13;
    00001DC6 D328                   MOV.L       L1324+20,R3; H'C1500000
    00001DC8 D228                   MOV.L       L1324+24,R2; __$boxPos
    00001DCA 2232                   MOV.L       R3,@R2
      Elements.c   694            return 1;
    00001DCC 4F26                   LDS.L       @R15+,PR
    00001DCE 000B                   RTS
    00001DD0 E001                   MOV         #1,R0
    00001DD2              L1234:                            
      Elements.c   695        }
      Elements.c   696        else
      Elements.c   697            return 0;
    00001DD2 E000                   MOV         #0,R0
      Elements.c   698    }
    00001DD4              L1235:                            
    00001DD4 4F26                   LDS.L       @R15+,PR
    00001DD6 000B                   RTS
    00001DD8 0009                   NOP
      Elements.c   699    
      Elements.c   700    void initJeton()
    00001DDA              _initJeton:                      ; function: initJeton
                                                           ; frame size=0
      Elements.c   701    {
      Elements.c   702        jeton.x = -20;
    00001DDA D331                   MOV.L       L1324+76,R3; H'C1A00000
    00001DDC D231                   MOV.L       L1324+80,R2; _jeton
      Elements.c   703    }
    00001DDE 000B                   RTS
    00001DE0 2232                   MOV.L       R3,@R2
      Elements.c   704    void genererJeton(int type)
    00001DE2              _genererJeton:                   ; function: genererJeton
                                                           ; frame size=12
                                                           ; used runtime library name:
                                                           ; __modls, __itos, __nes
    00001DE2 2FE6                   MOV.L       R14,@-R15
    00001DE4 4F22                   STS.L       PR,@-R15
    00001DE6 7FFC                   ADD         #-4,R15
      Elements.c   705    {
      Elements.c   706        if (jeton.x == -20)
    00001DE8 DE2E                   MOV.L       L1324+80,R14; _jeton
    00001DEA 2F42                   MOV.L       R4,@R15
    00001DEC D02C                   MOV.L       L1324+76,R0; H'C1A00000
    00001DEE D32E                   MOV.L       L1324+84,R3; __nes
    00001DF0 430B                   JSR         @R3
    00001DF2 61E2                   MOV.L       @R14,R1
    00001DF4 8800                   CMP/EQ      #0,R0
    00001DF6 8B10                   BF          L1237
      Elements.c   707        {
      Elements.c   708            jeton.yMid = rand()%(26)+10;
    00001DF8 D22C                   MOV.L       L1324+88,R2; _rand
    00001DFA 420B                   JSR         @R2
    00001DFC 0009                   NOP
    00001DFE 6103                   MOV         R0,R1
    00001E00 D32B                   MOV.L       L1324+92,R3; __modls
    00001E02 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E04 E01A                   MOV         #26,R0
    00001E06 D224                   MOV.L       L1324+68,R2; __itos
    00001E08 420B                   JSR         @R2
    00001E0A 700A                   ADD         #10,R0
    00001E0C 1E02                   MOV.L       R0,@(8,R14)
      Elements.c   709            jeton.x = 128;
    00001E0E D329                   MOV.L       L1324+96,R3; H'43000000
      Elements.c   710            jeton.first = type;
    00001E10 D221                   MOV.L       L1324+68,R2; __itos
    00001E12 2E32                   MOV.L       R3,@R14
    00001E14 420B                   JSR         @R2
    00001E16 60F2                   MOV.L       @R15,R0
    00001E18 1E03                   MOV.L       R0,@(12,R14)
    00001E1A              L1237:                            
      Elements.c   711        }
      Elements.c   712    }
    00001E1A 7F04                   ADD         #4,R15
    00001E1C 4F26                   LDS.L       @R15+,PR
    00001E1E 000B                   RTS
    00001E20 6EF6                   MOV.L       @R15+,R14
      Elements.c   713    int deplacerJeton(int yBarry, int *isJeton)
    00001E22              _deplacerJeton:                  ; function: deplacerJeton
                                                           ; frame size=60
                                                           ; used runtime library name:
                                                           ; __adds, __addd, __subd, __muld, __divs, __stod, __dtos, __itod, __nes, 
                        +                                  __gts, __lts
    00001E22 2FE6                   MOV.L       R14,@-R15
    00001E24 2FD6                   MOV.L       R13,@-R15
    00001E26 2FC6                   MOV.L       R12,@-R15
    00001E28 4F22                   STS.L       PR,@-R15
    00001E2A DE1E                   MOV.L       L1324+80,R14; _jeton
    00001E2C D01C                   MOV.L       L1324+76,R0; H'C1A00000
    00001E2E 66E2                   MOV.L       @R14,R6
    00001E30 D321                   MOV.L       L1324+100,R3; __gts
    00001E32 430B                   JSR         @R3
    00001E34 6163                   MOV         R6,R1
    00001E36 8800                   CMP/EQ      #0,R0
    00001E38 8B01                   BF          L1325
    00001E3A A0F2                   BRA         L1238
    00001E3C 0009                   NOP
    00001E3E              L1325:                            
      Elements.c   714    {
      Elements.c   715        static int yPos = 32;
      Elements.c   716    
      Elements.c   717        if (jeton.x > -20) // si le jeton est a l'ecran
      Elements.c   718        {
      Elements.c   719            jeton.x -= (jeton.first?0.7:1); // on deplace le jeton
    00001E3E 52E3                   MOV.L       @(12,R14),R2
    00001E40 4200                   SHLL        R2
    00001E42 2228                   TST         R2,R2
    00001E44 8D3E                   BT/S        L1239
    00001E46 7FF8                   ADD         #-8,R15
    00001E48 D21C                   MOV.L       L1324+104,R2; H'66666666
    00001E4A 2F26                   MOV.L       R2,@-R15
    00001E4C D21C                   MOV.L       L1324+108,R2; H'3FE66666
    00001E4E 2F26                   MOV.L       R2,@-R15
    00001E50 A03C                   BRA         L1240




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E52 0009                   NOP
    00001E54              L1324:                            
    00001E54 <00000000>             .DATA.L     _missile
    00001E58 <00000000>             .DATA.L     __$vehiculesX
    00001E5C <00000000>             .DATA.L     __$vehiculesY
    00001E60 <00000000>             .DATA.L     _sauvegarde
    00001E64 <00000000>             .DATA.L     _vehiculeHitbox
    00001E68 C1500000               .DATA.L     H'C1500000
    00001E6C <00000000>             .DATA.L     __$boxPos
    00001E70 430C0000               .DATA.L     H'430C0000
    00001E74 <00000000>             .DATA.L     __les
    00001E78 <00000000>             .DATA.L     __subs
    00001E7C 41400000               .DATA.L     H'41400000
    00001E80 <00000000>             .DATA.L     __adds
    00001E84 <00000000>             .DATA.L     __stoi
    00001E88 3F800000               .DATA.L     H'3F800000
    00001E8C <00000000>             .DATA.L     _ML_rectangle
    00001E90 <00000000>             .DATA.L     __$box
    00001E94 <00000000>             .DATA.L     _ML_bmp_or_cl
    00001E98 <00000000>             .DATA.L     __itos
    00001E9C <00000000>             .DATA.L     __ges
    00001EA0 C1A00000               .DATA.L     H'C1A00000
    00001EA4 <00000000>             .DATA.L     _jeton
    00001EA8 <00000000>             .DATA.L     __nes
    00001EAC <00000000>             .DATA.L     _rand
    00001EB0 <00000000>             .DATA.L     __modls
    00001EB4 43000000               .DATA.L     H'43000000
    00001EB8 <00000000>             .DATA.L     __gts
    00001EBC 66666666               .DATA.L     H'66666666
    00001EC0 3FE66666               .DATA.L     H'3FE66666
    00001EC4              L1239:                            
    00001EC4 E300                   MOV         #0,R3
    00001EC6 2F36                   MOV.L       R3,@-R15
    00001EC8 D37E                   MOV.L       L1326+2,R3 ; H'3FF00000
    00001ECA 2F36                   MOV.L       R3,@-R15
    00001ECC              L1240:                            
    00001ECC D17E                   MOV.L       L1326+6,R1 ; __stod
    00001ECE 7FF8                   ADD         #-8,R15
    00001ED0 60E2                   MOV.L       @R14,R0
    00001ED2 410B                   JSR         @R1
    00001ED4 2FF6                   MOV.L       R15,@-R15
    00001ED6 61F3                   MOV         R15,R1
    00001ED8 7110                   ADD         #16,R1
    00001EDA 2F16                   MOV.L       R1,@-R15
    00001EDC D17B                   MOV.L       L1326+10,R1; __subd
    00001EDE 410B                   JSR         @R1
    00001EE0 0009                   NOP
    00001EE2 D17B                   MOV.L       L1326+14,R1; __dtos
    00001EE4 410B                   JSR         @R1
    00001EE6 0009                   NOP
    00001EE8 2E02                   MOV.L       R0,@R14
    00001EEA DC7A                   MOV.L       L1326+18,R12; _sin
    00001EEC DD7A                   MOV.L       L1326+22,R13; __$yPos$785
    00001EEE 65D2                   MOV.L       @R13,R5
    00001EF0 D07A                   MOV.L       L1326+26,R0; H'3F800000
    00001EF2 D37B                   MOV.L       L1326+30,R3; __nes
    00001EF4 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001EF6 51E3                   MOV.L       @(12,R14),R1
    00001EF8 8800                   CMP/EQ      #0,R0
    00001EFA 8B30                   BF          L1241
      Elements.c   720    
      Elements.c   721            if (jeton.first == 1) // si le gadget jeton offert est equipe
      Elements.c   722            {
      Elements.c   723                if (yPos < yBarry) yPos++; // le gadget suit le joueur
    00001EFC 3543                   CMP/GE      R4,R5
    00001EFE 8903                   BT          L1242
    00001F00 63D2                   MOV.L       @R13,R3
    00001F02 7301                   ADD         #1,R3
    00001F04 A005                   BRA         L1243
    00001F06 2D32                   MOV.L       R3,@R13
    00001F08              L1242:                            
      Elements.c   724                else if (yPos > yBarry) yPos--;
    00001F08 3547                   CMP/GT      R4,R5
    00001F0A 8B02                   BF          L1243
    00001F0C 62D2                   MOV.L       @R13,R2
    00001F0E 72FF                   ADD         #-1,R2
    00001F10 2D22                   MOV.L       R2,@R13
    00001F12              L1243:                            
      Elements.c   725                jeton.y = yPos+2*sin(((float)(jeton.x)/4)); // oscillation du jeton
    00001F12 60D2                   MOV.L       @R13,R0
    00001F14 D373                   MOV.L       L1326+34,R3; __itod
    00001F16 7FF0                   ADD         #-16,R15
    00001F18 430B                   JSR         @R3
    00001F1A 2FF6                   MOV.L       R15,@-R15
    00001F1C D072                   MOV.L       L1326+38,R0; H'40800000
    00001F1E 7FF0                   ADD         #-16,R15
    00001F20 D272                   MOV.L       L1326+42,R2; __divs
    00001F22 420B                   JSR         @R2
    00001F24 61E2                   MOV.L       @R14,R1
    00001F26 7FF8                   ADD         #-8,R15
    00001F28 D367                   MOV.L       L1326+6,R3 ; __stod
    00001F2A 430B                   JSR         @R3
    00001F2C 2FF6                   MOV.L       R15,@-R15
    00001F2E E208                   MOV         #8,R2
    00001F30 32FC                   ADD         R15,R2
    00001F32 4C0B                   JSR         @R12
    00001F34 2F26                   MOV.L       R2,@-R15
    00001F36 7F0C                   ADD         #12,R15
    00001F38 D26E                   MOV.L       L1326+50,R2; __muld
    00001F3A E100                   MOV         #0,R1
    00001F3C 2F16                   MOV.L       R1,@-R15
    00001F3E D16C                   MOV.L       L1326+46,R1; H'40000000
    00001F40 2F16                   MOV.L       R1,@-R15
    00001F42 63F3                   MOV         R15,R3
    00001F44 7310                   ADD         #16,R3
    00001F46 420B                   JSR         @R2
    00001F48 2F36                   MOV.L       R3,@-R15
    00001F4A 61F3                   MOV         R15,R1
    00001F4C D06A                   MOV.L       L1326+54,R0; __addd
    00001F4E 7110                   ADD         #16,R1
    00001F50 400B                   JSR         @R0
    00001F52 2F16                   MOV.L       R1,@-R15
    00001F54 D35E                   MOV.L       L1326+14,R3; __dtos
    00001F56 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001F58 0009                   NOP
    00001F5A A071                   BRA         L1252
    00001F5C 1E01                   MOV.L       R0,@(4,R14)
    00001F5E              L1241:                            
      Elements.c   726            }
      Elements.c   727            else if (sauvegarde->gadgetEquipe[0] == 8 || sauvegarde->gadgetEquipe[1] == 8) // si le gadget jet
                         +on magnetique est equipe
    00001F5E D367                   MOV.L       L1326+58,R3; _sauvegarde
    00001F60 6632                   MOV.L       @R3,R6
    00001F62 760C                   ADD         #12,R6
    00001F64 6060                   MOV.B       @R6,R0
    00001F66 600C                   EXTU.B      R0,R0
    00001F68 8808                   CMP/EQ      #8,R0
    00001F6A 8903                   BT          L1247
    00001F6C 8461                   MOV.B       @(1,R6),R0
    00001F6E 600C                   EXTU.B      R0,R0
    00001F70 8808                   CMP/EQ      #8,R0
    00001F72 8B30                   BF          L1246
    00001F74              L1247:                            
      Elements.c   728            {
      Elements.c   729                if (yPos < yBarry) yPos++; // le jeton suit le joueur
    00001F74 3543                   CMP/GE      R4,R5
    00001F76 8903                   BT          L1248
    00001F78 62D2                   MOV.L       @R13,R2
    00001F7A 7201                   ADD         #1,R2
    00001F7C A005                   BRA         L1249
    00001F7E 2D22                   MOV.L       R2,@R13
    00001F80              L1248:                            
      Elements.c   730                else if (yPos > yBarry) yPos--;
    00001F80 3547                   CMP/GT      R4,R5
    00001F82 8B02                   BF          L1249
    00001F84 63D2                   MOV.L       @R13,R3
    00001F86 73FF                   ADD         #-1,R3
    00001F88 2D32                   MOV.L       R3,@R13
    00001F8A              L1249:                            
      Elements.c   731                jeton.y = yPos+5*sin(((float)(jeton.x)/4)); // oscillation du jeton
    00001F8A 60D2                   MOV.L       @R13,R0
    00001F8C D255                   MOV.L       L1326+34,R2; __itod
    00001F8E 7FF0                   ADD         #-16,R15
    00001F90 420B                   JSR         @R2
    00001F92 2FF6                   MOV.L       R15,@-R15
    00001F94 D054                   MOV.L       L1326+38,R0; H'40800000
    00001F96 7FF0                   ADD         #-16,R15
    00001F98 D354                   MOV.L       L1326+42,R3; __divs
    00001F9A 430B                   JSR         @R3
    00001F9C 61E2                   MOV.L       @R14,R1
    00001F9E 7FF8                   ADD         #-8,R15
    00001FA0 D249                   MOV.L       L1326+6,R2 ; __stod
    00001FA2 420B                   JSR         @R2
    00001FA4 2FF6                   MOV.L       R15,@-R15
    00001FA6 E308                   MOV         #8,R3
    00001FA8 33FC                   ADD         R15,R3
    00001FAA 4C0B                   JSR         @R12
    00001FAC 2F36                   MOV.L       R3,@-R15
    00001FAE 7F0C                   ADD         #12,R15
    00001FB0 D250                   MOV.L       L1326+50,R2; __muld
    00001FB2 E100                   MOV         #0,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001FB4 2F16                   MOV.L       R1,@-R15
    00001FB6 D152                   MOV.L       L1326+62,R1; H'40140000
    00001FB8 2F16                   MOV.L       R1,@-R15
    00001FBA 63F3                   MOV         R15,R3
    00001FBC 7310                   ADD         #16,R3
    00001FBE 420B                   JSR         @R2
    00001FC0 2F36                   MOV.L       R3,@-R15
    00001FC2 61F3                   MOV         R15,R1
    00001FC4 D04C                   MOV.L       L1326+54,R0; __addd
    00001FC6 7110                   ADD         #16,R1
    00001FC8 400B                   JSR         @R0
    00001FCA 2F16                   MOV.L       R1,@-R15
    00001FCC D340                   MOV.L       L1326+14,R3; __dtos
    00001FCE 430B                   JSR         @R3
    00001FD0 0009                   NOP
    00001FD2 A024                   BRA         L1280
    00001FD4 0009                   NOP
    00001FD6              L1246:                            
      Elements.c   732            }
      Elements.c   733            else jeton.y = 10*sin(((float)(jeton.x)/4))+jeton.yMid; // sinon on fait juste osciller le jeton
    00001FD6 7FE8                   ADD         #-24,R15
    00001FD8 D043                   MOV.L       L1326+38,R0; H'40800000
    00001FDA D344                   MOV.L       L1326+42,R3; __divs
    00001FDC 430B                   JSR         @R3
    00001FDE 61E2                   MOV.L       @R14,R1
    00001FE0 D239                   MOV.L       L1326+6,R2 ; __stod
    00001FE2 7FF8                   ADD         #-8,R15
    00001FE4 420B                   JSR         @R2
    00001FE6 2FF6                   MOV.L       R15,@-R15
    00001FE8 E308                   MOV         #8,R3
    00001FEA 33FC                   ADD         R15,R3
    00001FEC 4C0B                   JSR         @R12
    00001FEE 2F36                   MOV.L       R3,@-R15
    00001FF0 D240                   MOV.L       L1326+50,R2; __muld
    00001FF2 7F0C                   ADD         #12,R15
    00001FF4 E100                   MOV         #0,R1
    00001FF6 2F16                   MOV.L       R1,@-R15
    00001FF8 D142                   MOV.L       L1326+66,R1; H'40240000
    00001FFA 2F16                   MOV.L       R1,@-R15
    00001FFC 63F3                   MOV         R15,R3
    00001FFE 7310                   ADD         #16,R3
    00002000 420B                   JSR         @R2
    00002002 2F36                   MOV.L       R3,@-R15
    00002004 50E2                   MOV.L       @(8,R14),R0
    00002006 7FF8                   ADD         #-8,R15
    00002008 D12F                   MOV.L       L1326+6,R1 ; __stod
    0000200A 410B                   JSR         @R1
    0000200C 2FF6                   MOV.L       R15,@-R15
    0000200E 63F3                   MOV         R15,R3
    00002010 D239                   MOV.L       L1326+54,R2; __addd
    00002012 7310                   ADD         #16,R3
    00002014 420B                   JSR         @R2
    00002016 2F36                   MOV.L       R3,@-R15
    00002018 D12D                   MOV.L       L1326+14,R1; __dtos
    0000201A 410B                   JSR         @R1
    0000201C 0009                   NOP
    0000201E              L1280:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000201E A00F                   BRA         L1252
    00002020 1E01                   MOV.L       R0,@(4,R14)
    00002022              L1238:                            
      Elements.c   734        }
      Elements.c   735        else if (jeton.x < -20)
    00002022 D039                   MOV.L       L1326+70,R0; H'C1A00000
    00002024 D239                   MOV.L       L1326+74,R2; __lts
    00002026 420B                   JSR         @R2
    00002028 6163                   MOV         R6,R1
    0000202A 8800                   CMP/EQ      #0,R0
    0000202C 8905                   BT          L1253
      Elements.c   736        {
      Elements.c   737            jeton.x++;
    0000202E D12B                   MOV.L       L1326+26,R1; H'3F800000
    00002030 D337                   MOV.L       L1326+78,R3; __adds
    00002032 430B                   JSR         @R3
    00002034 60E2                   MOV.L       @R14,R0
    00002036 A003                   BRA         L1252
    00002038 2E02                   MOV.L       R0,@R14
    0000203A              L1253:                            
      Elements.c   738        }
      Elements.c   739        else return 0, *isJeton = 0;
    0000203A E000                   MOV         #0,R0
    0000203C A001                   BRA         L1255
    0000203E 2502                   MOV.L       R0,@R5
    00002040              L1252:                            
      Elements.c   740    
      Elements.c   741        return 1;
    00002040 E001                   MOV         #1,R0
      Elements.c   742    }
    00002042              L1255:                            
    00002042 4F26                   LDS.L       @R15+,PR
    00002044 6CF6                   MOV.L       @R15+,R12
    00002046 6DF6                   MOV.L       @R15+,R13
    00002048 000B                   RTS
    0000204A 6EF6                   MOV.L       @R15+,R14
      Elements.c   743    void afficherJeton(int nbJetons)
    0000204C              _afficherJeton:                  ; function: afficherJeton
                                                           ; frame size=20
                                                           ; used runtime library name:
                                                           ; __stoi, __lts
    0000204C 2FE6                   MOV.L       R14,@-R15
    0000204E 4F22                   STS.L       PR,@-R15
      Elements.c   744    {
      Elements.c   745        char jetonText[3];
      Elements.c   746    
      Elements.c   747        sprintf(jetonText,"+%d",nbJetons); // on convertit le nombre de jetons en texte
    00002050 D330                   MOV.L       L1326+82,R3; L793
    00002052 7FFC                   ADD         #-4,R15
    00002054 D230                   MOV.L       L1326+86,R2; _sprintf
    00002056 2F46                   MOV.L       R4,@-R15
    00002058 2F36                   MOV.L       R3,@-R15
    0000205A 64F3                   MOV         R15,R4
    0000205C 420B                   JSR         @R2
    0000205E 7408                   ADD         #8,R4
      Elements.c   748    
      Elements.c   749        ML_bmp_16_and_cl(jetonSPAlpha,jeton.x,jeton.y); // masque alpha du jeton




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002060 DE2E                   MOV.L       L1326+90,R14; _jeton
    00002062 7F08                   ADD         #8,R15
    00002064 D32E                   MOV.L       L1326+94,R3; __stoi
    00002066 430B                   JSR         @R3
    00002068 50E1                   MOV.L       @(4,R14),R0
    0000206A 6603                   MOV         R0,R6
    0000206C D22C                   MOV.L       L1326+94,R2; __stoi
    0000206E 420B                   JSR         @R2
    00002070 60E2                   MOV.L       @R14,R0
    00002072 D42C                   MOV.L       L1326+98,R4; __$jetonSPAlpha
    00002074 D32C                   MOV.L       L1326+102,R3; _ML_bmp_16_and_cl
    00002076 430B                   JSR         @R3
    00002078 6503                   MOV         R0,R5
      Elements.c   750        ML_bmp_16_or_cl(jetonSP,jeton.x,jeton.y); // affichage du jeton
    0000207A D229                   MOV.L       L1326+94,R2; __stoi
    0000207C 420B                   JSR         @R2
    0000207E 50E1                   MOV.L       @(4,R14),R0
    00002080 D327                   MOV.L       L1326+94,R3; __stoi
    00002082 6603                   MOV         R0,R6
    00002084 430B                   JSR         @R3
    00002086 60E2                   MOV.L       @R14,R0
    00002088 D428                   MOV.L       L1326+106,R4; __$jetonSP
    0000208A D229                   MOV.L       L1326+110,R2; _ML_bmp_16_or_cl
    0000208C 420B                   JSR         @R2
    0000208E 6503                   MOV         R0,R5
      Elements.c   751    
      Elements.c   752        if (jeton.x < -20) PrintXY(12+vehiculesX[1][vehiculeHitbox],jeton.yHit,jetonText,0); // si on a touche
                         + un jeton on affiche le nombre de jetons
    00002090 D01D                   MOV.L       L1326+70,R0; H'C1A00000
    00002092 D31E                   MOV.L       L1326+74,R3; __lts
    00002094 430B                   JSR         @R3
    00002096 61E2                   MOV.L       @R14,R1
    00002098 8800                   CMP/EQ      #0,R0
    0000209A 890E                   BT          L1256
    0000209C D220                   MOV.L       L1326+94,R2; __stoi
    0000209E E700                   MOV         #0,R7
    000020A0 66F3                   MOV         R15,R6
    000020A2 420B                   JSR         @R2
    000020A4 50E4                   MOV.L       @(16,R14),R0
    000020A6 6503                   MOV         R0,R5
    000020A8 D222                   MOV.L       L1326+114,R2; _vehiculeHitbox
    000020AA 6322                   MOV.L       @R2,R3
    000020AC D422                   MOV.L       L1326+118,R4; __$vehiculesX
    000020AE 343C                   ADD         R3,R4
    000020B0 844C                   MOV.B       @(12,R4),R0
    000020B2 640C                   EXTU.B      R0,R4
    000020B4 D321                   MOV.L       L1326+122,R3; _PrintXY
    000020B6 430B                   JSR         @R3
    000020B8 740C                   ADD         #12,R4
    000020BA              L1256:                            
      Elements.c   753    }
    000020BA 7F04                   ADD         #4,R15
    000020BC 4F26                   LDS.L       @R15+,PR
    000020BE 000B                   RTS
    000020C0 6EF6                   MOV.L       @R15+,R14
    000020C2              L1326:                            
    000020C2 0000                   .DATA.W     0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000020C4 3FF00000               .DATA.L     H'3FF00000
    000020C8 <00000000>             .DATA.L     __stod
    000020CC <00000000>             .DATA.L     __subd
    000020D0 <00000000>             .DATA.L     __dtos
    000020D4 <00000000>             .DATA.L     _sin
    000020D8 <00000000>             .DATA.L     __$yPos$785
    000020DC 3F800000               .DATA.L     H'3F800000
    000020E0 <00000000>             .DATA.L     __nes
    000020E4 <00000000>             .DATA.L     __itod
    000020E8 40800000               .DATA.L     H'40800000
    000020EC <00000000>             .DATA.L     __divs
    000020F0 40000000               .DATA.L     H'40000000
    000020F4 <00000000>             .DATA.L     __muld
    000020F8 <00000000>             .DATA.L     __addd
    000020FC <00000000>             .DATA.L     _sauvegarde
    00002100 40140000               .DATA.L     H'40140000
    00002104 40240000               .DATA.L     H'40240000
    00002108 C1A00000               .DATA.L     H'C1A00000
    0000210C <00000000>             .DATA.L     __lts
    00002110 <00000000>             .DATA.L     __adds
    00002114 <00000000>             .DATA.L     L793
    00002118 <00000000>             .DATA.L     _sprintf
    0000211C <00000000>             .DATA.L     _jeton
    00002120 <00000000>             .DATA.L     __stoi
    00002124 <00000000>             .DATA.L     __$jetonSPAlpha
    00002128 <00000000>             .DATA.L     _ML_bmp_16_and_cl
    0000212C <00000000>             .DATA.L     __$jetonSP
    00002130 <00000000>             .DATA.L     _ML_bmp_16_or_cl
    00002134 <00000000>             .DATA.L     _vehiculeHitbox
    00002138 <00000000>             .DATA.L     __$vehiculesX
    0000213C <00000000>             .DATA.L     _PrintXY
      Elements.c   754    int collisionJeton(int yBarry, int xBarry, int vehicule, int *totalJetons)
    00002140              _collisionJeton:                 ; function: collisionJeton
                                                           ; frame size=20
                                                           ; used runtime library name:
                                                           ; __itos, __ges, __les
    00002140 2FE6                   MOV.L       R14,@-R15
    00002142 2FD6                   MOV.L       R13,@-R15
    00002144 4F22                   STS.L       PR,@-R15
    00002146 7FF8                   ADD         #-8,R15
      Elements.c   755    {
      Elements.c   756        if (jeton.x <= xBarry + vehiculesX[1][vehiculeHitbox] && jeton.x >= xBarry + vehiculesX[0][vehiculeHit
                         +box] - 12 && jeton.y <= yBarry + vehiculesY[1][vehiculeHitbox] && jeton.y >= yBarry + vehiculesY[0][vehicu
                         +leHitbox] - 12) // si le jeton touche barry
    00002148 DD27                   MOV.L       L1327+2,R13; _vehiculeHitbox
    0000214A DE28                   MOV.L       L1327+6,R14; _jeton
    0000214C D028                   MOV.L       L1327+10,R0; __$vehiculesX
    0000214E 61E2                   MOV.L       @R14,R1
    00002150 2F12                   MOV.L       R1,@R15
    00002152 63D2                   MOV.L       @R13,R3
    00002154 303C                   ADD         R3,R0
    00002156 1F01                   MOV.L       R0,@(4,R15)
    00002158 840C                   MOV.B       @(12,R0),R0
    0000215A 600C                   EXTU.B      R0,R0
    0000215C D325                   MOV.L       L1327+14,R3; __itos
    0000215E 430B                   JSR         @R3
    00002160 305C                   ADD         R5,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002162 D225                   MOV.L       L1327+18,R2; __les
    00002164 420B                   JSR         @R2
    00002166 0009                   NOP
    00002168 8800                   CMP/EQ      #0,R0
    0000216A 8937                   BT          L1257
    0000216C 53F1                   MOV.L       @(4,R15),R3
    0000216E 6030                   MOV.B       @R3,R0
    00002170 D220                   MOV.L       L1327+14,R2; __itos
    00002172 600C                   EXTU.B      R0,R0
    00002174 305C                   ADD         R5,R0
    00002176 420B                   JSR         @R2
    00002178 70F4                   ADD         #-12,R0
    0000217A D220                   MOV.L       L1327+22,R2; __ges
    0000217C 420B                   JSR         @R2
    0000217E 61F2                   MOV.L       @R15,R1
    00002180 8800                   CMP/EQ      #0,R0
    00002182 892B                   BT          L1257
    00002184 63D2                   MOV.L       @R13,R3
    00002186 D01E                   MOV.L       L1327+26,R0; __$vehiculesY
    00002188 303C                   ADD         R3,R0
    0000218A 840C                   MOV.B       @(12,R0),R0
    0000218C D319                   MOV.L       L1327+14,R3; __itos
    0000218E 600C                   EXTU.B      R0,R0
    00002190 430B                   JSR         @R3
    00002192 304C                   ADD         R4,R0
    00002194 D218                   MOV.L       L1327+18,R2; __les
    00002196 420B                   JSR         @R2
    00002198 51E1                   MOV.L       @(4,R14),R1
    0000219A 8800                   CMP/EQ      #0,R0
    0000219C 891E                   BT          L1257
    0000219E 63D2                   MOV.L       @R13,R3
    000021A0 D017                   MOV.L       L1327+26,R0; __$vehiculesY
    000021A2 003C                   MOV.B       @(R0,R3),R0
    000021A4 D313                   MOV.L       L1327+14,R3; __itos
    000021A6 600C                   EXTU.B      R0,R0
    000021A8 304C                   ADD         R4,R0
    000021AA 430B                   JSR         @R3
    000021AC 70F4                   ADD         #-12,R0
    000021AE D213                   MOV.L       L1327+22,R2; __ges
    000021B0 420B                   JSR         @R2
    000021B2 51E1                   MOV.L       @(4,R14),R1
    000021B4 8800                   CMP/EQ      #0,R0
    000021B6 8911                   BT          L1257
      Elements.c   757        {
      Elements.c   758            *totalJetons += 1;
    000021B8 6372                   MOV.L       @R7,R3
      Elements.c   759            if (vehicule > 6) sauvegarde->statMort[5] += 1;
    000021BA E206                   MOV         #6,R2
    000021BC 7301                   ADD         #1,R3
    000021BE 3627                   CMP/GT      R2,R6
    000021C0 2732                   MOV.L       R3,@R7
    000021C2 8B07                   BF          L1258
    000021C4 D30F                   MOV.L       L1327+30,R3; _sauvegarde
    000021C6 E05E                   MOV         #94,R0
    000021C8 6132                   MOV.L       @R3,R1
    000021CA E25E                   MOV         #94,R2
    000021CC 001D                   MOV.W       @(R0,R1),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000021CE 321C                   ADD         R1,R2
    000021D0 7001                   ADD         #1,R0
    000021D2 2201                   MOV.W       R0,@R2
    000021D4              L1258:                            
      Elements.c   760            jeton.yHit = jeton.y; // on indique le point de collision
    000021D4 53E1                   MOV.L       @(4,R14),R3
    000021D6 1E34                   MOV.L       R3,@(16,R14)
      Elements.c   761            jeton.x = -40;
    000021D8 D20B                   MOV.L       L1327+34,R2; H'C2200000
    000021DA 2E22                   MOV.L       R2,@R14
    000021DC              L1257:                            
      Elements.c   762        }
      Elements.c   763    }
    000021DC 7F08                   ADD         #8,R15
    000021DE 4F26                   LDS.L       @R15+,PR
    000021E0 6DF6                   MOV.L       @R15+,R13
    000021E2 000B                   RTS
    000021E4 6EF6                   MOV.L       @R15+,R14
    000021E6              L1327:                            
    000021E6 0000                   .DATA.W     0
    000021E8 <00000000>             .DATA.L     _vehiculeHitbox
    000021EC <00000000>             .DATA.L     _jeton
    000021F0 <00000000>             .DATA.L     __$vehiculesX
    000021F4 <00000000>             .DATA.L     __itos
    000021F8 <00000000>             .DATA.L     __les
    000021FC <00000000>             .DATA.L     __ges
    00002200 <00000000>             .DATA.L     __$vehiculesY
    00002204 <00000000>             .DATA.L     _sauvegarde
    00002208 C2200000               .DATA.L     H'C2200000
      Elements.c   764    
      Elements.c   765    void collision(int *vehicule, int *collisionPhase, int *tempsLaser, float vehicDistance[6], int *tempsBox)
    0000220C              _collision:                      ; function: collision
                                                           ; frame size=20
                                                           ; used runtime library name:
                                                           ; __stou, __utos, __gts, __ges
    0000220C 2FE6                   MOV.L       R14,@-R15
    0000220E 6E43                   MOV         R4,R14
    00002210 2FD6                   MOV.L       R13,@-R15
    00002212 6D73                   MOV         R7,R13
    00002214 4F22                   STS.L       PR,@-R15
    00002216 7FF8                   ADD         #-8,R15
    00002218 1F61                   MOV.L       R6,@(4,R15)
      Elements.c   766    {
      Elements.c   767        reinitElements(&tempsLaser);
    0000221A 64F3                   MOV         R15,R4
    0000221C 2F52                   MOV.L       R5,@R15
    0000221E B065                   BSR         _reinitElements
    00002220 7404                   ADD         #4,R4
      Elements.c   768    
      Elements.c   769        if (*vehicule)
    00002222 62E2                   MOV.L       @R14,R2
    00002224 2228                   TST         R2,R2
    00002226 8945                   BT          L1259
      Elements.c   770        {
      Elements.c   771            *tempsBox = 800;
    00002228 53F5                   MOV.L       @(20,R15),R3
    0000222A 924D                   MOV.W       L1328,R2   ; H'0320




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000222C D527                   MOV.L       L1328+4,R5 ; _sauvegarde
    0000222E 2322                   MOV.L       R2,@R3
    00002230 6452                   MOV.L       @R5,R4
    00002232 60E2                   MOV.L       @R14,R0
    00002234 D226                   MOV.L       L1328+8,R2 ; __utos
    00002236 70FF                   ADD         #-1,R0
    00002238 4008                   SHLL2       R0
    0000223A 6343                   MOV         R4,R3
    0000223C 01DE                   MOV.L       @(R0,R13),R1
    0000223E 732C                   ADD         #44,R3
    00002240 60E2                   MOV.L       @R14,R0
    00002242 70FF                   ADD         #-1,R0
    00002244 4000                   SHLL        R0
    00002246 003D                   MOV.W       @(R0,R3),R0
    00002248 420B                   JSR         @R2
    0000224A 600D                   EXTU.W      R0,R0
    0000224C D321                   MOV.L       L1328+12,R3; __gts
    0000224E 430B                   JSR         @R3
    00002250 0009                   NOP
    00002252 8800                   CMP/EQ      #0,R0
    00002254 890D                   BT          L1260
      Elements.c   772            if (vehicDistance[*vehicule-1] > sauvegarde->statVehicule[*vehicule-1]) sauvegarde->statVehicule[*
                         +vehicule-1] = vehicDistance[*vehicule-1];
    00002256 6343                   MOV         R4,R3
    00002258 60E2                   MOV.L       @R14,R0
    0000225A 732C                   ADD         #44,R3
    0000225C 62E2                   MOV.L       @R14,R2
    0000225E 70FF                   ADD         #-1,R0
    00002260 72FF                   ADD         #-1,R2
    00002262 4200                   SHLL        R2
    00002264 323C                   ADD         R3,R2
    00002266 4008                   SHLL2       R0
    00002268 D31B                   MOV.L       L1328+16,R3; __stou
    0000226A 430B                   JSR         @R3
    0000226C 00DE                   MOV.L       @(R0,R13),R0
    0000226E 630D                   EXTU.W      R0,R3
    00002270 2231                   MOV.W       R3,@R2
    00002272              L1260:                            
      Elements.c   773            if (vehicDistance[*vehicule-1] >= 800 && sauvegarde->succes[14] != -1 && *vehicule == 2) sauvegard
                         +e->succes[14] = -1, nouveauSucces = 1;
    00002272 64E2                   MOV.L       @R14,R4
    00002274 D31A                   MOV.L       L1328+24,R3; __ges
    00002276 6043                   MOV         R4,R0
    00002278 70FF                   ADD         #-1,R0
    0000227A 4008                   SHLL2       R0
    0000227C 01DE                   MOV.L       @(R0,R13),R1
    0000227E D017                   MOV.L       L1328+20,R0; H'44480000
    00002280 430B                   JSR         @R3
    00002282 0009                   NOP
    00002284 8800                   CMP/EQ      #0,R0
    00002286 890F                   BT          L1261
    00002288 D210                   MOV.L       L1328+4,R2 ; _sauvegarde
    0000228A E16E                   MOV         #110,R1
    0000228C 6022                   MOV.L       @R2,R0
    0000228E 001C                   MOV.B       @(R0,R1),R0
    00002290 88FF                   CMP/EQ      #-1,R0
    00002292 8909                   BT          L1261




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002294 6043                   MOV         R4,R0
    00002296 8802                   CMP/EQ      #2,R0
    00002298 8B06                   BF          L1261
    0000229A E2FF                   MOV         #-1,R2
    0000229C D111                   MOV.L       L1328+28,R1; _nouveauSucces
    0000229E E06E                   MOV         #110,R0
    000022A0 6352                   MOV.L       @R5,R3
    000022A2 0324                   MOV.B       R2,@(R0,R3)
    000022A4 E301                   MOV         #1,R3
    000022A6 2130                   MOV.B       R3,@R1
    000022A8              L1261:                            
      Elements.c   774            *vehicule = 0;
      Elements.c   775            initValues();
    000022A8 D30F                   MOV.L       L1328+32,R3; _initValues
    000022AA E200                   MOV         #0,R2
    000022AC 430B                   JSR         @R3
    000022AE 2E22                   MOV.L       R2,@R14
    000022B0 A002                   BRA         L1262
    000022B2 0009                   NOP
    000022B4              L1259:                            
      Elements.c   776        }
      Elements.c   777        else *vehicule = 9;
    000022B4 E309                   MOV         #9,R3
    000022B6 2E32                   MOV.L       R3,@R14
    000022B8              L1262:                            
      Elements.c   778    
      Elements.c   779        *collisionPhase = 1;
    000022B8 62F2                   MOV.L       @R15,R2
    000022BA E301                   MOV         #1,R3
    000022BC 2232                   MOV.L       R3,@R2
      Elements.c   780    }
    000022BE 7F08                   ADD         #8,R15
    000022C0 4F26                   LDS.L       @R15+,PR
    000022C2 6DF6                   MOV.L       @R15+,R13
    000022C4 000B                   RTS
    000022C6 6EF6                   MOV.L       @R15+,R14
    000022C8              L1328:                            
    000022C8 0320                   .DATA.W     H'0320
    000022CA 0000                   .DATA.W     0
    000022CC <00000000>             .DATA.L     _sauvegarde
    000022D0 <00000000>             .DATA.L     __utos
    000022D4 <00000000>             .DATA.L     __gts
    000022D8 <00000000>             .DATA.L     __stou
    000022DC 44480000               .DATA.L     H'44480000
    000022E0 <00000000>             .DATA.L     __ges
    000022E4 <00000000>             .DATA.L     _nouveauSucces
    000022E8 <00000000>             .DATA.L     _initValues
      Elements.c   781    
      Elements.c   782    void reinitElements(int *tempsLaser)
    000022EC              _reinitElements:                 ; function: reinitElements
                                                           ; frame size=20
    000022EC 2FE6                   MOV.L       R14,@-R15
    000022EE E600                   MOV         #0,R6
    000022F0 9360                   MOV.W       L1329,R3   ; H'008C
    000022F2 2FD6                   MOV.L       R13,@-R15
    000022F4 2FC6                   MOV.L       R12,@-R15
    000022F6 2FB6                   MOV.L       R11,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   97


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000022F8 D52F                   MOV.L       L1329+4,R5 ; _zappeur
    000022FA 7FFC                   ADD         #-4,R15
    000022FC 2F52                   MOV.L       R5,@R15
    000022FE 6753                   MOV         R5,R7
    00002300 373C                   ADD         R3,R7
      Elements.c   783    {
      Elements.c   784        int w;
      Elements.c   785    
      Elements.c   786        for (w = 0; w < 5; w++)
    00002302              L1263:                            
      Elements.c   787            zappeur[w].active = 0; // on desactive les zappeurs a l'ecran
    00002302 1566                   MOV.L       R6,@(24,R5)
    00002304 751C                   ADD         #28,R5
    00002306 3572                   CMP/HS      R7,R5
    00002308 8BFB                   BF          L1263
    0000230A EE02                   MOV         #2,R14
    0000230C D72B                   MOV.L       L1329+8,R7 ; _laser
    0000230E D52C                   MOV.L       L1329+12,R5; _missile
    00002310 DB2C                   MOV.L       L1329+16,R11; _chosenPattern
    00002312 6C53                   MOV         R5,R12
    00002314 2F52                   MOV.L       R5,@R15
    00002316 6653                   MOV         R5,R6
    00002318 DD2B                   MOV.L       L1329+20,R13; __$laserPattern
    0000231A 7C60                   ADD         #96,R12
      Elements.c   788    
      Elements.c   789        for (w = 0; w < 6; w++)
    0000231C              L1264:                            
      Elements.c   790        {
      Elements.c   791            if (missile[w].exists) missile[w].exists = 2; // on desactive les missiles a l'ecran
    0000231C 5352                   MOV.L       @(8,R5),R3
    0000231E 2338                   TST         R3,R3
    00002320 8900                   BT          L1265
    00002322 16E2                   MOV.L       R14,@(8,R6)
    00002324              L1265:                            
      Elements.c   792            if (laser[w].exists && *tempsLaser < laserPattern[chosenPattern][7]-7) *tempsLaser = laserPattern[
                         +chosenPattern][7]-7; // on desactive les lasers a l'ecran
    00002324 5371                   MOV.L       @(4,R7),R3
    00002326 2338                   TST         R3,R3
    00002328 8912                   BT          L1266
    0000232A D226                   MOV.L       L1329+16,R2; _chosenPattern
    0000232C D027                   MOV.L       L1329+24,R0; H'0000000E+__$laserPattern
    0000232E 6322                   MOV.L       @R2,R3
    00002330 4308                   SHLL2       R3
    00002332 4308                   SHLL2       R3
    00002334 013D                   MOV.W       @(R0,R3),R1
    00002336 611D                   EXTU.W      R1,R1
    00002338 6342                   MOV.L       @R4,R3
    0000233A 71F9                   ADD         #-7,R1
    0000233C 3313                   CMP/GE      R1,R3
    0000233E 8907                   BT          L1266
    00002340 62B2                   MOV.L       @R11,R2
    00002342 4208                   SHLL2       R2
    00002344 4208                   SHLL2       R2
    00002346 32DC                   ADD         R13,R2
    00002348 8527                   MOV.W       @(14,R2),R0
    0000234A 600D                   EXTU.W      R0,R0
    0000234C 70F9                   ADD         #-7,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   98


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000234E 2402                   MOV.L       R0,@R4
    00002350              L1266:                            
    00002350 770C                   ADD         #12,R7
    00002352 7510                   ADD         #16,R5
    00002354 35C2                   CMP/HS      R12,R5
    00002356 8FE1                   BF/S        L1264
    00002358 7610                   ADD         #16,R6
      Elements.c   793        }
      Elements.c   794    
      Elements.c   795        initBox();
    0000235A 7F04                   ADD         #4,R15
    0000235C 6BF6                   MOV.L       @R15+,R11
    0000235E 6CF6                   MOV.L       @R15+,R12
    00002360 6DF6                   MOV.L       @R15+,R13
    00002362 ACBA                   BRA         _initBox
    00002364 6EF6                   MOV.L       @R15+,R14
      Elements.c   796    }
      Elements.c   797    
      Elements.c   798    void collisionAnim(int *collisionPhase)
    00002366              _collisionAnim:                  ; function: collisionAnim
                                                           ; frame size=20
    00002366 2FE6                   MOV.L       R14,@-R15
    00002368 4F22                   STS.L       PR,@-R15
    0000236A 6E43                   MOV         R4,R14
      Elements.c   799    {
      Elements.c   800        if (*collisionPhase == 1 || *collisionPhase == 2 || *collisionPhase == 5 || *collisionPhase == 6) ML_r
                         +ectangle(0,0,127,63,1,ML_XOR,ML_XOR);
    0000236C 60E2                   MOV.L       @R14,R0
    0000236E 8801                   CMP/EQ      #1,R0
    00002370 8D09                   BT/S        L1268
    00002372 6403                   MOV         R0,R4
    00002374 6043                   MOV         R4,R0
    00002376 8802                   CMP/EQ      #2,R0
    00002378 8905                   BT          L1268
    0000237A 6043                   MOV         R4,R0
    0000237C 8805                   CMP/EQ      #5,R0
    0000237E 8902                   BT          L1268
    00002380 6043                   MOV         R4,R0
    00002382 8806                   CMP/EQ      #6,R0
    00002384 8B0B                   BF          L1267
    00002386              L1268:                            
    00002386 E302                   MOV         #2,R3
    00002388 D111                   MOV.L       L1329+28,R1; _ML_rectangle
    0000238A E201                   MOV         #1,R2
    0000238C 2F36                   MOV.L       R3,@-R15
    0000238E E73F                   MOV         #63,R7
    00002390 2F36                   MOV.L       R3,@-R15
    00002392 E67F                   MOV         #127,R6
    00002394 2F26                   MOV.L       R2,@-R15
    00002396 E500                   MOV         #0,R5
    00002398 410B                   JSR         @R1
    0000239A 6453                   MOV         R5,R4
    0000239C 7F0C                   ADD         #12,R15
    0000239E              L1267:                            
      Elements.c   801    
      Elements.c   802        *collisionPhase += 1;
    0000239E 63E2                   MOV.L       @R14,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE   99


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000023A0 7301                   ADD         #1,R3
      Elements.c   803        if (*collisionPhase == 7) *collisionPhase = 0;
    000023A2 6033                   MOV         R3,R0
    000023A4 8807                   CMP/EQ      #7,R0
    000023A6 8F02                   BF/S        L1269
    000023A8 2E32                   MOV.L       R3,@R14
    000023AA E300                   MOV         #0,R3
    000023AC 2E32                   MOV.L       R3,@R14
    000023AE              L1269:                            
      Elements.c   804    }
    000023AE 4F26                   LDS.L       @R15+,PR
    000023B0 000B                   RTS
    000023B2 6EF6                   MOV.L       @R15+,R14
    000023B4              L1329:                            
    000023B4 008C                   .DATA.W     H'008C
    000023B6 0000                   .DATA.W     0
    000023B8 <00000000>             .DATA.L     _zappeur
    000023BC <00000000>             .DATA.L     _laser
    000023C0 <00000000>             .DATA.L     _missile
    000023C4 <00000000>             .DATA.L     _chosenPattern
    000023C8 <00000000>             .DATA.L     __$laserPattern
    000023CC <0000000E>             .DATA.L     H'0000000E+__$laserPattern
    000023D0 <00000000>             .DATA.L     _ML_rectangle
      Elements.c   805    
      Elements.c   806    int exitAnim()
    000023D4              _exitAnim:                       ; function: exitAnim
                                                           ; frame size=80
    000023D4 2FE6                   MOV.L       R14,@-R15
    000023D6 EE01                   MOV         #1,R14
    000023D8 2FD6                   MOV.L       R13,@-R15
      Elements.c   807    {
      Elements.c   808        int u = 36;
    000023DA ED24                   MOV         #36,R13
    000023DC 2FC6                   MOV.L       R12,@-R15
    000023DE 2FB6                   MOV.L       R11,@-R15
    000023E0 2FA6                   MOV.L       R10,@-R15
    000023E2 EAFF                   MOV         #-1,R10
    000023E4 DB33                   MOV.L       L1330+12,R11; _PrintMini
    000023E6 2F96                   MOV.L       R9,@-R15
    000023E8 2F86                   MOV.L       R8,@-R15
    000023EA E902                   MOV         #2,R9
    000023EC DC32                   MOV.L       L1330+16,R12; _ML_rectangle
    000023EE 4F22                   STS.L       PR,@-R15
    000023F0 D82F                   MOV.L       L1330+8,R8 ; _IsKeyDown
      Elements.c   809    
      Elements.c   810        do
    000023F2              L1270:                            
      Elements.c   811        {
      Elements.c   812            ML_rectangle(30,15,97,49,1,ML_BLACK,ML_WHITE);
    000023F2 E300                   MOV         #0,R3
    000023F4 2F36                   MOV.L       R3,@-R15
    000023F6 E731                   MOV         #49,R7
    000023F8 2FE6                   MOV.L       R14,@-R15
    000023FA E661                   MOV         #97,R6
    000023FC 2FE6                   MOV.L       R14,@-R15
    000023FE E50F                   MOV         #15,R5
    00002400 4C0B                   JSR         @R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  100


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002402 E41E                   MOV         #30,R4
      Elements.c   813            ML_rectangle(35,34,63,42,1,ML_BLACK,ML_TRANSPARENT);
    00002404 2FA6                   MOV.L       R10,@-R15
    00002406 E72A                   MOV         #42,R7
    00002408 2FE6                   MOV.L       R14,@-R15
    0000240A E63F                   MOV         #63,R6
    0000240C 2FE6                   MOV.L       R14,@-R15
    0000240E E522                   MOV         #34,R5
    00002410 4C0B                   JSR         @R12
    00002412 E423                   MOV         #35,R4
      Elements.c   814            ML_rectangle(65,34,93,42,1,ML_BLACK,ML_TRANSPARENT);
    00002414 2FA6                   MOV.L       R10,@-R15
    00002416 E72A                   MOV         #42,R7
    00002418 2FE6                   MOV.L       R14,@-R15
    0000241A E65D                   MOV         #93,R6
    0000241C 2FE6                   MOV.L       R14,@-R15
    0000241E E522                   MOV         #34,R5
    00002420 4C0B                   JSR         @R12
    00002422 E441                   MOV         #65,R4
      Elements.c   815            PrintMini(47,22,"QUITTER ?",0);
    00002424 D625                   MOV.L       L1330+20,R6; L816
    00002426 E516                   MOV         #22,R5
    00002428 E700                   MOV         #0,R7
    0000242A 4B0B                   JSR         @R11
    0000242C E42F                   MOV         #47,R4
      Elements.c   816            PrintMini(41,36,"NON",0);
    0000242E E700                   MOV         #0,R7
    00002430 D623                   MOV.L       L1330+24,R6; L817
    00002432 E524                   MOV         #36,R5
    00002434 4B0B                   JSR         @R11
    00002436 E429                   MOV         #41,R4
      Elements.c   817            PrintMini(73,36,"OUI",0);
    00002438 D622                   MOV.L       L1330+28,R6; L818
    0000243A E524                   MOV         #36,R5
    0000243C E700                   MOV         #0,R7
    0000243E 4B0B                   JSR         @R11
    00002440 E449                   MOV         #73,R4
      Elements.c   818            ML_rectangle(u,35,u+26,41,1,ML_XOR,ML_XOR);
    00002442 E729                   MOV         #41,R7
    00002444 2F96                   MOV.L       R9,@-R15
    00002446 66D3                   MOV         R13,R6
    00002448 2F96                   MOV.L       R9,@-R15
    0000244A E523                   MOV         #35,R5
    0000244C 2FE6                   MOV.L       R14,@-R15
    0000244E 761A                   ADD         #26,R6
    00002450 4C0B                   JSR         @R12
    00002452 64D3                   MOV         R13,R4
      Elements.c   819            ML_display_vram();
    00002454 D21C                   MOV.L       L1330+32,R2; _ML_display_vram
    00002456 420B                   JSR         @R2
    00002458 7F30                   ADD         #48,R15
      Elements.c   820    
      Elements.c   821            if (IsKeyDown(KEY_CTRL_LEFT) && u != 36) u = 36;
    0000245A 9425                   MOV.W       L1330,R4   ; H'7544
    0000245C 480B                   JSR         @R8
    0000245E 0009                   NOP
    00002460 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  101


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002462 8903                   BT          L1271
    00002464 60D3                   MOV         R13,R0
    00002466 8824                   CMP/EQ      #36,R0
    00002468 8900                   BT          L1271
    0000246A ED24                   MOV         #36,R13
    0000246C              L1271:                            
      Elements.c   822            if (IsKeyDown(KEY_CTRL_RIGHT) && u == 36) u = 66;
    0000246C 941D                   MOV.W       L1330+2,R4 ; H'7545
    0000246E 480B                   JSR         @R8
    00002470 0009                   NOP
    00002472 2008                   TST         R0,R0
    00002474 8903                   BT          L1272
    00002476 60D3                   MOV         R13,R0
    00002478 8824                   CMP/EQ      #36,R0
    0000247A 8B00                   BF          L1272
    0000247C ED42                   MOV         #66,R13
    0000247E              L1272:                            
      Elements.c   823        }
      Elements.c   824        while (IsKeyUp(KEY_CTRL_EXE));
    0000247E 9415                   MOV.W       L1330+4,R4 ; H'7534
    00002480 D312                   MOV.L       L1330+36,R3; _IsKeyUp
    00002482 430B                   JSR         @R3
    00002484 0009                   NOP
    00002486 2008                   TST         R0,R0
    00002488 8BB3                   BF          L1270
      Elements.c   825    
      Elements.c   826        if (u == 36) return 0;
    0000248A 60D3                   MOV         R13,R0
    0000248C 8824                   CMP/EQ      #36,R0
    0000248E 8B01                   BF          L1273
    00002490 A001                   BRA         L1274
    00002492 E000                   MOV         #0,R0
    00002494              L1273:                            
      Elements.c   827        else return 1;
    00002494 E001                   MOV         #1,R0
      Elements.c   828    }
    00002496              L1274:                            
    00002496 4F26                   LDS.L       @R15+,PR
    00002498 68F6                   MOV.L       @R15+,R8
    0000249A 69F6                   MOV.L       @R15+,R9
    0000249C 6AF6                   MOV.L       @R15+,R10
    0000249E 6BF6                   MOV.L       @R15+,R11
    000024A0 6CF6                   MOV.L       @R15+,R12
    000024A2 6DF6                   MOV.L       @R15+,R13
    000024A4 000B                   RTS
    000024A6 6EF6                   MOV.L       @R15+,R14
    000024A8              L1330:                            
    000024A8 7544                   .DATA.W     H'7544
    000024AA 7545                   .DATA.W     H'7545
    000024AC 7534                   .DATA.W     H'7534
    000024AE 0000                   .DATA.W     0
    000024B0 <00000000>             .DATA.L     _IsKeyDown
    000024B4 <00000000>             .DATA.L     _PrintMini
    000024B8 <00000000>             .DATA.L     _ML_rectangle
    000024BC <00000000>             .DATA.L     L816
    000024C0 <00000000>             .DATA.L     L817
    000024C4 <00000000>             .DATA.L     L818




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  102


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000024C8 <00000000>             .DATA.L     _ML_display_vram
    000024CC <00000000>             .DATA.L     _IsKeyUp
C   00000000              __$barryUp:                      ; static: barryUp
    00000000 08803F807F             .DATA.B     H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             80FF80F900 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'48,H'00,H'70,H'00,
             F880CA80CA +                       H'3E,H'00,H'3E,H'00,H'3E,H'00,H'FF,H'80,H'79,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             4068805080 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3D,H'00,H'78,H'00,H'70,H'00,
             AF0050802E +                       H'1C,H'00,H'22,H'00,H'22,H'00,H'7F,H'C0,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             8025004800 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'48,H'00,H'70,H'00,
             70003E003E +                       H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'FA,H'40,
             003E00FF80 +                       H'7F,H'80,H'5F,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3D,H'00,H'78,H'00,H'70,H'00,
             7900F880CA +                       H'00,H'00,H'3F,H'00,H'41,H'80,H'80,H'80,H'80,H'80,H'8F,H'80,H'8E,H'80,H'CF,H'40,
             80CA406880 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3D,H'00,H'48,H'00,H'70,H'00,
             5080AF0050 +                       H'08,H'00,H'14,H'00,H'22,H'00,H'41,H'00,H'80,H'80,H'FF,H'80,H'D8,H'80,H'AB,H'40,
             803E803D00 +                       H'58,H'80,H'70,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'48,H'00,H'70,H'00
             780070001C   
             0022002200   
             7FC0F900F8   
             80CA80CA40   
             68805080AF   
             0050802E80   
             2500480070   
             0008803F80   
             7F80FF80F9   
             00F880CA80   
             FA407F805F   
             80AF005080   
             3E803D0078   
             0070000000   
             3F00418080   
             8080808F80   
             8E80CF4068   
             805080AF00   
             50803E803D   
             0048007000   
             0800140022   
             0041008080   
             FF80D880AB   
             4058807080   
             AF0050802E   
             8025004800   
             7000         
    000000C0              __$barryDown1:                   ; static: barryDown1
    000000C0 08803F807F             .DATA.B     H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             80FF80F900 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'49,H'00,H'77,H'00,
             F880CA80CA +                       H'3E,H'00,H'3E,H'00,H'3E,H'00,H'FF,H'80,H'79,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             4068805080 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'7F,H'00,H'77,H'00,
             AF0050802E +                       H'1C,H'00,H'22,H'00,H'22,H'00,H'7F,H'C0,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             8025004900 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'49,H'00,H'77,H'00,
             77003E003E +                       H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'FA,H'40,
             003E00FF80 +                       H'7F,H'80,H'5F,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'7F,H'00,H'77,H'00,
             7900F880CA +                       H'00,H'00,H'3F,H'00,H'41,H'80,H'80,H'80,H'80,H'80,H'8F,H'80,H'8E,H'80,H'CF,H'40,
             80CA406880 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'49,H'00,H'77,H'00,
             5080AF0050 +                       H'08,H'00,H'14,H'00,H'22,H'00,H'41,H'00,H'80,H'80,H'FF,H'80,H'D8,H'80,H'AB,H'40,
             803E803F00 +                       H'58,H'80,H'70,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'49,H'00,H'77,H'00
             7F0077001C   
             0022002200   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  103


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             7FC0F900F8   
             80CA80CA40   
             68805080AF   
             0050802E80   
             2500490077   
             0008803F80   
             7F80FF80F9   
             00F880CA80   
             FA407F805F   
             80AF005080   
             3E803F007F   
             0077000000   
             3F00418080   
             8080808F80   
             8E80CF4068   
             805080AF00   
             50803E803F   
             0049007700   
             0800140022   
             0041008080   
             FF80D880AB   
             4058807080   
             AF0050802E   
             8025004900   
             7700         
    00000180              __$barryDown2:                   ; static: barryDown2
    00000180 08803F807F             .DATA.B     H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             80FF80F900 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'23,H'00,H'1A,H'00,H'0E,H'00,
             F880CA80CA +                       H'3E,H'00,H'3E,H'00,H'3E,H'00,H'FF,H'80,H'79,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             4068805080 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'1E,H'00,H'0E,H'00,
             AF0050802E +                       H'1C,H'00,H'22,H'00,H'22,H'00,H'7F,H'C0,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             8023001A00 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'23,H'00,H'1A,H'00,H'0E,H'00,
             0E003E003E +                       H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'FA,H'40,
             003E00FF80 +                       H'7F,H'80,H'5F,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'1E,H'00,H'0E,H'00,
             7900F880CA +                       H'00,H'00,H'3F,H'00,H'41,H'80,H'80,H'80,H'80,H'80,H'8F,H'80,H'8E,H'80,H'CF,H'40,
             80CA406880 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'12,H'00,H'0E,H'00,
             5080AF0050 +                       H'08,H'00,H'14,H'00,H'22,H'00,H'41,H'00,H'80,H'80,H'FF,H'80,H'D8,H'80,H'AB,H'40,
             803E803F00 +                       H'58,H'80,H'70,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'23,H'00,H'1A,H'00,H'0E,H'00
             1E000E001C   
             0022002200   
             7FC0F900F8   
             80CA80CA40   
             68805080AF   
             0050802E80   
             23001A000E   
             0008803F80   
             7F80FF80F9   
             00F880CA80   
             FA407F805F   
             80AF005080   
             3E803F001E   
             000E000000   
             3F00418080   
             8080808F80   
             8E80CF4068   
             805080AF00   
             50803E803F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  104


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0012000E00   
             0800140022   
             0041008080   
             FF80D880AB   
             4058807080   
             AF0050802E   
             8023001A00   
             0E00         
    00000240              __$barryAlpha:                   ; static: barryAlpha
    00000240 F77FC07F80             .DATA.B     H'F7,H'7F,H'C0,H'7F,H'80,H'7F,H'00,H'7F,H'00,H'FF,H'00,H'7F,H'00,H'7F,H'00,H'3F,
             7F007F00FF +                       H'80,H'7F,H'80,H'7F,H'40,H'FF,H'A0,H'7F,H'C0,H'7F,H'C2,H'FF,H'87,H'FF,H'8F,H'FF,
             007F007F00 +                       H'C1,H'FF,H'C1,H'FF,H'C1,H'FF,H'00,H'7F,H'80,H'FF,H'00,H'7F,H'00,H'7F,H'00,H'3F,
             3F807F807F +                       H'80,H'7F,H'80,H'7F,H'00,H'FF,H'80,H'7F,H'C0,H'7F,H'C2,H'FF,H'87,H'FF,H'8F,H'FF,
             40FFA07FC0 +                       H'E3,H'C0,H'C1,H'C0,H'C1,H'C0,H'80,H'00,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             7FC2FF87FF +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C2,H'C0,H'87,H'C0,H'8F,H'C0,
             8FFFC1FFC1 +                       H'F7,H'40,H'C0,H'40,H'80,H'40,H'00,H'40,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             FFC1FF007F +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C2,H'C0,H'87,H'C0,H'8F,H'C0,
             80FF007F00 +                       H'FF,H'C0,H'C0,H'C0,H'80,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             7F003F807F +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C2,H'C0,H'87,H'C0,H'8F,H'C0,
             807F00FF80 +                       H'F7,H'C0,H'E3,H'C0,H'C1,H'C0,H'80,H'C0,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             7FC07FC2FF +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C2,H'C0,H'87,H'C0,H'8F,H'C0
             87FF8FFFE3   
             C0C1C0C1C0   
             800000C000   
             4000400000   
             8040804000   
             C08040C040   
             C2C087C08F   
             C0F740C040   
             8040004000   
             C000400040   
             0000804080   
             4000C08040   
             C040C2C087   
             C08FC0FFC0   
             C0C0804000   
             4000400040   
             0040000080   
             40804000C0   
             8040C040C2   
             C087C08FC0   
             F7C0E3C0C1   
             C080C00040   
             0040004000   
             0080408040   
             00C08040C0   
             40C2C087C0   
             8FC0         
    00000300              __$barryDown1Alpha:              ; static: barryDown1Alpha
    00000300 F77FC07F80             .DATA.B     H'F7,H'7F,H'C0,H'7F,H'80,H'7F,H'00,H'7F,H'00,H'FF,H'00,H'7F,H'00,H'7F,H'00,H'3F,
             7F007F00FF +                       H'80,H'7F,H'80,H'7F,H'40,H'FF,H'A0,H'7F,H'C0,H'7F,H'C0,H'FF,H'80,H'FF,H'88,H'FF,
             007F007F00 +                       H'C1,H'C0,H'C1,H'C0,H'C1,H'C0,H'00,H'40,H'80,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             3F807F807F +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'80,H'C0,H'88,H'C0,
             40FFA07FC0 +                       H'E3,H'C0,H'C1,H'C0,H'C1,H'C0,H'80,H'00,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             7FC0FF80FF +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'80,H'C0,H'88,H'C0,
             88FFC1C0C1 +                       H'F7,H'40,H'C0,H'40,H'80,H'40,H'00,H'40,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             C0C1C00040 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'80,H'C0,H'88,H'C0,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  105


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             80C0004000 +                       H'FF,H'C0,H'C0,H'C0,H'80,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             4000008040 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'80,H'C0,H'88,H'C0,
             804000C080 +                       H'F7,H'C0,H'E3,H'C0,H'C1,H'C0,H'80,H'C0,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             40C040C0C0 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'80,H'C0,H'88,H'C0
             80C088C0E3   
             C0C1C0C1C0   
             800000C000   
             4000400000   
             8040804000   
             C08040C040   
             C0C080C088   
             C0F740C040   
             8040004000   
             C000400040   
             0000804080   
             4000C08040   
             C040C0C080   
             C088C0FFC0   
             C0C0804000   
             4000400040   
             0040000080   
             40804000C0   
             8040C040C0   
             C080C088C0   
             F7C0E3C0C1   
             C080C00040   
             0040004000   
             0080408040   
             00C08040C0   
             40C0C080C0   
             88C0         
    000003C0              __$barryDown2Alpha:              ; static: barryDown2Alpha
    000003C0 F77FC07F80             .DATA.B     H'F7,H'7F,H'C0,H'7F,H'80,H'7F,H'00,H'7F,H'00,H'FF,H'00,H'7F,H'00,H'7F,H'00,H'3F,
             7F007F00FF +                       H'80,H'7F,H'80,H'7F,H'40,H'FF,H'A0,H'7F,H'C0,H'7F,H'C0,H'FF,H'E1,H'FF,H'F1,H'FF,
             007F007F00 +                       H'C1,H'C0,H'C1,H'C0,H'C1,H'C0,H'00,H'40,H'80,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             3F807F807F +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'E1,H'C0,H'F1,H'C0,
             40FFA07FC0 +                       H'E3,H'C0,H'C1,H'C0,H'C1,H'C0,H'80,H'00,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             7FC0FFE1FF +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'E1,H'C0,H'F1,H'C0,
             F1FFC1C0C1 +                       H'F7,H'40,H'C0,H'40,H'80,H'40,H'00,H'40,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             C0C1C00040 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'E1,H'C0,H'F1,H'C0,
             80C0004000 +                       H'FF,H'C0,H'C0,H'C0,H'80,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             4000008040 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'E1,H'C0,H'F1,H'C0,
             804000C080 +                       H'F7,H'C0,H'E3,H'C0,H'C1,H'C0,H'80,H'C0,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             40C040C0C0 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'E1,H'C0,H'F1,H'C0
             E1C0F1C0E3   
             C0C1C0C1C0   
             800000C000   
             4000400000   
             8040804000   
             C08040C040   
             C0C0E1C0F1   
             C0F740C040   
             8040004000   
             C000400040   
             0000804080   
             4000C08040   
             C040C0C0E1   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  106


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             C0F1C0FFC0   
             C0C0804000   
             4000400040   
             0040000080   
             40804000C0   
             8040C040C0   
             C0E1C0F1C0   
             F7C0E3C0C1   
             C080C00040   
             0040004000   
             0080408040   
             00C08040C0   
             40C0C0E1C0   
             F1C0         
    00000480              __$jetpack1:                     ; static: jetpack1
    00000480 0E11111E12             .DATA.B     H'0E,H'11,H'11,H'1E,H'12,H'14,H'0A,H'1B,H'15,H'1B,H'15,H'1F,H'15,H'15,H'1F,H'00,
             140A1B151B +                       H'0E,H'11,H'11,H'1E,H'12,H'14,H'0A,H'1B,H'1B,H'11,H'1B,H'1F,H'0A,H'0A,H'1F,H'00
             151F15151F   
             000E11111E   
             12140A1B1B   
             111B1F0A0A   
             1F00         
    000004A0              __$jetpack1Alpha:                ; static: jetpack1Alpha
    000004A0 F1E0E0E1E1             .DATA.B     H'F1,H'E0,H'E0,H'E1,H'E1,H'E3,H'F1,H'E0,H'E0,H'E0,H'E0,H'E0,H'E0,H'E0,H'E0,H'FF
             E3F1E0E0E0   
             E0E0E0E0E0   
             FF           
    000004B0              __$jetpack2:                     ; static: jetpack2
    000004B0 001C224141             .DATA.B     H'00,H'1C,H'22,H'41,H'41,H'5D,H'41,H'5D,H'41,H'5D,H'41,H'41,H'7F,H'3E,H'1C,H'00
             5D415D415D   
             41417F3E1C   
             00           
    000004C0              __$jetpack2Alpha:                ; static: jetpack2Alpha
    000004C0 FFE3C18080             .DATA.B     H'FF,H'E3,H'C1,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'C1,H'E3,H'FF
             8080808080   
             808080C1E3   
             FF           
    000004D0              __$jetpack3:                     ; static: jetpack3
    000004D0 001C22417F             .DATA.B     H'00,H'1C,H'22,H'41,H'7F,H'41,H'7F,H'49,H'49,H'41,H'3E,H'1C,H'00,H'00,H'00,H'00,
             417F494941 +                       H'00,H'1C,H'22,H'41,H'7F,H'41,H'7F,H'49,H'49,H'41,H'7F,H'5D,H'49,H'22,H'14,H'08,
             3E1C000000 +                       H'00,H'1C,H'22,H'41,H'7F,H'41,H'7F,H'49,H'49,H'41,H'3E,H'2A,H'14,H'14,H'08,H'08
             00001C2241   
             7F417F4949   
             417F5D4922   
             1408001C22   
             417F417F49   
             49413E2A14   
             140808       
    00000500              __$jetpack3Alpha:                ; static: jetpack3Alpha
    00000500 FFE3C18080             .DATA.B     H'FF,H'E3,H'C1,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'C1,H'E3,H'FF,H'FF,H'FF,H'FF,
             8080808080 +                       H'FF,H'E3,H'C1,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'C1,H'E3,H'F7,
             C1E3FFFFFF +                       H'FF,H'E3,H'C1,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'C1,H'C1,H'E3,H'E3,H'F7,H'F7
             FFFFE3C180   
             8080808080   
             80808080C1   
             E3F7FFE3C1   
             8080808080   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  107


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             8080C1C1E3   
             E3F7F7       
    00000530              __$jetpack4:                     ; static: jetpack4
    00000530 C3A599665A             .DATA.B     H'C3,H'A5,H'99,H'66,H'5A,H'24,H'18,H'18,H'1F,H'18,H'1F,H'18,H'34,H'2C,H'14,H'08
             2418181F18   
             1F18342C14   
             08           
    00000540              __$jetpack4Alpha:                ; static: jetpack4Alpha
    00000540 3C18008181             .DATA.B     H'3C,H'18,H'00,H'81,H'81,H'C3,H'E7,H'E7,H'E0,H'E0,H'E0,H'E7,H'C3,H'C3,H'E3,H'F7
             C3E7E7E0E0   
             E0E7C3C3E3   
             F7           
    00000550              __$gadgetOK:                     ; static: gadgetOK
    00000550 030509D2A4             .DATA.B     H'03,H'05,H'09,H'D2,H'A4,H'88,H'50,H'20
             885020       
    00000558              __$gadgetOKAlpha:                ; static: gadgetOKAlpha
    00000558 FCF8F02103             .DATA.B     H'FC,H'F8,H'F0,H'21,H'03,H'07,H'8F,H'DF
             078FDF       
    00000560              __$money:                        ; static: money
    00000560 7884948484             .DATA.B     H'78,H'84,H'94,H'84,H'84,H'78,H'00,H'00
             780000       
    00000568              __$money2:                       ; static: money2
    00000568 7884B4B484             .DATA.B     H'78,H'84,H'B4,H'B4,H'84,H'78,H'00,H'00
             780000       
    00000570              __$moneyAlpha:                   ; static: moneyAlpha
    00000570 8703030303             .DATA.B     H'87,H'03,H'03,H'03,H'03,H'87,H'FF,H'FF
             87FFFF       
    00000578              __$zap:                          ; static: zap
    00000578 0A0035005E             .DATA.B     H'0A,H'00,H'35,H'00,H'5E,H'80,H'A1,H'80,H'69,H'40,H'A5,H'80,H'61,H'40,H'5E,H'80,
             80A1806940 +                       H'2B,H'00,H'14,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             A58061405E   
             802B001400   
             0000000000   
             0000000000   
             0000         
    00000598              __$zapAlpha:                     ; static: zapAlpha
    00000598 F1FFC0FF80             .DATA.B     H'F1,H'FF,H'C0,H'FF,H'80,H'7F,H'00,H'7F,H'00,H'3F,H'00,H'3F,H'80,H'3F,H'80,H'7F,
             7F007F003F +                       H'C0,H'FF,H'E3,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             003F803F80   
             7FC0FFE3FF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    000005B8              __$laserGauche:                  ; static: laserGauche
    000005B8 7C8EADADAD             .DATA.B     H'7C,H'8E,H'AD,H'AD,H'AD,H'8E,H'7C,H'00
             8E7C00       
    000005C0              __$laserDroite:                  ; static: laserDroite
    000005C0 3E71B5B5B5             .DATA.B     H'3E,H'71,H'B5,H'B5,H'B5,H'71,H'3E,H'00
             713E00       
    000005C8              __$laserGaucheAlpha:             ; static: laserGaucheAlpha
    000005C8 8301000000             .DATA.B     H'83,H'01,H'00,H'00,H'00,H'01,H'83,H'FF
             0183FF       
    000005D0              __$laserDroiteAlpha:             ; static: laserDroiteAlpha
    000005D0 C180000000             .DATA.B     H'C1,H'80,H'00,H'00,H'00,H'80,H'C1,H'FF
             80C1FF       
    000005D8              __$missile1:                     ; static: missile1
    000005D8 03003F8070             .DATA.B     H'03,H'00,H'3F,H'80,H'70,H'78,H'D0,H'46,H'93,H'71,H'D0,H'46,H'70,H'78,H'3F,H'80,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  108


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             78D0469371 +                       H'03,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             D04670783F   
             8003000000   
             0000000000   
             0000000000   
             0000         
    000005F8              __$missile2:                     ; static: missile2
    000005F8 03003FB070             .DATA.B     H'03,H'00,H'3F,H'B0,H'70,H'4C,H'D0,H'62,H'93,H'71,H'D0,H'62,H'70,H'4C,H'3F,H'B0,
             4CD0629371 +                       H'03,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             D062704C3F   
             B003000000   
             0000000000   
             0000000000   
             0000         
    00000618              __$missile1Alpha:                ; static: missile1Alpha
    00000618 FCFFC07F80             .DATA.B     H'FC,H'FF,H'C0,H'7F,H'80,H'07,H'00,H'01,H'00,H'00,H'00,H'01,H'80,H'07,H'C0,H'7F,
             0700010000 +                       H'FC,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             00018007C0   
             7FFCFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    00000638              __$missile2Alpha:                ; static: missile2Alpha
    00000638 FCFFC04F80             .DATA.B     H'FC,H'FF,H'C0,H'4F,H'80,H'03,H'00,H'01,H'00,H'00,H'00,H'01,H'80,H'03,H'C0,H'4F,
             0300010000 +                       H'FC,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             00018003C0   
             4FFCFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    00000658              __$warning1:                     ; static: warning1
    00000658 1818181818             .DATA.B     H'18,H'18,H'18,H'18,H'18,H'00,H'18,H'18
             001818       
    00000660              __$warning2:                     ; static: warning2
    00000660 3C24242424             .DATA.B     H'3C,H'24,H'24,H'24,H'24,H'24,H'3C,H'24,H'24,H'3C
             243C24243C   
    0000066A              __$box:                          ; static: box
    0000066A 3FF04008BC             .DATA.B     H'3F,H'F0,H'40,H'08,H'BC,H'E4,H'E6,H'04,H'CA,H'74,H'C2,H'DC,H'E6,H'8C,H'BC,H'DC,
             E4E604CA74 +                       H'87,H'74,H'AD,H'84,H'A8,H'B4,H'8D,H'A4,H'47,H'08,H'3F,H'F0,H'00,H'00,H'00,H'00
             C2DCE68CBC   
             DC8774AD84   
             A8B48DA447   
             083FF00000   
             0000         
    0000068A              __$jetonSP:                      ; static: jetonSP
    0000068A 070018C030             .DATA.B     H'07,H'00,H'18,H'C0,H'30,H'60,H'78,H'F0,H'5D,H'D0,H'8F,H'88,H'87,H'08,H'8F,H'88,
             6078F05DD0 +                       H'5D,H'D0,H'78,H'F0,H'30,H'60,H'18,H'C0,H'07,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             8F8887088F   
             885DD078F0   
             306018C007   
             0000000000   
             0000         
    000006AA              __$jetonSPAlpha:                 ; static: jetonSPAlpha
    000006AA F8FFE03FC0             .DATA.B     H'F8,H'FF,H'E0,H'3F,H'C0,H'1F,H'80,H'0F,H'80,H'0F,H'00,H'07,H'00,H'07,H'00,H'07,
             1F800F800F +                       H'80,H'0F,H'80,H'0F,H'C0,H'1F,H'E0,H'3F,H'F8,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0007000700   
             07800F800F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  109


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             C01FE03FF8   
             FFFFFFFFFF   
             FFFF         
    000006CA              __$fond:                         ; static: fond
    000006CA 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'F8,H'00,H'FF,H'FF,H'FC,H'00,H'7F,H'FF,H'FC,H'00,H'7F,H'FF,H'FF,H'80,H'0F,H'FF,
             0000000000 +                       H'04,H'01,H'00,H'00,H'02,H'00,H'80,H'00,H'02,H'00,H'80,H'00,H'00,H'40,H'10,H'00,
             0000000000 +                       H'02,H'02,H'00,H'00,H'01,H'01,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'20,H'20,H'00,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'FE,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'1F,H'C0,H'00,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,
             00000000F8 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,
             00FFFFFC00 +                       H'01,H'04,H'00,H'00
             7FFFFC007F   
             FFFF800FFF   
             0401000002   
             0080000200   
             8000004010   
             0002020000   
             0101000001   
             0100000020   
             2000010400   
             0000FE0000   
             0082000000   
             1FC0000104   
             0000000000   
             0000820000   
             0000000001   
             0400000000   
             0000008200   
             0000000000   
             0104000000   
             0000000082   
             0000000000   
             0001040000   
             0000000000   
             8200000000   
             0000010400   
             0000000000   
             0082000000   
             0000000104   
             0000         
    0000079E 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,
             8200000000 +                       H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'01,
             0000010400 +                       H'FF,H'FF,H'FE,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'02,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'04,
             0082000000 +                       H'FF,H'FF,H'FC,H'80,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'09,
             0000000104 +                       H'FF,H'FF,H'FE,H'40,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'13,
             0001FFFFFE +                       H'FF,H'FF,H'FF,H'20,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'27,
             0000820000 +                       H'FF,H'FF,H'FF,H'90,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'4F,
             0000000001 +                       H'FF,H'FF,H'FF,H'C8,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'07,H'FF,H'9F,
             0400020000 +                       H'FF,H'FF,H'FF,H'E7,H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'01,H'04,H'00,H'3F,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  110


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0100008200 +                       H'C0,H'00,H'0F,H'F0,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'07,H'FF,H'FF,
             0000000000 +                       H'80,H'00,H'07,H'FF,H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'07,H'FF,H'FF,
             01040004FF +                       H'00,H'00,H'03,H'FF,H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'07,H'FF,H'FE,
             FFFC800082 +                       H'00,H'00,H'01,H'FF
             0000000000   
             0001040009   
             FFFFFE4000   
             8200000000   
             0000010400   
             13FFFFFF20   
             0082000000   
             0000000104   
             0027FFFFFF   
             9000820000   
             0000000001   
             04004FFFFF   
             FFC8008200   
             0000000000   
             FF07FF9FFF   
             FFFFE7FF83   
             FFFFFFFFFF   
             FF0104003F   
             C0000FF000   
             8200000000   
             0000FF07FF   
             FF800007FF   
             FF83FFFFFF   
             FFFFFFFF07   
             FFFF000003   
             FFFF83FFFF   
             FFFFFFFFFF   
             07FFFE0000   
             01FF         
    00000872 FF83FFFFFF             .DATA.B     H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'07,H'FF,H'FC,H'00,H'00,H'00,H'FF,
             FFFFFFFF07 +                       H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'07,H'FF,H'F8,H'00,H'00,H'00,H'7F,
             FFFC000000 +                       H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'07,H'FF,H'F0,H'00,H'00,H'00,H'3F,
             FFFF83FFFF +                       H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             07FFF80000 +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             007FFF83FF +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             FF07FFF000 +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             00003FFF83 +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             FF01040000 +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             8200000000 +                       H'00,H'82,H'00,H'00
             0000010400   
             0000000000   
             0082000000   
             0000000104   
             0000000000   
             0000820000   
             0000000001   
             0400000000   
             0000008200   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  111


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0104000000   
             0000000082   
             0000000000   
             0001040000   
             0000000000   
             8200000000   
             0000010400   
             0000000000   
             0082000000   
             0000000104   
             0000000000   
             0000820000   
             0000000001   
             0400000000   
             0000008200   
             0000000000   
             0104000000   
             0000000082   
             0000         
    00000946 0000000001             .DATA.B     H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,
             0400000000 +                       H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,
             0000008200 +                       H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,
             0104000000 +                       H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'FE,H'00,H'00,H'00,H'82,H'00,H'00,
             0000000082 +                       H'00,H'1F,H'C0,H'00,H'02,H'02,H'00,H'00,H'01,H'01,H'00,H'00,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'20,H'20,H'00,H'04,H'01,H'00,H'00,H'02,H'00,H'80,H'00,H'02,H'00,H'80,H'00,
             0001040000 +                       H'00,H'40,H'10,H'00,H'F8,H'00,H'FF,H'FF,H'FC,H'00,H'7F,H'FF,H'FC,H'00,H'7F,H'FF,
             0000000000 +                       H'FF,H'80,H'0F,H'FF,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             8200000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010400 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0082000000   
             0000000104   
             000000FE00   
             0000820000   
             001FC00002   
             0200000101   
             0000010100   
             0000202000   
             0401000002   
             0080000200   
             8000004010   
             00F800FFFF   
             FC007FFFFC   
             007FFFFF80   
             0FFF000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
    000009FA              __$sol:                          ; static: sol
    000009FA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  112


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,
             FFFFFFFFFF +                       H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,
             FFFFFFFFFF +                       H'60,H'10,H'60,H'10,H'60,H'10,H'60,H'10,H'60,H'10,H'60,H'10,H'60,H'10,H'60,H'10,
             FFFFFFFFFF +                       H'30,H'08,H'30,H'08,H'30,H'08,H'30,H'08,H'30,H'08,H'30,H'08,H'30,H'08,H'30,H'08,
             FFFFC020C0 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             20C020C020 +                       H'18,H'08,H'18,H'08,H'18,H'08,H'18,H'08,H'18,H'08,H'18,H'08,H'18,H'08,H'18,H'08,
             C020C020C0 +                       H'0C,H'04,H'0C,H'04,H'0C,H'04,H'0C,H'04,H'0C,H'04,H'0C,H'04,H'0C,H'04,H'0C,H'04,
             20C020C020 +                       H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,
             C020C020C0 +                       H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,
             20C020C020 +                       H'03,H'01,H'03,H'01,H'03,H'01,H'03,H'01,H'03,H'01,H'03,H'01,H'03,H'01,H'03,H'01
             C020C02060   
             1060106010   
             6010601060   
             1060106010   
             3008300830   
             0830083008   
             3008300830   
             08FFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF180818   
             0818081808   
             1808180818   
             0818080C04   
             0C040C040C   
             040C040C04   
             0C040C0406   
             0206020602   
             0602060206   
             0206020602   
             0602060206   
             0206020602   
             0602060206   
             0203010301   
             0301030103   
             0103010301   
             0301         
    00000ABA              __$jetpackJoyride:               ; static: jetpackJoyride
    00000ABA FE7DFFDFFF             .DATA.B     H'FE,H'7D,H'FF,H'DF,H'FF,H'7E,H'07,H'E0,H'FE,H'0F,H'FE,H'7F,H'FC,H'7F,H'C1,H'F8,
             7E07E0FE0F +                       H'FC,H'FF,H'FF,H'FF,H'FF,H'FF,H'0F,H'F1,H'FF,H'1F,H'FF,H'3F,H'F9,H'FF,H'FC,H'0F,
             FE7FFC7FC1 +                       H'F9,H'FF,H'FF,H'FF,H'FF,H'FF,H'9F,H'FB,H'FF,H'BF,H'FF,H'BF,H'F3,H'FF,H'FF,H'E3,
             F8FCFFFFFF +                       H'FB,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'BF,H'E7,H'FF,H'FF,H'F9,
             FFFF0FF1FF +                       H'FA,H'1E,H'01,H'80,H'07,H'83,H'FC,H'3F,H'83,H'E1,H'8F,H'BF,H'EF,H'FF,H'FF,H'FC,
             1FFF3FF9FF +                       H'FA,H'1C,H'01,H'80,H'07,H'01,H'F8,H'1F,H'01,H'E1,H'87,H'BF,H'CF,H'FF,H'FF,H'FE,
             FC0FF9FFFF +                       H'FA,H'18,H'01,H'80,H'06,H'00,H'F0,H'0E,H'00,H'E1,H'87,H'BF,H'DF,H'FF,H'FF,H'FE,
             FFFFFF9FFB +                       H'FA,H'18,H'01,H'80,H'06,H'00,H'60,H'06,H'00,H'E1,H'87,H'BF,H'DF,H'FF,H'FF,H'FE,
             FFBFFFBFF3 +                       H'FA,H'18,H'7F,H'F8,H'7E,H'18,H'61,H'86,H'1F,H'E1,H'87,H'BF,H'9F,H'FF,H'FF,H'FE,
             FFFFE3FBFF +                       H'FA,H'18,H'7F,H'88,H'7A,H'18,H'61,H'86,H'18,H'21,H'8F,H'BF,H'BF,H'FF,H'FF,H'FE,
             FFFFFFFFFF +                       H'FA,H'18,H'07,H'88,H'7A,H'00,H'61,H'86,H'18,H'20,H'1F,H'3F,H'3F,H'E0,H'7F,H'FE,
             FFFFFFFFBF +                       H'C2,H'18,H'07,H'88,H'7A,H'00,H'E1,H'86,H'18,H'20,H'1E,H'7F,H'7F,H'80,H'0F,H'FE,
             E7FFFFF9FA +                       H'9E,H'18,H'07,H'88,H'7A,H'01,H'E0,H'06,H'18,H'20,H'1E,H'7C,H'7F,H'00,H'01,H'FC,
             1E01800783 +                       H'3E,H'18,H'07,H'88
             FC3F83E18F   
             BFEFFFFFFC   
             FA1C018007   
             01F81F01E1   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  113


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             87BFCFFFFF   
             FEFA180180   
             0600F00E00   
             E187BFDFFF   
             FFFEFA1801   
             8006006006   
             00E187BFDF   
             FFFFFEFA18   
             7FF87E1861   
             861FE187BF   
             9FFFFFFEFA   
             187F887A18   
             618618218F   
             BFBFFFFFFE   
             FA1807887A   
             0061861820   
             1F3F3FE07F   
             FEC2180788   
             7A00E18618   
             201E7F7F80   
             0FFE9E1807   
             887A01E006   
             18201E7C7F   
             0001FC3E18   
             0788         
    00000B8E 7A03E00618             .DATA.B     H'7A,H'03,H'E0,H'06,H'18,H'20,H'1F,H'31,H'FF,H'00,H'00,H'7D,H'7E,H'18,H'7F,H'88,
             201F31FF00 +                       H'7A,H'1F,H'A0,H'06,H'18,H'21,H'8F,H'A7,H'3F,H'07,H'80,H'05,H'FE,H'18,H'7F,H'E8,
             007D7E187F +                       H'7A,H'1E,H'20,H'06,H'1F,H'E1,H'87,H'8D,H'BF,H'80,H'E0,H'05,H'80,H'18,H'01,H'E8,
             887A1FA006 +                       H'7A,H'1E,H'21,H'86,H'00,H'E1,H'87,H'B7,H'3F,H'0F,H'30,H'F5,H'80,H'18,H'01,H'E8,
             18218FA73F +                       H'7A,H'1E,H'21,H'86,H'00,H'E1,H'87,H'FC,H'3E,H'17,H'91,H'05,H'C0,H'3C,H'01,H'E8,
             078005FE18 +                       H'7A,H'1E,H'21,H'87,H'01,H'E1,H'87,H'F0,H'FE,H'13,H'40,H'7D,H'60,H'76,H'01,H'C8,
             7FE87A1E20 +                       H'72,H'1C,H'21,H'87,H'83,H'E1,H'8F,H'01,H'FE,H'13,H'40,H'E9,H'3F,H'E3,H'FF,H'8F,
             061FE1878D +                       H'E3,H'F8,H'3F,H'FE,H'FF,H'BF,H'FE,H'01,H'1E,H'15,H'40,H'6B,H'80,H'00,H'00,H'00,
             BF80E00580 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'0A,H'01,H'0E,H'17,H'44,H'AB,H'FC,H'FD,H'FC,H'3C,
             1801E87A1E +                       H'3E,H'7F,H'0F,H'FF,H'C1,H'FF,H'8F,H'03,H'6E,H'0F,H'82,H'EB,H'F9,H'FF,H'FE,H'7E,
             218600E187 +                       H'7F,H'FF,H'9F,H'FF,H'E3,H'FF,H'CD,H'87,H'26,H'00,H'02,H'7B,H'FB,H'FF,H'FF,H'FF,
             B73F0F30F5 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'ED,H'C7,H'20,H'00,H'0C,H'0B,H'FB,H'FF,H'FF,H'FF,
             801801E87A +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'ED,H'7F,H'84,H'03,H'00,H'0B,H'FA,H'1E,H'07,H'87,
             1E218600E1 +                       H'87,H'81,H'E1,H'80
             87FC3E1791   
             05C03C01E8   
             7A1E218701   
             E187F0FE13   
             407D607601   
             C8721C2187   
             83E18F01FE   
             1340E93FE3   
             FF8FE3F83F   
             FEFFBFFE01   
             1E15406B80   
             0000000000   
             000000000A   
             010E1744AB   
             FCFDFC3C3E   
             7F0FFFC1FF   
             8F036E0F82   
             EBF9FFFE7E   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  114


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             7FFF9FFFE3   
             FFCD872600   
             027BFBFFFF   
             FFFFFFFFFF   
             FFFFEDC720   
             000C0BFBFF   
             FFFFFFFFFF   
             FFFFFFED7F   
             8403000BFA   
             1E07878781   
             E180         
    00000C62 7E01ED5FE4             .DATA.B     H'7E,H'01,H'ED,H'5F,H'E4,H'02,H'FF,H'0B,H'FA,H'1C,H'03,H'87,H'87,H'00,H'E1,H'80,
             02FF0BFA1C +                       H'3C,H'01,H'E5,H'5F,H'FC,H'02,H'00,H'8B,H'FA,H'18,H'01,H'87,H'86,H'00,H'61,H'80,
             03878700E1 +                       H'18,H'01,H'E3,H'5F,H'F6,H'03,H'FF,H'8B,H'FA,H'18,H'01,H'83,H'06,H'00,H'61,H'80,
             803C01E55F +                       H'18,H'01,H'C9,H'DF,H'EE,H'02,H'00,H'93,H'FA,H'18,H'61,H'80,H'06,H'18,H'61,H'86,
             FC02008BFA +                       H'18,H'7F,H'9C,H'7F,H'DF,H'81,H'FF,H'27,H'FA,H'18,H'61,H'C0,H'0E,H'18,H'61,H'86,
             1801878600 +                       H'18,H'7F,H'BF,H'3F,H'BF,H'E0,H'00,H'4F,H'FA,H'18,H'61,H'E0,H'1A,H'00,H'61,H'86,
             61801801E3 +                       H'18,H'07,H'BF,H'BF,H'7F,H'F8,H'00,H'DF,H'82,H'18,H'61,H'F0,H'3A,H'00,H'61,H'86,
             5FF603FF8B +                       H'18,H'07,H'BF,H'BF,H'CF,H'FF,H'FF,H'DF,H'3E,H'18,H'61,H'F8,H'7A,H'01,H'E1,H'86,
             FA18018306 +                       H'18,H'07,H'BF,H'3E,H'47,H'FA,H'1F,H'DF,H'7E,H'18,H'61,H'E8,H'7A,H'00,H'E1,H'86,
             0061801801 +                       H'18,H'07,H'BF,H'7E,H'47,H'F9,H'FF,H'DF,H'FE,H'18,H'61,H'E8,H'7A,H'00,H'61,H'86,
             C9DFEE0200 +                       H'18,H'7F,H'8F,H'7F,H'47,H'F9,H'5F,H'DF,H'FE,H'18,H'61,H'E8,H'7A,H'00,H'61,H'86,
             93FA186180 +                       H'18,H'7F,H'EE,H'7F,H'47,H'FE,H'9E,H'5F,H'80,H'18,H'01,H'E8,H'7A,H'18,H'61,H'80,
             0618618618 +                       H'18,H'01,H'EE,H'FF,H'43,H'F8,H'9E,H'4F,H'80,H'18,H'01,H'E8,H'7A,H'18,H'61,H'80,
             7F9C7FDF81 +                       H'18,H'01,H'EE,H'FF
             FF27FA1861   
             C00E186186   
             187FBF3FBF   
             E0004FFA18   
             61E01A0061   
             861807BFBF   
             7FF800DF82   
             1861F03A00   
             61861807BF   
             BFCFFFFFDF   
             3E1861F87A   
             01E1861807   
             BF3E47FA1F   
             DF7E1861E8   
             7A00E18618   
             07BF7E47F9   
             FFDFFE1861   
             E87A006186   
             187F8F7F47   
             F95FDFFE18   
             61E87A0061   
             86187FEE7F   
             47FE9E5F80   
             1801E87A18   
             61801801EE   
             FF43F89E4F   
             801801E87A   
             1861801801   
             EEFF         
    00000D36 43F99E6FC0             .DATA.B     H'43,H'F9,H'9E,H'6F,H'C0,H'3C,H'03,H'C8,H'7A,H'18,H'61,H'80,H'3C,H'01,H'EE,H'FF,
             3C03C87A18 +                       H'44,H'F9,H'1C,H'27,H'60,H'76,H'07,H'88,H'72,H'18,H'61,H'80,H'76,H'01,H'CE,H'FF,
             61803C01EE +                       H'46,H'FB,H'1C,H'F7,H'3F,H'E3,H'FF,H'0F,H'E3,H'FF,H'FF,H'FF,H'E3,H'FF,H'9C,H'FF,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  115


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FF44F91C27 +                       H'42,H'FE,H'FE,H'97,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'08,H'00,H'3D,H'FF,
             6076078872 +                       H'D3,H'F9,H'FE,H'F7,H'FF,H'FF,H'FF,H'FE,H'7D,H'F7,H'CF,H'FF,H'FF,H'FF,H'FD,H'FF,
             1861807601 +                       H'D3,H'FF,H'FA,H'17,H'FF,H'FF,H'FF,H'FE,H'C7,H'1C,H'6F,H'FF,H'FF,H'FF,H'FD,H'7F,
             CEFF46FB1C +                       H'F7,H'FF,H'E2,H'D7,H'FF,H'FF,H'FF,H'FE,H'82,H'08,H'2F,H'FF,H'FF,H'FF,H'FD,H'3F,
             F73FE3FF0F +                       H'DF,H'FF,H'F3,H'37,H'FF,H'FF,H'FF,H'FE,H'92,H'49,H'2F,H'FF,H'FF,H'FF,H'FD,H'2F,
             E3FFFFFFE3 +                       H'C7,H'FF,H'E1,H'E7,H'FF,H'FF,H'FF,H'FE,H'82,H'48,H'2F,H'FF,H'FF,H'FF,H'FD,H'28,
             FF9CFF42FE +                       H'47,H'AE,H'E4,H'0F,H'FF,H'FF,H'FF,H'FE,H'86,H'08,H'6F,H'FF,H'FF,H'FF,H'FC,H'EB,
             FE97000000 +                       H'50,H'2A,H'CF,H'FF,H'FF,H'FF,H'FF,H'FE,H'9E,H'08,H'2F,H'FF,H'FF,H'FF,H'FC,H'7D,
             0000000000 +                       H'DF,H'AA,H'CF,H'FF,H'FF,H'FF,H'FF,H'FE,H'9E,H'49,H'2F,H'FF,H'FF,H'FF,H'FC,H'47,
             08003DFFD3 +                       H'DF,H'BF,H'CF,H'FF,H'FF,H'FF,H'FF,H'FE,H'9E,H'49,H'2F,H'FF,H'FF,H'FF,H'FD,H'54,
             F9FEF7FFFF +                       H'9F,H'85,H'4F,H'FF
             FFFE7DF7CF   
             FFFFFFFDFF   
             D3FFFA17FF   
             FFFFFEC71C   
             6FFFFFFFFD   
             7FF7FFE2D7   
             FFFFFFFE82   
             082FFFFFFF   
             FD3FDFFFF3   
             37FFFFFFFE   
             92492FFFFF   
             FFFD2FC7FF   
             E1E7FFFFFF   
             FE82482FFF   
             FFFFFD2847   
             AEE40FFFFF   
             FFFE86086F   
             FFFFFFFCEB   
             502ACFFFFF   
             FFFFFE9E08   
             2FFFFFFFFC   
             7DDFAACFFF   
             FFFFFFFE9E   
             492FFFFFFF   
             FC47DFBFCF   
             FFFFFFFFFE   
             9E492FFFFF   
             FFFD549F85   
             4FFF         
    00000E0A FFC00000FF             .DATA.B     H'FF,H'C0,H'00,H'00,H'FF,H'FF,H'E0,H'00,H'00,H'07,H'FD,H'10,H'BF,H'85,H'0F,H'FF,
             FFE0000007 +                       H'FF,H'9F,H'7D,H'F6,H'FF,H'FF,H'F6,H'DF,H'7D,H'F3,H'FD,H'14,H'3F,H'A0,H'0F,H'FF,
             FD10BF850F +                       H'FF,H'A1,H'C7,H'19,H'31,H'9F,H'09,H'20,H'82,H'0B,H'FD,H'14,H'3F,H'A8,H'2F,H'FF,
             FFFF9F7DF6 +                       H'FF,H'A0,H'82,H'09,H'20,H'9E,H'09,H'20,H'82,H'0B,H'FC,H'44,H'3F,H'A0,H'2F,H'FF,
             FFFFF6DF7D +                       H'FF,H'A4,H'92,H'49,H'24,H'9E,H'78,H'24,H'93,H'CB,H'FC,H'05,H'3F,H'AA,H'4F,H'FF,
             F3FD143FA0 +                       H'FF,H'A4,H'82,H'48,H'64,H'9E,H'1C,H'64,H'93,H'CB,H'FC,H'05,H'3F,H'8A,H'0F,H'FF,
             0FFFFFA1C7 +                       H'FF,H'A4,H'86,H'08,H'60,H'9E,H'1C,H'64,H'93,H'CB,H'FC,H'85,H'3F,H'8A,H'4F,H'FF,
             19319F0920 +                       H'FF,H'A4,H'82,H'09,H'20,H'9E,H'78,H'24,H'93,H'CB,H'FC,H'91,H'3F,H'88,H'0F,H'FF,
             820BFD143F +                       H'FF,H'A0,H'92,H'49,H'24,H'82,H'09,H'20,H'83,H'CB,H'FC,H'20,H'3F,H'84,H'0F,H'FF,
             A82FFFFFA0 +                       H'FF,H'A1,H'92,H'49,H'24,H'C3,H'09,H'20,H'83,H'CB,H'FC,H'20,H'3F,H'89,H'0F,H'FF,
             8209209E09 +                       H'FF,H'9F,H'6D,H'B6,H'DB,H'7D,H'F6,H'DF,H'7D,H'B3,H'FC,H'00,H'3F,H'88,H'AF,H'FF
             20820BFC44   
             3FA02FFFFF   
             A49249249E   
             782493CBFC   
             053FAA4FFF   
             FFA4824864   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  116


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             9E1C6493CB   
             FC053F8A0F   
             FFFFA48608   
             609E1C6493   
             CBFC853F8A   
             4FFFFFA482   
             09209E7824   
             93CBFC913F   
             880FFFFFA0   
             9249248209   
             2083CBFC20   
             3F840FFFFF   
             A1924924C3   
             092083CBFC   
             203F890FFF   
             FF9F6DB6DB   
             7DF6DF7DB3   
             FC003F88AF   
             FF           
    00000EBA              __$menu:                         ; static: menu
    00000EBA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'E3,H'E3,H'3E,H'3F,H'31,H'93,H'1F,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'C1,H'C1,H'3C,H'13,H'20,H'92,H'1F,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'C9,H'C9,H'3C,H'91,H'20,H'92,H'7F,H'FF,H'FF,H'FF,H'FF,
             3FFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'C9,H'C1,H'3C,H'90,H'24,H'92,H'3F,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'C1,H'C3,H'3C,H'10,H'24,H'92,H'3F,H'FF,H'FF,H'FF,H'FF,
             FFF3E3E33E +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'C1,H'CF,H'3C,H'12,H'20,H'92,H'7F,H'FF,H'FF,H'FF,H'FF,
             3F31931FFF +                       H'00,H'00,H'00,H'03,H'F0,H'49,H'CF,H'04,H'93,H'20,H'82,H'1F,H'C0,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'01,H'F8,H'49,H'CF,H'84,H'93,H'F0,H'C7,H'1F,H'80,H'00,H'00,H'00,
             FFFFF3C1C1 +                       H'00,H'00,H'00,H'00,H'FF,H'FF,H'FF,H'FF,H'F3,H'FC,H'7F,H'FF,H'00,H'00,H'00,H'00,
             3C1320921F +                       H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFF3C9 +                       H'00,H'00,H'00,H'00
             C93C912092   
             7FFFFFFFFF   
             FFFFFFFFF3   
             C9C13C9024   
             923FFFFFFF   
             FFFFFFFFFF   
             F3C1C33C10   
             24923FFFFF   
             FFFFFFFFFF   
             FFF3C1CF3C   
             1220927FFF   
             FFFFFF0000   
             0003F049CF   
             049320821F   
             C000000000   
             000001F849   
             CF8493F0C7   
             1F80000000   
             00000000FF   
             FFFFFFF3FC   
             7FFF000000   
             0000000000   
             7FFFFFFFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  117


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFE0000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00000F8E 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'F8,
             0000000000 +                       H'01,H'FF,H'FF,H'E0,H'07,H'FF,H'FF,H'80,H'1F,H'FF,H'FE,H'00,H'00,H'40,H'00,H'08,
             0000000000 +                       H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,H'10,H'00,H'02,H'00,H'00,H'40,H'00,H'08,
             0000000000 +                       H'01,H'0C,H'0C,H'20,H'04,H'38,H'70,H'80,H'10,H'00,H'02,H'00,H'00,H'47,H'87,H'88,
             0000000000 +                       H'01,H'12,H'12,H'20,H'04,H'44,H'88,H'80,H'10,H'00,H'02,H'00,H'00,H'4C,H'CC,H'C8,
             0000000000 +                       H'01,H'21,H'21,H'20,H'04,H'48,H'48,H'80,H'10,H'00,H'02,H'00,H'00,H'50,H'78,H'28,
             0000000000 +                       H'01,H'21,H'21,H'20,H'04,H'48,H'48,H'80,H'10,H'10,H'02,H'00,H'00,H'50,H'00,H'28,
             0000000000 +                       H'01,H'21,H'21,H'20,H'04,H'44,H'88,H'80,H'13,H'FF,H'F2,H'00,H'00,H'4F,H'03,H'C8,
             0000000000 +                       H'01,H'21,H'E1,H'20,H'04,H'23,H'10,H'80,H'10,H'10,H'02,H'00,H'00,H'41,H'02,H'08,
             007FFFF801 +                       H'01,H'21,H'21,H'20,H'04,H'18,H'60,H'80,H'10,H'00,H'02,H'00,H'00,H'41,H'02,H'08,
             FFFFE007FF +                       H'01,H'21,H'21,H'20
             FF801FFFFE   
             0000400008   
             0100002004   
             0000801000   
             0200004000   
             08010C0C20   
             0438708010   
             0002000047   
             8788011212   
             2004448880   
             1000020000   
             4CCCC80121   
             2120044848   
             8010000200   
             0050782801   
             2121200448   
             4880101002   
             0000500028   
             0121212004   
             44888013FF   
             F200004F03   
             C80121E120   
             0423108010   
             1002000041   
             0208012121   
             2004186080   
             1000020000   
             4102080121   
             2120         
    00001062 0404808010             .DATA.B     H'04,H'04,H'80,H'80,H'10,H'00,H'42,H'00,H'00,H'41,H'02,H'08,H'01,H'21,H'21,H'20,
             0042000041 +                       H'04,H'04,H'80,H'80,H'13,H'FF,H'F2,H'00,H'00,H'41,H'02,H'08,H'01,H'21,H'21,H'20,
             0208012121 +                       H'04,H'04,H'80,H'80,H'10,H'00,H'42,H'00,H'00,H'41,H'02,H'08,H'01,H'21,H'21,H'20,
             2004048080 +                       H'04,H'04,H'80,H'80,H'10,H'00,H'02,H'00,H'00,H'41,H'02,H'08,H'01,H'3F,H'3F,H'20,
             13FFF20000 +                       H'04,H'04,H'80,H'80,H'11,H'00,H'02,H'00,H'00,H'41,H'02,H'08,H'01,H'1E,H'1E,H'20,
             4102080121 +                       H'04,H'04,H'80,H'80,H'13,H'FF,H'F2,H'00,H'00,H'41,H'86,H'08,H'01,H'0C,H'0C,H'20,
             2120040480 +                       H'04,H'04,H'80,H'80,H'11,H'00,H'02,H'00,H'00,H'40,H'FC,H'08,H'01,H'0C,H'0C,H'20,
             8010004200 +                       H'04,H'04,H'80,H'80,H'10,H'00,H'02,H'00,H'00,H'40,H'00,H'08,H'01,H'0C,H'0C,H'20,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  118


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0041020801 +                       H'04,H'03,H'00,H'80,H'10,H'00,H'02,H'00,H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,
             2121200404 +                       H'04,H'00,H'00,H'80,H'10,H'00,H'02,H'00,H'00,H'7F,H'FF,H'F8,H'01,H'FF,H'FF,H'E0,
             8080100002 +                       H'07,H'FF,H'FF,H'80,H'1F,H'FF,H'FE,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000410208 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             013F3F2004 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0480801100 +                       H'00,H'00,H'00,H'00
             0200004102   
             08011E1E20   
             0404808013   
             FFF2000041   
             8608010C0C   
             2004048080   
             1100020000   
             40FC08010C   
             0C20040480   
             8010000200   
             0040000801   
             0C0C200403   
             0080100002   
             0000400008   
             0100002004   
             0000801000   
             0200007FFF   
             F801FFFFE0   
             07FFFF801F   
             FFFE000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001136 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'F8,H'01,H'FF,H'FF,H'E0,H'07,H'FF,H'FF,H'80,
             0000000000 +                       H'1F,H'FF,H'FE,H'00,H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,
             0000000000 +                       H'10,H'00,H'02,H'00,H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,
             007FFFF801 +                       H'17,H'54,H'AA,H'00,H'00,H'40,H'04,H'08,H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,
             FFFFE007FF +                       H'15,H'56,H'AA,H'00,H'00,H'40,H'04,H'08,H'01,H'00,H'00,H'20,H'04,H'FF,H'FC,H'80,
             FF801FFFFE +                       H'17,H'55,H'AA,H'00,H'00,H'41,H'C4,H'08,H'01,H'00,H'18,H'20,H'04,H'9F,H'E4,H'80,
             0000400008 +                       H'16,H'54,H'82,H'00,H'00,H'43,H'FF,H'08,H'01,H'00,H'18,H'20,H'04,H'5F,H'E8,H'80,
             0100002004 +                       H'15,H'74,H'AA,H'00,H'00,H'42,H'01,H'08,H'01,H'00,H'18,H'20,H'04,H'3F,H'F0,H'80,
             0000801000 +                       H'10,H'00,H'02,H'00,H'00,H'42,H'31,H'08,H'01,H'06,H'18,H'20,H'04,H'0F,H'C0,H'80,
             0200004000 +                       H'10,H'00,H'02,H'00,H'00,H'42,H'49,H'08,H'01,H'06,H'18,H'20,H'04,H'07,H'80,H'80,
             0801000020 +                       H'10,H'03,H'02,H'00,H'00,H'42,H'85,H'08,H'01,H'06,H'1B,H'20,H'04,H'03,H'00,H'80,
             0400008017 +                       H'10,H'03,H'82,H'00,H'00,H'42,H'85,H'08,H'01,H'06,H'1B,H'20,H'04,H'03,H'00,H'80,
             54AA000040 +                       H'11,H'FF,H'C2,H'00
             0408010000   
             2004000080   
             1556AA0000   
             4004080100   
             002004FFFC   
             801755AA00   
             0041C40801   
             001820049F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  119


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             E480165482   
             000043FF08   
             0100182004   
             5FE8801574   
             AA00004201   
             0801001820   
             043FF08010   
             0002000042   
             3108010618   
             20040FC080   
             1000020000   
             4249080106   
             1820040780   
             8010030200   
             0042850801   
             061B200403   
             0080100382   
             0000428508   
             01061B2004   
             03008011FF   
             C200         
    0000120A 0042490801             .DATA.B     H'00,H'42,H'49,H'08,H'01,H'36,H'1B,H'20,H'04,H'03,H'00,H'80,H'11,H'FF,H'E2,H'00,
             361B200403 +                       H'00,H'42,H'31,H'08,H'01,H'36,H'1B,H'20,H'04,H'03,H'00,H'80,H'11,H'FF,H'E2,H'00,
             008011FFE2 +                       H'00,H'42,H'01,H'08,H'01,H'36,H'DB,H'20,H'04,H'0F,H'C0,H'80,H'11,H'FF,H'C2,H'00,
             0000423108 +                       H'00,H'43,H'FF,H'08,H'01,H'3F,H'FF,H'20,H'04,H'38,H'70,H'80,H'10,H'03,H'82,H'00,
             01361B2004 +                       H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,H'04,H'3F,H'F0,H'80,H'10,H'03,H'02,H'00,
             03008011FF +                       H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,H'10,H'00,H'02,H'00,
             E200004201 +                       H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,H'10,H'00,H'02,H'00,
             080136DB20 +                       H'00,H'7F,H'FF,H'F8,H'01,H'FF,H'FF,H'E0,H'07,H'FF,H'FF,H'80,H'1F,H'FF,H'FE,H'00,
             040FC08011 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFC2000043 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FF08013FFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             2004387080   
             1003820000   
             4000080100   
             0020043FF0   
             8010030200   
             0040000801   
             0000200400   
             0080100002   
             0000400008   
             0100002004   
             0000801000   
             0200007FFF   
             F801FFFFE0   
             07FFFF801F   
             FFFE000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00           




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  120


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012BA              __$menuMort:                     ; static: menuMort
    000012BA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,
             FFFFFFFFFF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'3F,H'FC,H'03,H'FF,H'C0,H'00,H'07,
             FFFFFFFFFF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'40,H'02,H'04,H'00,H'20,H'00,H'07,
             FFFFFFFFFF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             FFFFFFFFFF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             FFFFFFFFFF +                       H'E0,H'03,H'8E,H'38,H'E3,H'C0,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             FFFFFFE000 +                       H'E0,H'07,H'DF,H'7D,H'F7,H'C0,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             0000000000 +                       H'E0,H'06,H'18,H'7D,H'B6,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             0000000000 +                       H'E0,H'07,H'98,H'6D,H'F7,H'98,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             00000007E0 +                       H'E0,H'03,H'D8,H'6D,H'E7,H'98,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             0000000000 +                       H'E0,H'00,H'D8,H'7D
             0000003FFC   
             03FFC00007   
             E000000000   
             0000000040   
             0204002000   
             07E0000000   
             0000000000   
             8001080010   
             0007E00000   
             0000000000   
             0080010800   
             100007E003   
             8E38E3C000   
             0000800108   
             00100007E0   
             07DF7DF7C0   
             0000008001   
             0800100007   
             E006187DB6   
             0000000080   
             0108001000   
             07E007986D   
             F798000000   
             8001080010   
             0007E003D8   
             6DE7980000   
             0080010800   
             100007E000   
             D87D         
    0000138E F600000000             .DATA.B     H'F6,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,H'E0,H'07,H'DF,H'7D,
             8001080010 +                       H'B7,H'D8,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,H'E0,H'03,H'8E,H'39,
             0007E007DF +                       H'B3,H'D8,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,H'E0,H'00,H'00,H'00,
             7DB7D80000 +                       H'00,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,H'E0,H'00,H'00,H'00,
             0080010800 +                       H'00,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,H'E0,H'00,H'00,H'00,
             100007E003 +                       H'00,H'00,H'00,H'00,H'00,H'40,H'02,H'04,H'00,H'20,H'00,H'07,H'E0,H'00,H'00,H'00,
             8E39B3D800 +                       H'00,H'00,H'00,H'00,H'00,H'3F,H'FC,H'03,H'FF,H'C0,H'00,H'07,H'E0,H'00,H'00,H'00,
             0000800108 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,
             00100007E0 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'1C,H'CE,H'3B,H'FE,H'E0,H'00,H'07,H'E0,H'00,H'00,H'00,
             0000008001 +                       H'00,H'00,H'00,H'00,H'00,H'21,H'29,H'42,H'09,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,
             0800100007 +                       H'00,H'00,H'00,H'00,H'00,H'21,H'E9,H'43,H'88,H'C0,H'00,H'07,H'E0,H'00,H'00,H'00,
             E000000000 +                       H'00,H'00,H'00,H'00,H'00,H'25,H'29,H'4A,H'08,H'20,H'00,H'07,H'E0,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  121


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000080 +                       H'00,H'00,H'00,H'00
             0108001000   
             07E0000000   
             0000000000   
             4002040020   
             0007E00000   
             0000000000   
             003FFC03FF   
             C00007E000   
             0000000000   
             0000000000   
             00000007E0   
             0000000000   
             0000000000   
             0000000007   
             E000000000   
             000000001C   
             CE3BFEE000   
             07E0000000   
             0000000000   
             2129420900   
             0007E00000   
             0000000000   
             0021E94388   
             C00007E000   
             0000000000   
             000025294A   
             08200007E0   
             0000000000   
             0000         
    00001462 001D2E3BC9             .DATA.B     H'00,H'1D,H'2E,H'3B,H'C9,H'C0,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             C00007E000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,
             0000000000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,
             00000007E0 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             0000000000 +                       H'07,H'07,H'30,H'73,H'33,H'9B,H'3C,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             0000000007 +                       H'0F,H'8F,H'B0,H'FB,H'37,H'DB,H'7C,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             E000000000 +                       H'0D,H'8D,H'B0,H'DB,H'B7,H'DB,H'60,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             00001FFFFF +                       H'0D,H'8F,H'B0,H'DB,H'F6,H'DB,H'78,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             FFFFFFFFFF +                       H'0F,H'8F,H'30,H'FB,H'F6,H'DB,H'78,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             87E0000000 +                       H'0F,H'8C,H'30,H'FB,H'77,H'DB,H'60,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             0000001000 +                       H'ED,H'8C,H'3E,H'DB,H'37,H'DF,H'7C,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'11,
             0000000000 +                       H'ED,H'8C,H'1E,H'DB
             0087E00000   
             0000000010   
             0000000000   
             000087E000   
             0000000000   
             1307073073   
             339B3C87E0   
             0000000000   
             00130F8FB0   
             FB37DB7C87   
             E000000000   
             0000130D8D   
             B0DBB7DB60   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  122


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             87E0000000   
             000000130D   
             8FB0DBF6DB   
             7887E00000   
             0000000013   
             0F8F30FBF6   
             DB7887E000   
             0000000000   
             130F8C30FB   
             77DB6087E0   
             0000000000   
             0013ED8C3E   
             DB37DF7C87   
             E000000000   
             000011ED8C   
             1EDB         
    00001536 33CE3C87E0             .DATA.B     H'33,H'CE,H'3C,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'E0,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,
             0010000000 +                       H'00,H'00,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FF,H'FF,H'FF,
             0000E00087 +                       H'FF,H'FF,H'FF,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             E000000000 +                       H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000100000 +                       H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FF,H'FF,H'FF,
             87E0000000 +                       H'FF,H'FF,H'FF,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,
             0000001FFF +                       H'00,H'00,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'01,H'C7,H'86,H'73,
             FF87E00000 +                       H'67,H'9C,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'EF,H'86,H'FB,
             0000000000 +                       H'6F,H'BE,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'6C,H'06,H'FB,
             0000000000 +                       H'6C,H'36,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'EF,H'06,H'DB,
             000007E000 +                       H'6F,H'3E,H'00,H'87
             0000000000   
             0000000000   
             00000007E0   
             0000000000   
             0000000000   
             0000000007   
             E000000000   
             00001FFFFF   
             FFFFFFFFFF   
             87E0000000   
             0000001000   
             0000000000   
             0087E00000   
             0000000010   
             0000000000   
             000087E000   
             0000000000   
             1001C78673   
             679C0087E0   
             0000000000   
             001003EF86   
             FB6FBE0087   
             E000000000   
             000010036C   
             06FB6C3600   
             87E0000000   
             0000001003   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  123


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             EF06DB6F3E   
             0087         
    0000160A E000000000             .DATA.B     H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'CF,H'06,H'DB,H'6F,H'3C,H'00,H'87,
             00001003CF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'EC,H'06,H'FB,H'6C,H'3E,H'00,H'87,
             06DB6F3C00 +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'6F,H'BE,H'FB,H'EF,H'B6,H'00,H'87,
             87E0000000 +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'67,H'9C,H'71,H'C7,H'B6,H'00,H'87,
             0000001003 +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'87,
             EC06FB6C3E +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'87,
             0087E00000 +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'87,
             0000000010 +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,
             036FBEFBEF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             B60087E000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             0000000000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             1003679C71   
             C7B60087E0   
             0000000000   
             0010000000   
             0000000087   
             E000000000   
             0000100000   
             0000000000   
             87E0000000   
             0000001FFF   
             FFFFFFFFFF   
             FF87E00000   
             0000000000   
             0000000000   
             000007FFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FF           
    000016BA              __$gadgetTop:                    ; static: gadgetTop
    000016BA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'1C,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'F1,H'C6,H'1C,H'70,H'81,H'8C,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFFFFFFFFE +                       H'FF,H'FF,H'FF,H'E0,H'82,H'08,H'20,H'81,H'04,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             001C003FFF +                       H'FF,H'FF,H'FF,H'E7,H'92,H'49,H'E7,H'E7,H'3C,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'E7,H'92,H'49,H'E1,H'E7,H'0C,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'E4,H'82,H'49,H'21,H'E7,H'84,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FC0008001F +                       H'FF,H'FF,H'FF,H'E4,H'82,H'49,H'27,H'E7,H'E4,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'E0,H'92,H'08,H'20,H'E7,H'04,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFF1C61C70 +                       H'00,H'00,H'00,H'F1,H'92,H'1C,H'70,H'E7,H'8C,H'00,H'08,H'00,H'1F,H'00,H'00,H'00,
             818C000800 +                       H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'08,H'00,H'1E,H'00,H'00,H'00,
             1FFFFFFFFF +                       H'00,H'00,H'00,H'3F,H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'08,H'00,H'1C,H'00,H'00,H'00,
             FFFFE08208 +                       H'00,H'00,H'00,H'1F
             2081040008   
             001FFFFFFF   
             FFFFFFE792   
             49E7E73C00   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  124


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             08001FFFFF   
             FFFFFFFFE7   
             9249E1E70C   
             0008001FFF   
             FFFFFFFFFF   
             E4824921E7   
             840008001F   
             FFFFFFFFFF   
             FFE4824927   
             E7E4000800   
             1FFFFFFFFF   
             FFFFE09208   
             20E7040008   
             001FFFFFFF   
             000000F192   
             1C70E78C00   
             08001F0000   
             000000007F   
             FFFFFFFFFC   
             0008001E00   
             0000000000   
             3FFFFFFFFF   
             FC0008001C   
             0000000000   
             001F         
    0000178E FFFFFFFFFC             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'08,H'00,H'18,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0008001800 +                       H'00,H'00,H'00,H'00,H'02,H'00,H'14,H'00,H'20,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'FF,H'E3,H'FF,H'C0,H'00,H'00,H'00
             0000000000   
             0200140020   
             0000000000   
             0000000000   
             0001FFE3FF   
             C0000000     
    000017BA              __$tenuesTop:                    ; static: tenuesTop
    000017BA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'00,H'0F,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'81,H'84,H'C9,H'30,H'C7,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'81,H'04,H'C9,H'20,H'83,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FF000FFFFF +                       H'FF,H'FF,H'FF,H'FF,H'E7,H'3C,H'49,H'27,H'9F,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'E7,H'0C,H'09,H'21,H'87,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'E7,H'0C,H'09,H'21,H'C3,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFE0007FF +                       H'FF,H'FF,H'FF,H'FF,H'E7,H'3C,H'89,H'27,H'F3,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'E7,H'04,H'C8,H'20,H'83,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFF8184C9 +                       H'00,H'00,H'00,H'FF,H'E7,H'84,H'CC,H'70,H'C7,H'FE,H'00,H'07,H'FF,H'00,H'00,H'00,
             30C7FE0007 +                       H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'07,H'FE,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'07,H'FC,H'00,H'00,H'00,
             FFFFFF8104 +                       H'00,H'00,H'00,H'1F
             C92083FE00   
             07FFFFFFFF   
             FFFFFFFFE7   
             3C49279FFE   
             0007FFFFFF   
             FFFFFFFFFF   
             E70C092187   
             FE0007FFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  125


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFFFFFF   
             FFE70C0921   
             C3FE0007FF   
             FFFFFFFFFF   
             FFFFE73C89   
             27F3FE0007   
             FFFFFFFFFF   
             FFFFFFE704   
             C82083FE00   
             07FFFFFFFF   
             000000FFE7   
             84CC70C7FE   
             0007FF0000   
             000000007F   
             FFFFFFFFFF   
             FE0007FE00   
             0000000000   
             3FFFFFFFFF   
             FFFE0007FC   
             0000000000   
             001F         
    0000188E FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'07,H'F8,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FE0007F800 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'08,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'F0,H'00,H'00,H'00,H'00
             0000000000   
             0001000800   
             0000000000   
             0000000000   
             000000FFF0   
             00000000     
    000018BA              __$jetpacksTop:                  ; static: jetpacksTop
    000018BA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F8,H'00,H'7F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'98,H'40,H'C7,H'1C,H'64,H'C7,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'90,H'40,H'82,H'08,H'24,H'83,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFF8007FFF +                       H'FF,H'FF,H'FF,H'FF,H'93,H'F3,H'92,H'49,H'E4,H'9F,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'90,H'F3,H'82,H'49,H'E1,H'87,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'90,H'F3,H'86,H'09,H'E1,H'C3,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFF0003F +                       H'FF,H'FF,H'FF,H'FF,H'93,H'F3,H'9E,H'09,H'E4,H'F3,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FC,H'10,H'73,H'9E,H'48,H'24,H'83,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFF9840C7 +                       H'00,H'00,H'00,H'FE,H'38,H'73,H'9E,H'4C,H'64,H'C7,H'F0,H'00,H'3F,H'00,H'00,H'00,
             1C64C7F000 +                       H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'00,H'3E,H'00,H'00,H'00,
             3FFFFFFFFF +                       H'00,H'00,H'00,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'00,H'3C,H'00,H'00,H'00,
             FFFFFF9040 +                       H'00,H'00,H'00,H'1F
             82082483F0   
             003FFFFFFF   
             FFFFFFFF93   
             F39249E49F   
             F0003FFFFF   
             FFFFFFFFFF   
             90F38249E1   
             87F0003FFF   
             FFFFFFFFFF   
             FF90F38609   
             E1C3F0003F   
             FFFFFFFFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  126


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFF93F39E   
             09E4F3F000   
             3FFFFFFFFF   
             FFFFFC1073   
             9E482483F0   
             003FFFFFFF   
             000000FE38   
             739E4C64C7   
             F0003F0000   
             000000007F   
             FFFFFFFFFF   
             FFF0003E00   
             0000000000   
             3FFFFFFFFF   
             FFFFF0003C   
             0000000000   
             001F         
    0000198E FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'00,H'38,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFF0003800 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'08,H'00,H'40,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'FF,H'80,H'00,H'00,H'00
             0000000000   
             0000080040   
             0000000000   
             0000000000   
             00000007FF   
             80000000     
    000019BA              __$ameliorationsTop:             ; static: ameliorationsTop
    000019BA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'E3,H'93,H'84,H'F3,H'1C,H'71,H'81,H'31,H'99,H'8F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C1,H'01,H'04,H'F2,H'08,H'20,H'81,H'20,H'99,H'07,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C9,H'29,H'3C,H'F2,H'49,H'24,H'E7,H'24,H'89,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C9,H'29,H'0C,H'F2,H'48,H'24,H'E7,H'24,H'81,H'0F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C1,H'29,H'0C,H'F2,H'48,H'60,H'E7,H'24,H'81,H'87,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C1,H'39,H'3C,H'F2,H'48,H'20,H'E7,H'24,H'91,H'E7,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C9,H'39,H'04,H'12,H'09,H'24,H'E7,H'20,H'99,H'07,H'FF,H'FF,H'FF,
             FFE39384F3 +                       H'00,H'00,H'03,H'C9,H'39,H'86,H'13,H'19,H'24,H'E7,H'31,H'99,H'8F,H'80,H'00,H'00,
             1C71813199 +                       H'00,H'00,H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'00,H'00,H'00,
             8FFFFFFFFF +                       H'00,H'00,H'00,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'00,H'00,
             FFFFC10104 +                       H'00,H'00,H'00,H'7F
             F208208120   
             9907FFFFFF   
             FFFFFFC929   
             3CF24924E7   
             24893FFFFF   
             FFFFFFFFC9   
             290CF24824   
             E724810FFF   
             FFFFFFFFFF   
             C1290CF248   
             60E7248187   
             FFFFFFFFFF   
             FFC1393CF2   
             4820E72491   
             E7FFFFFFFF   
             FFFFC93904   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  127


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             120924E720   
             9907FFFFFF   
             000003C939   
             86131924E7   
             31998F8000   
             00000001FF   
             FFFFFFFFFF   
             FFFFFFFF00   
             0000000000   
             FFFFFFFFFF   
             FFFFFFFFFE   
             0000000000   
             007F         
    00001A8E FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFFC00 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00000000     
    00001ABA              __$statistiquesTop:              ; static: statistiquesTop
    00001ABA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FC,H'60,H'63,H'02,H'63,H'02,H'63,H'93,H'0C,H'7F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'F8,H'20,H'41,H'02,H'41,H'02,H'41,H'92,H'08,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'F9,H'F9,H'C9,H'CE,H'4F,H'CE,H'41,H'92,H'79,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'F8,H'79,H'C9,H'CE,H'43,H'CE,H'49,H'92,H'18,H'7F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FC,H'39,H'C1,H'CE,H'61,H'CE,H'49,H'92,H'1C,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'39,H'C1,H'CE,H'79,H'CE,H'41,H'92,H'7F,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'F8,H'39,H'C9,H'CE,H'41,H'CE,H'41,H'82,H'08,H'3F,H'FF,H'FF,H'FF,
             FFFC606302 +                       H'00,H'00,H'03,H'FC,H'79,H'C9,H'CE,H'63,H'CE,H'61,H'C7,H'0C,H'7F,H'80,H'00,H'00,
             630263930C +                       H'00,H'00,H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F8,H'FF,H'FF,H'FF,H'00,H'00,H'00,
             7FFFFFFFFF +                       H'00,H'00,H'00,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'00,H'00,
             FFFFF82041 +                       H'00,H'00,H'00,H'7F
             0241024192   
             083FFFFFFF   
             FFFFFFF9F9   
             C9CE4FCE41   
             9279FFFFFF   
             FFFFFFFFF8   
             79C9CE43CE   
             4992187FFF   
             FFFFFFFFFF   
             FC39C1CE61   
             CE49921C3F   
             FFFFFFFFFF   
             FFFF39C1CE   
             79CE41927F   
             3FFFFFFFFF   
             FFFFF839C9   
             CE41CE4182   
             083FFFFFFF   
             000003FC79   
             C9CE63CE61   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  128


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             C70C7F8000   
             00000001FF   
             FFFFFFFFFF   
             F8FFFFFF00   
             0000000000   
             FFFFFFFFFF   
             FFFFFFFFFE   
             0000000000   
             007F         
    00001B8E FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFFC00 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00000000     
    00001BBA              __$succesTop:                    ; static: succesTop
    00001BBA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'19,H'31,H'C7,H'0C,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'09,H'20,H'82,H'08,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'79,H'27,H'9E,H'79,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'19,H'27,H'9E,H'18,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'09,H'27,H'9E,H'1C,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'C9,H'27,H'9E,H'7F,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'08,H'20,H'82,H'08,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFF19 +                       H'00,H'00,H'00,H'00,H'0F,H'FF,H'1C,H'71,H'C7,H'0C,H'7F,H'F0,H'00,H'00,H'00,H'00,
             31C70C7FFF +                       H'00,H'00,H'00,H'00,H'07,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'E0,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'00,H'03,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'C0,H'00,H'00,H'00,H'00,
             FFFFFFFFFE +                       H'00,H'00,H'00,H'00
             092082083F   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FE79279E79   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFE19279E   
             187FFFFFFF   
             FFFFFFFFFF   
             FFFFFF0927   
             9E1C3FFFFF   
             FFFFFFFFFF   
             FFFFFFFFC9   
             279E7F3FFF   
             FFFFFFFFFF   
             FFFFFFFFFE   
             082082083F   
             FFFFFFFFFF   
             000000000F   
             FF1C71C70C   
             7FF0000000   
             0000000000   
             07FFFFFFFF   
             FFFFE00000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  129


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0003FFFFFF   
             FFFFFFC000   
             0000000000   
             0000         
    00001C8E 01FFFFFFFF             .DATA.B     H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFF800000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00000000     
    00001CBA              __$optionsTop:                   ; static: optionsTop
    00001CBA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F8,H'E3,H'02,H'63,H'33,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'41,H'02,H'41,H'32,H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'49,H'CE,H'41,H'12,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F2,H'41,H'CE,H'49,H'02,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F2,H'43,H'CE,H'49,H'03,H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'4F,H'CE,H'41,H'23,H'CF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'4F,H'CE,H'41,H'32,H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFF8E3 +                       H'00,H'00,H'00,H'00,H'0F,H'F8,H'CF,H'CE,H'63,H'33,H'1F,H'F0,H'00,H'00,H'00,H'00,
             0263331FFF +                       H'00,H'00,H'00,H'00,H'07,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'E0,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'00,H'03,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'C0,H'00,H'00,H'00,H'00,
             FFFFFFFFF0 +                       H'00,H'00,H'00,H'00
             410241320F   
             FFFFFFFFFF   
             FFFFFFFFFF   
             F049CE4112   
             7FFFFFFFFF   
             FFFFFFFFFF   
             FFF241CE49   
             021FFFFFFF   
             FFFFFFFFFF   
             FFFFF243CE   
             49030FFFFF   
             FFFFFFFFFF   
             FFFFFFF04F   
             CE4123CFFF   
             FFFFFFFFFF   
             FFFFFFFFF0   
             4FCE41320F   
             FFFFFFFFFF   
             000000000F   
             F8CFCE6333   
             1FF0000000   
             0000000000   
             07FFFFFFFF   
             FFFFE00000   
             0000000000   
             0003FFFFFF   
             FFFFFFC000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  130


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000         
    00001D8E 01FFFFFFFF             .DATA.B     H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFF800000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00000000     
    00001DBA              __$trophee:                      ; static: trophee
    00001DBA F00FFFFFFF             .DATA.B     H'F0,H'0F,H'FF,H'FF,H'FF,H'FF,H'CF,H'F3,H'6F,H'F6,H'3F,H'FC,H'1F,H'F8,H'07,H'E0,
             FFCFF36FF6 +                       H'03,H'C0,H'03,H'C0,H'03,H'C0,H'07,H'E0,H'1F,H'F8,H'3F,H'FC,H'3F,H'FC,H'3F,H'FC,
             3FFC1FF807 +                       H'F0,H'0F,H'8F,H'F1,H'80,H'01,H'B0,H'0D,H'50,H'0A,H'20,H'04,H'18,H'18,H'04,H'20,
             E003C003C0 +                       H'02,H'40,H'02,H'40,H'02,H'40,H'06,H'60,H'18,H'18,H'23,H'C4,H'20,H'04,H'3F,H'FC
             03C007E01F   
             F83FFC3FFC   
             3FFCF00F8F   
             F18001B00D   
             500A200418   
             1804200240   
             0240024006   
             60181823C4   
             20043FFC     
    00001DFA              __$expand:                       ; static: expand
    00001DFA F870200000             .DATA.B     H'F8,H'70,H'20,H'00,H'00,H'00,H'00,H'00,H'20,H'70,H'F8,H'00,H'00,H'00,H'00,H'00
             0000002070   
             F800000000   
             00           
    00001E0A              __$succes:                       ; static: succes
    00001E0A 8000000000             .DATA.B     H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'BC,H'03,
             0000000000 +                       H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'A3,H'FC,H'40,H'00,
             00000080BC +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'A0,H'00,H'4C,H'CE,H'6D,H'B3,
             03C0000000 +                       H'CE,H'6C,H'0E,H'6C,H'E3,H'8F,H'38,H'80,H'AC,H'03,H'4C,H'DF,H'6D,H'B7,H'DF,H'6C,
             0000000000 +                       H'1F,H'6D,H'F7,H'DF,H'7C,H'80,H'94,H'02,H'8E,H'DB,H'6D,H'B6,H'1B,H'6C,H'18,H'6D,
             000080A3FC +                       H'86,H'18,H'60,H'80,H'88,H'01,H'0F,H'DB,H'6D,H'B7,H'9B,H'6C,H'1E,H'6D,H'86,H'1E,
             4000000000 +                       H'78,H'80,H'86,H'06,H'0F,H'DB,H'6D,H'B7,H'9F,H'6C,H'0F,H'6D,H'86,H'1E,H'3C,H'80,
             0000000000 +                       H'81,H'08,H'0D,H'DB,H'6D,H'B6,H'1F,H'6C,H'03,H'6D,H'86,H'18,H'0C,H'80,H'80,H'90,
             0080A0004C +                       H'0C,H'DF,H'7C,H'E7,H'DB,H'7C,H'1F,H'7D,H'F7,H'DF,H'7C,H'80,H'80,H'90,H'0C,H'CE,
             CE6DB3CE6C +                       H'38,H'43,H'DB,H'38,H'0E,H'38,H'E3,H'8F,H'38,H'80,H'80,H'90,H'00,H'00,H'00,H'00,
             0E6CE38F38 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'81,H'98,H'00,H'00,H'00,H'00,H'00,H'00,
             80AC034CDF +                       H'00,H'00,H'00,H'00,H'01,H'00,H'86,H'06,H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             6DB7DF6C1F +                       H'FF,H'FF,H'FE,H'00,H'88,H'F1,H'10,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             6DF7DF7C80 +                       H'00,H'00,H'88,H'01
             94028EDB6D   
             B61B6C186D   
             8618608088   
             010FDB6DB7   
             9B6C1E6D86   
             1E78808606   
             0FDB6DB79F   
             6C0F6D861E   
             3C8081080D   
             DB6DB61F6C   
             036D86180C   
             8080900CDF   
             7CE7DB7C1F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  131


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             7DF7DF7C80   
             80900CCE38   
             43DB380E38   
             E38F388080   
             9000000000   
             0000000000   
             0000808198   
             0000000000   
             0000000000   
             010086060F   
             FFFFFFFFFF   
             FFFFFFFFFE   
             0088F11000   
             0000000000   
             0000000000   
             8801         
    00001EDE 1000000000             .DATA.B     H'10,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'8F,H'FF,H'10,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'00,H'10,H'00,H'00,H'00,
             00008FFF10 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'40,H'00,H'20,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'3F,H'FF,H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0080001000   
             0000000000   
             0000000000   
             4000200000   
             0000000000   
             000000003F   
             FFC0000000   
             0000000000   
             000000       
    00001F22              __$succesAlpha:                  ; static: succesAlpha
    00001F22 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'80,H'00,H'00,H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             0000000000 +                       H'FF,H'80,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  132


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0080000000   
             0000000000   
             0000000001   
             8000000FFF   
             FFFFFFFFFF   
             FFFFFFFF80   
             0000         
    00001FF6 0FFFFFFFFF             .DATA.B     H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'00,H'00,H'0F,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'00,H'00,H'0F,H'FF,H'FF,H'FF,
             FF8000000F +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'80,H'00,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'C0,H'00,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'80
             8000000FFF   
             FFFFFFFFFF   
             FFFFFFFF80   
             80001FFFFF   
             FFFFFFFFFF   
             FFFFFF80C0   
             003FFFFFFF   
             FFFFFFFFFF   
             FFFF80       
    0000203A              __$sixtyNine:                    ; static: sixtyNine
    0000203A 7C3EFE7FC6             .DATA.B     H'7C,H'3E,H'FE,H'7F,H'C6,H'63,H'C6,H'63,H'C0,H'63,H'C0,H'7F,H'FC,H'3F,H'FE,H'03,
             63C663C063 +                       H'C6,H'03,H'C6,H'63,H'C6,H'63,H'FE,H'7F,H'7C,H'3E,H'00,H'00,H'00,H'00,H'00,H'00
             C07FFC3FFE   
             03C603C663   
             C663FE7F7C   
             3E00000000   
             0000         
    0000205A              __$record:                       ; static: record
    0000205A 71E71C73C6             .DATA.B     H'71,H'E7,H'1C,H'73,H'C6,H'C0,H'FB,H'EF,H'BE,H'FB,H'E6,H'C0,H'DB,H'0C,H'3E,H'DB,
             C0FBEFBEFB +                       H'66,H'C0,H'FB,H'CC,H'36,H'FB,H'66,H'C0,H'F3,H'CC,H'36,H'F3,H'66,H'C0,H'FB,H'0C,
             E6C0DB0C3E +                       H'3E,H'FB,H'60,H'00,H'DB,H'EF,H'BE,H'DB,H'E6,H'C0,H'D9,H'E7,H'1C,H'DB,H'C6,H'C0
             DB66C0FBCC   
             36FB66C0F3   
             CC36F366C0   
             FB0C3EFB60   
             00DBEFBEDB   
             E6C0D9E71C   
             DBC6C0       
    0000208A              __$tirageFinal:                  ; static: tirageFinal
    0000208A FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'00,H'00,H'00,H'00,H'01,H'FF,
             FFFFFFFFFF +                       H'BF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'FF,H'7F,H'FF,H'FF,H'FF,H'FD,H'FF,
             FF80000000 +                       H'A0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'02,H'FF,H'41,H'C0,H'00,H'00,H'05,H'FF,
             0000000000 +                       H'A0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'02,H'FF,H'46,H'30,H'00,H'00,H'05,H'FF,
             FF00000000 +                       H'A0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'02,H'FF,H'4C,H'18,H'00,H'00,H'05,H'FF,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  133


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             01FFBFFFFF +                       H'AF,H'D9,H'C7,H'1C,H'78,H'3D,H'B3,H'39,H'82,H'FF,H'5E,H'3C,H'00,H'00,H'05,H'FF,
             FFFFFFFFFF +                       H'AF,H'DB,H'EF,H'BE,H'F8,H'7D,H'B3,H'7D,H'82,H'FF,H'57,H'74,H'00,H'00,H'05,H'FF,
             FEFF7FFFFF +                       H'A3,H'1B,H'6D,H'B0,H'C0,H'61,H'BB,H'6D,H'82,H'FF,H'63,H'E2,H'00,H'00,H'05,H'FF,
             FFFDFFA000 +                       H'A3,H'1B,H'ED,H'B0,H'F0,H'79,H'BF,H'6D,H'82,H'FF,H'61,H'C2,H'00,H'00,H'05,H'FF,
             0000000000 +                       H'A3,H'1B,H'CF,H'B6,H'F0,H'79,H'BF,H'7D,H'82,H'FF,H'63,H'E2,H'00,H'00,H'05,H'FF,
             0002FF41C0 +                       H'A3,H'1B,H'EF,H'B6,H'C0,H'61,H'B7,H'7D,H'82,H'FF,H'57,H'74,H'00,H'00,H'05,H'FF,
             000005FFA0 +                       H'A3,H'1B,H'6D,H'BE,H'F8,H'61,H'B3,H'6D,H'F2,H'FF,H'5E,H'3C,H'00,H'00,H'05,H'FF,
             0000000000 +                       H'A3,H'1B,H'6D,H'9C
             000002FF46   
             30000005FF   
             A000000000   
             00000002FF   
             4C18000005   
             FFAFD9C71C   
             783DB33982   
             FF5E3C0000   
             05FFAFDBEF   
             BEF87DB37D   
             82FF577400   
             0005FFA31B   
             6DB0C061BB   
             6D82FF63E2   
             000005FFA3   
             1BEDB0F079   
             BF6D82FF61   
             C2000005FF   
             A31BCFB6F0   
             79BF7D82FF   
             63E2000005   
             FFA31BEFB6   
             C061B77D82   
             FF57740000   
             05FFA31B6D   
             BEF861B36D   
             F2FF5E3C00   
             0005FFA31B   
             6D9C         
    0000215E 7861B36CF2             .DATA.B     H'78,H'61,H'B3,H'6C,H'F2,H'FF,H'4C,H'18,H'00,H'00,H'05,H'FF,H'A0,H'00,H'00,H'00,
             FF4C180000 +                       H'00,H'00,H'00,H'00,H'02,H'FF,H'46,H'30,H'00,H'00,H'05,H'FF,H'A0,H'00,H'00,H'00,
             05FFA00000 +                       H'00,H'00,H'00,H'00,H'02,H'FF,H'41,H'C0,H'00,H'00,H'05,H'FF,H'BF,H'FF,H'FF,H'FF,
             0000000000 +                       H'FF,H'FF,H'FF,H'FF,H'FE,H'FF,H'7F,H'FF,H'FF,H'FF,H'FD,H'FF,H'80,H'00,H'00,H'00,
             02FF463000 +                       H'00,H'00,H'00,H'00,H'00,H'FF,H'00,H'00,H'00,H'00,H'01,H'FF,H'FF,H'FF,H'FF,H'FF,
             0005FFA000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             0000000000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'E0,H'00,H'00,H'00,H'07,H'FF,H'80,H'00,H'00,H'80,
             0002FF41C0 +                       H'00,H'00,H'80,H'00,H'00,H'FF,H'EF,H'FF,H'FF,H'FF,H'F7,H'FF,H'BF,H'FF,H'FE,H'BF,
             000005FFBF +                       H'FF,H'FE,H'BF,H'FF,H'FE,H'FF,H'E8,H'00,H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,
             FFFFFFFFFF +                       H'00,H'02,H'A0,H'00,H'02,H'EC,H'E8,H'00,H'00,H'00,H'16,H'07,H'A0,H'00,H'02,H'A0,
             FFFFFEFF7F +                       H'00,H'02,H'A0,H'00,H'02,H'DB,H'68,H'00,H'00,H'00,H'14,H'03,H'A0,H'00,H'02,H'A0,
             FFFFFFFDFF +                       H'00,H'02,H'A0,H'00,H'02,H'80,H'28,H'00,H'00,H'00,H'14,H'93,H'A0,H'00,H'02,H'A0,
             8000000000 +                       H'00,H'02,H'A0,H'00,H'02,H'DB,H'68,H'00,H'00,H'00,H'14,H'93,H'A0,H'00,H'02,H'A0,
             00000000FF +                       H'00,H'02,H'A0,H'00
             0000000001   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  134


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFE00000   
             0007FF8000   
             0080000080   
             0000FFEFFF   
             FFFFF7FFBF   
             FFFEBFFFFE   
             BFFFFEFFE8   
             00000017FF   
             A00002A000   
             02A00002EC   
             E800000016   
             07A00002A0   
             0002A00002   
             DB68000000   
             1403A00002   
             A00002A000   
             0280280000   
             001493A000   
             02A00002A0   
             0002DB6800   
             00001493A0   
             0002A00002   
             A000         
    00002232 02E6E80000             .DATA.B     H'02,H'E6,H'E8,H'00,H'00,H'00,H'14,H'F3,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             0014F3A000 +                       H'02,H'FF,H'E8,H'00,H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             02A00002A0 +                       H'02,H'FF,H'E8,H'00,H'00,H'00,H'14,H'63,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             0002FFE800 +                       H'02,H'F2,H'6B,H'E0,H'00,H'07,H'D4,H'03,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             000017FFA0 +                       H'02,H'F2,H'69,H'C0,H'00,H'03,H'97,H'9F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             0002A00002 +                       H'02,H'FF,H'E8,H'80,H'00,H'01,H'14,H'03,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             A00002FFE8 +                       H'02,H'CF,H'E8,H'00,H'00,H'00,H'14,H'63,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             0000001463 +                       H'02,H'CF,H'E8,H'00,H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             A00002A000 +                       H'02,H'C0,H'28,H'00,H'00,H'00,H'16,H'07,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             02A00002F2 +                       H'02,H'C0,H'28,H'00,H'00,H'00,H'14,H'03,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             6BE00007D4 +                       H'02,H'CF,H'EB,H'E0,H'00,H'07,H'D4,H'93,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             03A00002A0 +                       H'02,H'CF,H'E9,H'C0,H'00,H'03,H'94,H'93,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             0002A00002 +                       H'02,H'FF,H'E8,H'80,H'00,H'01,H'14,H'F3,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             F269C00003 +                       H'02,H'CF,H'E8,H'00
             979FA00002   
             A00002A000   
             02FFE88000   
             011403A000   
             02A00002A0   
             0002CFE800   
             00001463A0   
             0002A00002   
             A00002CFE8   
             00000017FF   
             A00002A000   
             02A00002C0   
             2800000016   
             07A00002A0   
             0002A00002   
             C028000000   
             1403A00002   
             A00002A000   
             02CFEBE000   
             07D493A000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  135


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             02A00002A0   
             0002CFE9C0   
             00039493A0   
             0002A00002   
             A00002FFE8   
             80000114F3   
             A00002A000   
             02A00002CF   
             E800         
    00002306 000017FFA0             .DATA.B     H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C9,H'E8,H'00,
             0002A00002 +                       H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C9,H'E8,H'00,
             A00002C9E8 +                       H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'00,
             00000017FF +                       H'00,H'00,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'E0,H'2B,H'E0,
             A00002A000 +                       H'00,H'07,H'D7,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'FF,H'E9,H'C0,
             02A00002C9 +                       H'00,H'03,H'97,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'80,
             E800000017 +                       H'00,H'01,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'00,
             FFA00002A0 +                       H'00,H'00,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'FF,H'E8,H'00,
             0002A00002 +                       H'00,H'00,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'00,
             C028000000 +                       H'00,H'00,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'00,
             170FA00002 +                       H'00,H'00,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'F9,H'EB,H'E0,
             A00002A000 +                       H'00,H'07,H'D7,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'29,H'C0,
             02E02BE000 +                       H'00,H'03,H'97,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'80,
             07D70FA000 +                       H'00,H'01,H'17,H'0F
             02A00002A0   
             0002FFE9C0   
             0003970FA0   
             0002A00002   
             A00002C028   
             800001170F   
             A00002A000   
             02A00002C0   
             2800000017   
             0FA00002A0   
             0002A00002   
             FFE8000000   
             170FA00002   
             A00002A000   
             02C0280000   
             00170FA000   
             02A00002A0   
             0002C02800   
             0000170FA0   
             0002A00002   
             A00002F9EB   
             E00007D70F   
             A00002A000   
             02A00002C0   
             29C0000397   
             0FA00002A0   
             0002A00002   
             C028800001   
             170F         
    000023DA A00002A000             .DATA.B     H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'FF,H'E8,H'00,H'00,H'00,H'17,H'0F,
             02A00002FF +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'EC,H'68,H'00,H'00,H'00,H'14,H'03,
             E800000017 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C8,H'28,H'00,H'00,H'00,H'16,H'07,
             0FA00002A0 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C9,H'28,H'00,H'00,H'00,H'17,H'0F,
             0002A00002 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C1,H'28,H'00,H'00,H'00,H'17,H'9F,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  136


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             EC68000000 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'E3,H'68,H'00,H'00,H'00,H'17,H'FF,
             1403A00002 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'FF,H'E8,H'00,H'00,H'00,H'17,H'FF,
             A00002A000 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'FF,H'E8,H'00,H'00,H'00,H'17,H'FF,
             02C8280000 +                       H'BF,H'FF,H'FE,H'BF,H'FF,H'FE,H'BF,H'FF,H'FE,H'FF,H'EF,H'FF,H'FF,H'FF,H'F7,H'FF,
             001607A000 +                       H'80,H'00,H'00,H'80,H'00,H'00,H'80,H'00,H'00,H'FF,H'E0,H'00,H'00,H'00,H'07,H'FF,
             02A00002A0 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0002C92800   
             0000170FA0   
             0002A00002   
             A00002C128   
             000000179F   
             A00002A000   
             02A00002E3   
             6800000017   
             FFA00002A0   
             0002A00002   
             FFE8000000   
             17FFA00002   
             A00002A000   
             02FFE80000   
             0017FFBFFF   
             FEBFFFFEBF   
             FFFEFFEFFF   
             FFFFF7FF80   
             0000800000   
             800000FFE0   
             00000007FF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FF           
    0000248A              __$tirageFinalAlpha:             ; static: tirageFinalAlpha
    0000248A 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             00007FFFFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             FFFC000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000007FFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             FFFFFC0000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             000000007F   
             FFFFFFFC00   
             0000000000   
             0000000000   
             7FFFFFFFFC   
             0000000000   
             0000000000   
             007FFFFFFF   
             FC00000000   
             0000000000   
             00007FFFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  137


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFC000000   
             0000000000   
             0000007FFF   
             FFFFFC0000   
             0000000000   
             000000007F   
             FFFFFFFC00   
             0000000000   
             0000000000   
             7FFFFFFFFC   
             0000000000   
             0000000000   
             007FFFFFFF   
             FC00000000   
             0000000000   
             00007FFFFF   
             FFFC000000   
             0000         
    0000255E 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,
             007FFFFFFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,
             FC00000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,
             00007FFFFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFC000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000007FFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFC0000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,
             0000000000 +                       H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,
             000000007F +                       H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,
             FFFFFFFC00 +                       H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,
             0000000000 +                       H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,
             0000000000 +                       H'FF,H'FC,H'1F,H'FF
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000000000   
             001FFFFC1F   
             FFFC1FFFFC   
             0000000000   
             00001FFFFC   
             1FFFFC1FFF   
             FC00000000   
             0000001FFF   
             FC1FFFFC1F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  138


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFF         
    00002632 FC00000000             .DATA.B     H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             0000001FFF +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             FC1FFFFC1F +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             FFFC000000 +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             000000001F +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             FFFC1FFFFC +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             1FFFFC0000 +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             0000000000 +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             1FFFFC1FFF +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             FC1FFFFC00 +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             0000000000 +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             001FFFFC1F +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             FFFC1FFFFC +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             0000000000 +                       H'FC,H'00,H'00,H'00
             00001FFFFC   
             1FFFFC1FFF   
             FC00000000   
             0000001FFF   
             FC1FFFFC1F   
             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFFFC0000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000000000   
             001FFFFC1F   
             FFFC1FFFFC   
             0000000000   
             00001FFFFC   
             1FFFFC1FFF   
             FC00000000   
             0000001FFF   
             FC1FFFFC1F   
             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFFFC0000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000         
    00002706 000000001F             .DATA.B     H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             FFFC1FFFFC +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             1FFFFC0000 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             1FFFFC1FFF +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             FC1FFFFC00 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             001FFFFC1F +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             FFFC1FFFFC +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  139


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             00001FFFFC +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             1FFFFC1FFF +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             FC00000000 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             0000001FFF +                       H'00,H'00,H'00,H'00
             FC1FFFFC1F   
             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFFFC0000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000000000   
             001FFFFC1F   
             FFFC1FFFFC   
             0000000000   
             00001FFFFC   
             1FFFFC1FFF   
             FC00000000   
             0000001FFF   
             FC1FFFFC1F   
             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFFFC0000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000000000   
             001FFFFC1F   
             FFFC1FFFFC   
             0000000000   
             0000         
    000027DA 1FFFFC1FFF             .DATA.B     H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FC1FFFFC00 +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             001FFFFC1F +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFC1FFFFC +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             00001FFFFC +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             1FFFFC1FFF +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FC00000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000001FFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FC1FFFFC1F +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFFFC0000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000000000   
             001FFFFC1F   
             FFFC1FFFFC   
             0000000000   
             00001FFFFC   
             1FFFFC1FFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  140


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FC00000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00           
    0000288A              __$moto:                         ; static: moto
    0000288A 00880003F8             .DATA.B     H'00,H'88,H'00,H'03,H'F8,H'00,H'07,H'F8,H'00,H'0F,H'F0,H'00,H'0F,H'88,H'00,H'0F,
             0007F8000F +                       H'88,H'00,H'0C,H'F8,H'00,H'0C,H'B4,H'00,H'06,H'88,H'00,H'05,H'08,H'00,H'02,H'F7,
             F0000F8800 +                       H'40,H'04,H'0F,H'C0,H'07,H'DF,H'C0,H'FF,H'2F,H'AE,H'9F,H'9F,H'15,H'41,H'CE,H'2F,
             0F88000CF8 +                       H'7F,H'FE,H'3D,H'57,H'FC,H'2B,H'3C,H'00,H'1E,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             000CB40006 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'88,H'00,H'03,H'F8,H'00,H'07,H'F8,
             8800050800 +                       H'00,H'0F,H'F0,H'00,H'0F,H'88,H'00,H'0F,H'88,H'00,H'0C,H'F8,H'00,H'0C,H'B4,H'00,
             02F740040F +                       H'06,H'88,H'00,H'05,H'08,H'00,H'02,H'F7,H'40,H'04,H'0F,H'C0,H'07,H'DF,H'C0,H'FF,
             C007DFC0FF +                       H'2F,H'AE,H'FF,H'9F,H'1F,H'7F,H'CE,H'3F,H'7F,H'FE,H'3F,H'7F,H'FC,H'3F,H'3C,H'00,
             2FAE9F9F15 +                       H'1E,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             41CE2F7FFE   
             3D57FC2B3C   
             001E000000   
             0000000000   
             0000000000   
             0000008800   
             03F80007F8   
             000FF0000F   
             88000F8800   
             0CF8000CB4   
             0006880005   
             080002F740   
             040FC007DF   
             C0FF2FAEFF   
             9F1F7FCE3F   
             7FFE3F7FFC   
             3F3C001E00   
             0000000000   
             0000000000   
             00000000     
    0000291A              __$motoAir:                      ; static: motoAir
    0000291A 0420000FE0             .DATA.B     H'04,H'20,H'00,H'0F,H'E0,H'00,H'1F,H'C0,H'00,H'3F,H'20,H'00,H'3E,H'20,H'00,H'3F,
             001FC0003F +                       H'E0,H'00,H'3A,H'D0,H'00,H'3A,H'20,H'00,H'1E,H'26,H'80,H'0B,H'CF,H'80,H'0D,H'AF,
             20003E2000 +                       H'80,H'02,H'5F,H'80,H'07,H'87,H'5C,H'07,H'9F,H'36,H'7F,H'CF,H'7A,H'CC,H'EE,H'5E,
             3FE0003AD0 +                       H'63,H'FC,H'6A,H'3F,H'C0,H'3C,H'35,H'00,H'00,H'1E,H'00,H'00,H'00,H'00,H'00,H'00,
             003A20001E +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'04,H'20,H'00,H'0F,H'E0,H'00,H'1F,H'C0,
             26800BCF80 +                       H'00,H'3F,H'20,H'00,H'3E,H'20,H'00,H'3F,H'E0,H'00,H'3A,H'D0,H'00,H'3A,H'20,H'00,
             0DAF80025F +                       H'1E,H'26,H'80,H'0B,H'CF,H'80,H'0D,H'AF,H'80,H'02,H'5F,H'80,H'07,H'87,H'5C,H'07,
             8007875C07 +                       H'9E,H'3E,H'7F,H'CF,H'7E,H'FF,H'EE,H'7E,H'7F,H'FC,H'7E,H'3F,H'C0,H'3C,H'3F,H'00,
             9F367FCF7A +                       H'00,H'1E,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             CCEE5E63FC   
             6A3FC03C35   
             00001E0000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  141


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000042000   
             0FE0001FC0   
             003F20003E   
             20003FE000   
             3AD0003A20   
             001E26800B   
             CF800DAF80   
             025F800787   
             5C079E3E7F   
             CF7EFFEE7E   
             7FFC7E3FC0   
             3C3F00001E   
             0000000000   
             0000000000   
             00000000     
    000029AA              __$moto2:                        ; static: moto2
    000029AA 00880003F8             .DATA.B     H'00,H'88,H'00,H'03,H'F8,H'00,H'07,H'F8,H'00,H'0F,H'F0,H'00,H'0F,H'88,H'00,H'0F,
             0007F8000F +                       H'88,H'00,H'0C,H'F8,H'00,H'0C,H'B4,H'00,H'06,H'88,H'00,H'05,H'08,H'00,H'02,H'F7,
             F0000F8800 +                       H'40,H'04,H'0F,H'C0,H'07,H'DF,H'C0,H'FF,H'2F,H'AE,H'9F,H'9F,H'1B,H'41,H'CE,H'3D,
             0F88000CF8 +                       H'7F,H'FE,H'2F,H'6B,H'FC,H'35,H'3C,H'00,H'1E,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             000CB40006 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             8800050800   
             02F740040F   
             C007DFC0FF   
             2FAE9F9F1B   
             41CE3D7FFE   
             2F6BFC353C   
             001E000000   
             0000000000   
             0000000000   
             0000         
    000029F2              __$motoAlpha:                    ; static: motoAlpha
    000029F2 FF77FFFC07             .DATA.B     H'FF,H'77,H'FF,H'FC,H'07,H'FF,H'F8,H'07,H'FF,H'F0,H'0F,H'FF,H'F0,H'07,H'FF,H'F0,
             FFF807FFF0 +                       H'07,H'FF,H'F0,H'07,H'FF,H'F0,H'03,H'FF,H'F8,H'07,H'FF,H'F8,H'07,H'FF,H'FC,H'00,
             0FFFF007FF +                       H'BF,H'F8,H'00,H'3F,H'F8,H'00,H'3F,H'00,H'00,H'51,H'00,H'00,H'E0,H'80,H'01,H'C0,
             F007FFF007 +                       H'80,H'01,H'C0,H'80,H'03,H'C0,H'C7,H'FF,H'E1,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFF003FFF8 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             07FFF807FF   
             FC00BFF800   
             3FF8003F00   
             00510000E0   
             8001C08001   
             C08003C0C7   
             FFE1FFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    00002A3A              __$motoAirAlpha:                 ; static: motoAirAlpha
    00002A3A FBDFFFF01F             .DATA.B     H'FB,H'DF,H'FF,H'F0,H'1F,H'FF,H'E0,H'3F,H'FF,H'C0,H'1F,H'FF,H'C0,H'1F,H'FF,H'C0,
             FFE03FFFC0 +                       H'1F,H'FF,H'C0,H'0F,H'FF,H'C0,H'1F,H'FF,H'E0,H'19,H'7F,H'F0,H'30,H'7F,H'F0,H'10,
             1FFFC01FFF +                       H'7F,H'FC,H'00,H'7F,H'F8,H'00,H'A3,H'F8,H'00,H'C1,H'80,H'00,H'81,H'00,H'01,H'81,
             C01FFFC00F +                       H'80,H'03,H'81,H'C0,H'3F,H'C3,H'C0,H'FF,H'FF,H'E1,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFC01FFFE0 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             197FF0307F   
             F0107FFC00   
             7FF800A3F8   
             00C1800081   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  142


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0001818003   
             81C03FC3C0   
             FFFFE1FFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    00002A82              __$teleporteur1:                 ; static: teleporteur1
    00002A82 81423C7EE7             .DATA.B     H'81,H'42,H'3C,H'7E,H'E7,H'C3,H'81,H'81,H'81,H'81,H'C3,H'E7,H'7E,H'3C,H'42,H'81,
             C381818181 +                       H'81,H'42,H'3C,H'7E,H'EF,H'DF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'7E,H'3C,H'42,H'81
             C3E77E3C42   
             8181423C7E   
             EFDFFFFFFF   
             FFFFFF7E3C   
             4281         
    00002AA2              __$teleporteur2:                 ; static: teleporteur2
    00002AA2 000081423C             .DATA.B     H'00,H'00,H'81,H'42,H'3C,H'7E,H'E7,H'81,H'81,H'E7,H'7E,H'3C,H'42,H'81,H'00,H'00,
             7EE78181E7 +                       H'00,H'00,H'81,H'42,H'3C,H'7E,H'EF,H'DF,H'FF,H'FF,H'7E,H'3C,H'42,H'81,H'00,H'00
             7E3C428100   
             0000008142   
             3C7EEFDFFF   
             FF7E3C4281   
             0000         
    00002AC2              __$teleporteur3:                 ; static: teleporteur3
    00002AC2 0000000081             .DATA.B     H'00,H'00,H'00,H'00,H'81,H'42,H'3C,H'7E,H'81,H'7E,H'3C,H'42,H'81,H'00,H'00,H'00,
             423C7E817E +                       H'00,H'00,H'00,H'00,H'81,H'42,H'3C,H'7E,H'DF,H'7E,H'3C,H'42,H'81,H'00,H'00,H'00
             3C42810000   
             0000000000   
             81423C7EDF   
             7E3C428100   
             0000         
    00002AE2              __$teleporteur1Alpha:            ; static: teleporteur1Alpha
    00002AE2 7EBDC38100             .DATA.B     H'7E,H'BD,H'C3,H'81,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'81,H'C3,H'BD,H'7E
             0000000000   
             000081C3BD   
             7E           
    00002AF2              __$teleporteur2Alpha:            ; static: teleporteur2Alpha
    00002AF2 FFFF7EBDC3             .DATA.B     H'FF,H'FF,H'7E,H'BD,H'C3,H'81,H'00,H'00,H'00,H'00,H'81,H'C3,H'BD,H'7E,H'FF,H'FF
             8100000000   
             81C3BD7EFF   
             FF           
    00002B02              __$teleporteur3Alpha:            ; static: teleporteur3Alpha
    00002B02 FFFFFFFF7E             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'7E,H'BD,H'C3,H'81,H'00,H'81,H'C3,H'BD,H'7E,H'FF,H'FF,H'FF
             BDC3810081   
             C3BD7EFFFF   
             FF           
    00002B12              __$gravitySolUp1:                ; static: gravitySolUp1
    00002B12 FE007F803F             .DATA.B     H'FE,H'00,H'7F,H'80,H'3F,H'E0,H'38,H'10,H'31,H'F0,H'13,H'E0,H'17,H'F0,H'17,H'B0,
             E0381031F0 +                       H'13,H'F8,H'12,H'10,H'0E,H'10,H'05,H'E0,H'04,H'90,H'03,H'D0,H'04,H'A0,H'09,H'20,
             13E017F017 +                       H'0E,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             B013F81210 +                       H'FE,H'00,H'7F,H'80,H'3F,H'E0,H'38,H'10,H'31,H'F0,H'13,H'E0,H'17,H'F0,H'17,H'B0,
             0E1005E004 +                       H'13,H'F8,H'12,H'10,H'0E,H'10,H'07,H'E0,H'07,H'F0,H'03,H'F0,H'07,H'E0,H'0F,H'E0,
             9003D004A0 +                       H'0E,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             09200EE000   
             0000000000   
             0000000000   
             000000FE00   
             7F803FE038   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  143


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             1031F013E0   
             17F017B013   
             F812100E10   
             07E007F003   
             F007E00FE0   
             0EE0000000   
             0000000000   
             0000000000   
             00           
    00002B72              __$gravitySolUp2:                ; static: gravitySolUp2
    00002B72 FE007F803F             .DATA.B     H'FE,H'00,H'7F,H'80,H'3F,H'E0,H'38,H'10,H'31,H'F0,H'13,H'E0,H'17,H'F0,H'17,H'B0,
             E0381031F0 +                       H'13,H'F8,H'12,H'10,H'0E,H'10,H'05,H'E0,H'04,H'90,H'07,H'D0,H'04,H'60,H'03,H'40,
             13E017F017 +                       H'01,H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             B013F81210 +                       H'FE,H'00,H'7F,H'80,H'3F,H'E0,H'38,H'10,H'31,H'F0,H'13,H'E0,H'17,H'F0,H'17,H'B0,
             0E1005E004 +                       H'13,H'F8,H'12,H'10,H'0E,H'10,H'07,H'E0,H'07,H'F0,H'07,H'F0,H'07,H'E0,H'03,H'C0,
             9007D00460 +                       H'01,H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             034001C000   
             0000000000   
             0000000000   
             000000FE00   
             7F803FE038   
             1031F013E0   
             17F017B013   
             F812100E10   
             07E007F007   
             F007E003C0   
             01C0000000   
             0000000000   
             0000000000   
             00           
    00002BD2              __$gravitySolDown1:              ; static: gravitySolDown1
    00002BD2 0EE0092004             .DATA.B     H'0E,H'E0,H'09,H'20,H'04,H'A0,H'03,H'D0,H'04,H'90,H'05,H'E0,H'0E,H'10,H'12,H'10,
             A003D00490 +                       H'13,H'F8,H'17,H'B0,H'17,H'F0,H'13,H'E0,H'31,H'F0,H'38,H'10,H'3F,H'E0,H'7F,H'80,
             05E00E1012 +                       H'FE,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             1013F817B0 +                       H'0E,H'E0,H'0F,H'E0,H'07,H'E0,H'03,H'F0,H'07,H'F0,H'07,H'E0,H'0E,H'10,H'12,H'10,
             17F013E031 +                       H'13,H'F8,H'17,H'B0,H'17,H'F0,H'13,H'E0,H'31,H'F0,H'38,H'10,H'3F,H'E0,H'7F,H'80,
             F038103FE0 +                       H'FE,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             7F80FE0000   
             0000000000   
             0000000000   
             0000000EE0   
             0FE007E003   
             F007F007E0   
             0E10121013   
             F817B017F0   
             13E031F038   
             103FE07F80   
             FE00000000   
             0000000000   
             0000000000   
             00           
    00002C32              __$gravitySolDown2:              ; static: gravitySolDown2
    00002C32 01C0034004             .DATA.B     H'01,H'C0,H'03,H'40,H'04,H'60,H'07,H'D0,H'04,H'90,H'05,H'E0,H'0E,H'10,H'12,H'10,
             6007D00490 +                       H'13,H'F8,H'17,H'B0,H'17,H'F0,H'13,H'E0,H'31,H'F0,H'38,H'10,H'3F,H'E0,H'7F,H'80,
             05E00E1012 +                       H'FE,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             1013F817B0 +                       H'01,H'C0,H'03,H'C0,H'07,H'E0,H'07,H'F0,H'07,H'F0,H'07,H'E0,H'0E,H'10,H'12,H'10,
             17F013E031 +                       H'13,H'F8,H'17,H'B0,H'17,H'F0,H'13,H'E0,H'31,H'F0,H'38,H'10,H'3F,H'E0,H'7F,H'80,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  144


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             F038103FE0 +                       H'FE,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             7F80FE0000   
             0000000000   
             0000000000   
             00000001C0   
             03C007E007   
             F007F007E0   
             0E10121013   
             F817B017F0   
             13E031F038   
             103FE07F80   
             FE00000000   
             0000000000   
             0000000000   
             00           
    00002C92              __$gravitySolUp1Alpha:           ; static: gravitySolUp1Alpha
    00002C92 01FF807FC0             .DATA.B     H'01,H'FF,H'80,H'7F,H'C0,H'1F,H'C0,H'0F,H'C0,H'0F,H'E0,H'1F,H'E0,H'0F,H'E0,H'0F,
             1FC00FC00F +                       H'E0,H'07,H'E0,H'0F,H'F0,H'0F,H'F8,H'1F,H'F8,H'0F,H'FC,H'0F,H'F8,H'1F,H'F0,H'1F,
             E01FE00FE0 +                       H'F1,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0FE007E00F   
             F00FF81FF8   
             0FFC0FF81F   
             F01FF11FFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFF       
    00002CC2              __$gravitySolUp2Alpha:           ; static: gravitySolUp2Alpha
    00002CC2 01FF807FC0             .DATA.B     H'01,H'FF,H'80,H'7F,H'C0,H'1F,H'C0,H'0F,H'C0,H'0F,H'E0,H'1F,H'E0,H'0F,H'E0,H'0F,
             1FC00FC00F +                       H'E0,H'07,H'E0,H'0F,H'F0,H'0F,H'F8,H'1F,H'F8,H'0F,H'F8,H'0F,H'F8,H'1F,H'FC,H'3F,
             E01FE00FE0 +                       H'FE,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0FE007E00F   
             F00FF81FF8   
             0FF80FF81F   
             FC3FFE3FFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFF       
    00002CF2              __$gravitySolDown1Alpha:         ; static: gravitySolDown1Alpha
    00002CF2 F11FF01FF8             .DATA.B     H'F1,H'1F,H'F0,H'1F,H'F8,H'1F,H'FC,H'0F,H'F8,H'0F,H'F8,H'1F,H'F0,H'0F,H'E0,H'0F,
             1FFC0FF80F +                       H'E0,H'07,H'E0,H'0F,H'E0,H'0F,H'E0,H'1F,H'C0,H'0F,H'C0,H'0F,H'C0,H'1F,H'80,H'7F,
             F81FF00FE0 +                       H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0FE007E00F   
             E00FE01FC0   
             0FC00FC01F   
             807F01FFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFF       
    00002D22              __$gravitySolDown2Alpha:         ; static: gravitySolDown2Alpha
    00002D22 FE3FFC3FF8             .DATA.B     H'FE,H'3F,H'FC,H'3F,H'F8,H'1F,H'F8,H'0F,H'F8,H'0F,H'F8,H'1F,H'F0,H'0F,H'E0,H'0F,
             1FF80FF80F +                       H'E0,H'07,H'E0,H'0F,H'E0,H'0F,H'E0,H'1F,H'C0,H'0F,H'C0,H'0F,H'C0,H'1F,H'80,H'7F,
             F81FF00FE0 +                       H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0FE007E00F   
             E00FE01FC0   
             0FC00FC01F   
             807F01FFFF   
             FFFFFFFFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  145


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFFFFFF   
             FFFFFF       
    00002D52              __$bird1:                        ; static: bird1
    00002D52 0078000185             .DATA.B     H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'FE,H'80,H'F4,H'CC,H'40,H'84,H'58,H'20,H'4A,
             000FFE80F4 +                       H'28,H'58,H'29,H'28,H'84,H'7C,H'97,H'02,H'22,H'09,H'01,H'11,H'09,H'FF,H'0E,H'F9,
             CC40845820 +                       H'02,H'04,H'01,H'04,H'03,H'01,H'18,H'00,H'FF,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,
             4A28582928 +                       H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'FE,H'80,H'FC,H'CC,H'40,H'FC,H'58,H'20,H'7A,
             847C970222 +                       H'38,H'58,H'39,H'38,H'84,H'7C,H'9F,H'02,H'3E,H'0F,H'01,H'1F,H'0F,H'FF,H'0F,H'FF,
             09011109FF +                       H'02,H'07,H'FF,H'04,H'03,H'FF,H'18,H'00,H'FF,H'E0,H'00,H'00,H'00,H'00,H'00,H'00
             0EF9020401   
             0403011800   
             FFE0000000   
             0000000078   
             000185000F   
             FE80FCCC40   
             FC58207A38   
             583938847C   
             9F023E0F01   
             1F0FFF0FFF   
             0207FF0403   
             FF1800FFE0   
             0000000000   
             00           
    00002DB2              __$bird2:                        ; static: bird2
    00002DB2 0078000185             .DATA.B     H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'7E,H'80,H'F1,H'4C,H'40,H'81,H'78,H'20,H'41,
             000F7E80F1 +                       H'48,H'58,H'20,H'F8,H'84,H'78,H'07,H'02,H'27,H'F9,H'01,H'12,H'09,H'FF,H'0D,H'F9,
             4C40817820 +                       H'02,H'04,H'01,H'04,H'03,H'01,H'18,H'00,H'FF,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,
             41485820F8 +                       H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'7E,H'80,H'FF,H'4C,H'40,H'FF,H'78,H'20,H'7F,
             8478070227 +                       H'48,H'58,H'3F,H'F8,H'84,H'7F,H'FF,H'02,H'3F,H'FF,H'01,H'1E,H'0F,H'FF,H'0F,H'FF,
             F9011209FF +                       H'02,H'07,H'FF,H'04,H'03,H'FF,H'18,H'00,H'FF,H'E0,H'00,H'00,H'00,H'00,H'00,H'00
             0DF9020401   
             0403011800   
             FFE0000000   
             0000000078   
             000185000F   
             7E80FF4C40   
             FF78207F48   
             583FF8847F   
             FF023FFF01   
             1E0FFF0FFF   
             0207FF0403   
             FF1800FFE0   
             0000000000   
             00           
    00002E12              __$bird3:                        ; static: bird3
    00002E12 0078000185             .DATA.B     H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'7E,H'80,H'F1,H'4C,H'40,H'81,H'78,H'20,H'41,
             000F7E80F1 +                       H'48,H'58,H'20,H'F8,H'84,H'78,H'07,H'02,H'20,H'F9,H'01,H'11,H'09,H'FF,H'0A,H'09,
             4C40817820 +                       H'02,H'0C,H'91,H'04,H'09,H'21,H'18,H'0A,H'3F,H'E0,H'04,H'40,H'00,H'03,H'80,H'00,
             41485820F8 +                       H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'7E,H'80,H'FF,H'4C,H'40,H'FF,H'78,H'20,H'7F,
             8478070220 +                       H'48,H'58,H'3F,H'F8,H'84,H'7F,H'FF,H'02,H'3F,H'FF,H'01,H'1F,H'0F,H'FF,H'0E,H'0F,
             F9011109FF +                       H'02,H'0C,H'9F,H'04,H'09,H'3F,H'18,H'0A,H'3F,H'E0,H'04,H'40,H'00,H'03,H'80,H'00
             0A09020C91   
             040921180A   
             3FE0044000   
             0380000078   
             000185000F   
             7E80FF4C40   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  146


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FF78207F48   
             583FF8847F   
             FF023FFF01   
             1F0FFF0E0F   
             020C9F0409   
             3F180A3FE0   
             0440000380   
             00           
    00002E72              __$bird1Alpha:                   ; static: bird1Alpha
    00002E72 FF87FFFE02             .DATA.B     H'FF,H'87,H'FF,H'FE,H'02,H'FF,H'F0,H'00,H'7F,H'00,H'00,H'3F,H'00,H'00,H'1F,H'80,
             FFF0007F00 +                       H'00,H'07,H'C0,H'00,H'03,H'80,H'00,H'01,H'C0,H'00,H'00,H'E0,H'00,H'00,H'F0,H'00,
             003F00001F +                       H'01,H'F8,H'00,H'03,H'FC,H'00,H'07,H'FF,H'00,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             800007C000   
             03800001C0   
             0000E00000   
             F00001F800   
             03FC0007FF   
             001FFFFFFF   
             FFFFFF       
    00002EA2              __$tank1:                        ; static: tank1
    00002EA2 00180001E7             .DATA.B     H'00,H'18,H'00,H'01,H'E7,H'00,H'02,H'18,H'E0,H'01,H'85,H'F0,H'00,H'63,H'10,H'01,
             000218E001 +                       H'D1,H'08,H'02,H'2A,H'88,H'02,H'46,H'84,H'02,H'8C,H'44,H'01,H'16,H'24,H'02,H'A2,
             85F0006310 +                       H'1C,H'04,H'55,H'04,H'04,H'28,H'C4,H'0A,H'A0,H'24,H'07,H'D0,H'58,H'00,H'6F,H'A0,
             01D108022A +                       H'00,H'90,H'40,H'01,H'60,H'20,H'02,H'57,H'50,H'01,H'88,H'88,H'00,H'77,H'70,H'00,
             8802468402 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'18,H'00,H'01,H'E7,H'00,H'03,H'FF,
             8C44011624 +                       H'E0,H'01,H'FF,H'F0,H'00,H'7F,H'10,H'01,H'FF,H'08,H'03,H'EF,H'88,H'03,H'C7,H'84,
             02A21C0455 +                       H'03,H'8F,H'C4,H'01,H'17,H'E4,H'02,H'A3,H'FC,H'04,H'77,H'FC,H'04,H'3F,H'FC,H'0A,
             040428C40A +                       H'BF,H'FC,H'07,H'FF,H'F8,H'00,H'7F,H'E0,H'00,H'FF,H'C0,H'01,H'7F,H'E0,H'02,H'5F,
             A02407D058 +                       H'D0,H'01,H'88,H'88,H'00,H'77,H'70,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             006FA00090   
             4001602002   
             5750018888   
             0077700000   
             0000000000   
             0000001800   
             01E70003FF   
             E001FFF000   
             7F1001FF08   
             03EF8803C7   
             84038FC401   
             17E402A3FC   
             0477FC043F   
             FC0ABFFC07   
             FFF8007FE0   
             00FFC0017F   
             E0025FD001   
             8888007770   
             0000000000   
             00000000     
    00002F32              __$tank2:                        ; static: tank2
    00002F32 00180001E7             .DATA.B     H'00,H'18,H'00,H'01,H'E7,H'00,H'02,H'18,H'E0,H'01,H'85,H'F0,H'00,H'63,H'10,H'01,
             000218E001 +                       H'D1,H'08,H'02,H'2A,H'88,H'02,H'46,H'84,H'02,H'8C,H'44,H'01,H'16,H'24,H'02,H'A2,
             85F0006310 +                       H'1C,H'04,H'55,H'04,H'04,H'28,H'C4,H'0A,H'A0,H'24,H'07,H'C7,H'D8,H'00,H'7E,H'40,
             01D108022A +                       H'00,H'41,H'20,H'00,H'80,H'D0,H'01,H'5D,H'48,H'02,H'22,H'30,H'01,H'DD,H'C0,H'00,
             8802468402 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'18,H'00,H'01,H'E7,H'00,H'03,H'FF,
             8C44011624 +                       H'E0,H'01,H'FF,H'F0,H'00,H'7F,H'10,H'01,H'FF,H'08,H'03,H'EF,H'88,H'03,H'C7,H'84,
             02A21C0455 +                       H'03,H'8F,H'C4,H'01,H'17,H'E4,H'02,H'A3,H'FC,H'04,H'77,H'FC,H'04,H'3F,H'FC,H'0A,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  147


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             040428C40A +                       H'BF,H'FC,H'07,H'FF,H'D8,H'00,H'7F,H'C0,H'00,H'7F,H'E0,H'00,H'FF,H'D0,H'01,H'7F,
             A02407C7D8 +                       H'48,H'02,H'22,H'30,H'01,H'DD,H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             007E400041   
             200080D001   
             5D48022230   
             01DDC00000   
             0000000000   
             0000001800   
             01E70003FF   
             E001FFF000   
             7F1001FF08   
             03EF8803C7   
             84038FC401   
             17E402A3FC   
             0477FC043F   
             FC0ABFFC07   
             FFD8007FC0   
             007FE000FF   
             D0017F4802   
             223001DDC0   
             0000000000   
             00000000     
    00002FC2              __$tank3:                        ; static: tank3
    00002FC2 00180001E7             .DATA.B     H'00,H'18,H'00,H'01,H'E7,H'00,H'02,H'18,H'E0,H'01,H'85,H'F0,H'00,H'63,H'10,H'01,
             000218E001 +                       H'D1,H'08,H'02,H'2A,H'88,H'02,H'46,H'84,H'5A,H'8C,H'44,H'A5,H'16,H'24,H'80,H'A2,
             85F0006310 +                       H'1C,H'BB,H'54,H'04,H'65,H'1E,H'04,H'A1,H'11,H'84,H'81,H'10,H'78,H'A3,H'18,H'00,
             01D108022A +                       H'4E,H'A8,H'00,H'50,H'40,H'00,H'20,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             880246845A +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'18,H'00,H'01,H'FF,H'00,H'03,H'FF,
             8C44A51624 +                       H'E0,H'01,H'FF,H'F0,H'00,H'7F,H'10,H'01,H'FF,H'08,H'03,H'EF,H'88,H'03,H'C7,H'84,
             80A21CBB54 +                       H'5B,H'8F,H'C4,H'BF,H'17,H'E4,H'9F,H'A3,H'FC,H'BF,H'57,H'FC,H'7F,H'1F,H'FC,H'BF,
             04651E04A1 +                       H'11,H'FC,H'9F,H'10,H'78,H'BF,H'18,H'00,H'5E,H'A8,H'00,H'50,H'40,H'00,H'20,H'00,
             1184811078 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             A318004EA8   
             0050400020   
             0000000000   
             0000000000   
             0000000000   
             0000001800   
             01FF0003FF   
             E001FFF000   
             7F1001FF08   
             03EF8803C7   
             845B8FC4BF   
             17E49FA3FC   
             BF57FC7F1F   
             FCBF11FC9F   
             1078BF1800   
             5EA8005040   
             0020000000   
             0000000000   
             0000000000   
             00000000     
    00003052              __$tank4:                        ; static: tank4
    00003052 00180001E7             .DATA.B     H'00,H'18,H'00,H'01,H'E7,H'00,H'02,H'18,H'E0,H'01,H'85,H'F0,H'00,H'63,H'10,H'01,
             000218E001 +                       H'D1,H'08,H'02,H'2A,H'88,H'02,H'46,H'84,H'5A,H'8C,H'44,H'A5,H'16,H'24,H'80,H'A2,
             85F0006310 +                       H'1C,H'BB,H'54,H'04,H'65,H'1E,H'04,H'A1,H'11,H'84,H'81,H'10,H'78,H'A3,H'18,H'00,
             01D108022A +                       H'4E,H'A8,H'00,H'51,H'50,H'00,H'21,H'50,H'00,H'01,H'10,H'00,H'00,H'A0,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  148


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             880246845A +                       H'A0,H'00,H'00,H'40,H'00,H'00,H'00,H'00,H'00,H'18,H'00,H'01,H'FF,H'00,H'03,H'FF,
             8C44A51624 +                       H'E0,H'01,H'FF,H'F0,H'00,H'7F,H'10,H'01,H'FF,H'08,H'03,H'EF,H'88,H'03,H'C7,H'84,
             80A21CBB54 +                       H'5B,H'8F,H'C4,H'BF,H'17,H'E4,H'9F,H'A3,H'FC,H'BF,H'57,H'FC,H'7F,H'1F,H'FC,H'BF,
             04651E04A1 +                       H'11,H'FC,H'9F,H'10,H'78,H'BF,H'18,H'00,H'5E,H'A8,H'00,H'51,H'50,H'00,H'21,H'50,
             1184811078 +                       H'00,H'01,H'10,H'00,H'00,H'A0,H'00,H'00,H'A0,H'00,H'00,H'40,H'00,H'00,H'00,H'00
             A318004EA8   
             0051500021   
             5000011000   
             00A00000A0   
             0000400000   
             0000001800   
             01FF0003FF   
             E001FFF000   
             7F1001FF08   
             03EF8803C7   
             845B8FC4BF   
             17E49FA3FC   
             BF57FC7F1F   
             FCBF11FC9F   
             1078BF1800   
             5EA8005150   
             0021500001   
             100000A000   
             00A0000040   
             00000000     
    000030E2              __$tank5:                        ; static: tank5
    000030E2 00180001E7             .DATA.B     H'00,H'18,H'00,H'01,H'E7,H'00,H'02,H'18,H'E0,H'01,H'85,H'F0,H'00,H'63,H'10,H'01,
             000218E001 +                       H'D1,H'08,H'02,H'2A,H'88,H'02,H'46,H'84,H'5A,H'8C,H'44,H'A5,H'16,H'24,H'80,H'A2,
             85F0006310 +                       H'1C,H'BB,H'54,H'04,H'65,H'1E,H'04,H'A1,H'11,H'84,H'81,H'10,H'78,H'A3,H'18,H'00,
             01D108022A +                       H'4E,H'A8,H'00,H'52,H'E8,H'00,H'22,H'48,H'00,H'01,H'10,H'00,H'01,H'10,H'00,H'00,
             880246845A +                       H'A0,H'00,H'00,H'40,H'00,H'00,H'00,H'00,H'00,H'18,H'00,H'01,H'FF,H'00,H'03,H'FF,
             8C44A51624 +                       H'E0,H'01,H'FF,H'F0,H'00,H'7F,H'10,H'01,H'FF,H'08,H'03,H'EF,H'88,H'03,H'C7,H'84,
             80A21CBB54 +                       H'5B,H'8F,H'C4,H'BF,H'17,H'E4,H'9F,H'A3,H'FC,H'BF,H'57,H'FC,H'7F,H'1F,H'FC,H'BF,
             04651E04A1 +                       H'11,H'FC,H'9F,H'10,H'78,H'BF,H'18,H'00,H'5E,H'A8,H'00,H'52,H'E8,H'00,H'22,H'48,
             1184811078 +                       H'00,H'01,H'10,H'00,H'01,H'10,H'00,H'00,H'A0,H'00,H'00,H'40,H'00,H'00,H'00,H'00
             A318004EA8   
             0052E80022   
             4800011000   
             01100000A0   
             0000400000   
             0000001800   
             01FF0003FF   
             E001FFF000   
             7F1001FF08   
             03EF8803C7   
             845B8FC4BF   
             17E49FA3FC   
             BF57FC7F1F   
             FCBF11FC9F   
             1078BF1800   
             5EA80052E8   
             0022480001   
             1000011000   
             00A0000040   
             00000000     
    00003172              __$tank1Alpha:                   ; static: tank1Alpha
    00003172 FFE7FFFE00             .DATA.B     H'FF,H'E7,H'FF,H'FE,H'00,H'FF,H'FC,H'00,H'1F,H'FE,H'00,H'0F,H'FF,H'80,H'0F,H'FE,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  149


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFC001FFE +                       H'00,H'07,H'FC,H'00,H'07,H'FC,H'00,H'03,H'FC,H'00,H'03,H'FE,H'00,H'03,H'FC,H'00,
             000FFF800F +                       H'03,H'F8,H'00,H'03,H'F8,H'00,H'03,H'F0,H'00,H'03,H'F8,H'00,H'07,H'FF,H'80,H'1F,
             FE0007FC00 +                       H'FF,H'00,H'3F,H'FE,H'00,H'1F,H'FC,H'00,H'0F,H'FE,H'00,H'07,H'FF,H'88,H'8F,H'FF,
             07FC0003FC +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0003FE0003   
             FC0003F800   
             03F80003F0   
             0003F80007   
             FF801FFF00   
             3FFE001FFC   
             000FFE0007   
             FF888FFFFF   
             FFFFFFFFFF   
             FFFF         
    000031BA              __$tank2Alpha:                   ; static: tank2Alpha
    000031BA FFE7FFFE00             .DATA.B     H'FF,H'E7,H'FF,H'FE,H'00,H'FF,H'FC,H'00,H'1F,H'FE,H'00,H'0F,H'FF,H'80,H'0F,H'FE,
             FFFC001FFE +                       H'00,H'07,H'FC,H'00,H'07,H'FC,H'00,H'03,H'FC,H'00,H'03,H'FE,H'00,H'03,H'FC,H'00,
             000FFF800F +                       H'03,H'F8,H'00,H'03,H'F8,H'00,H'03,H'F0,H'00,H'03,H'F8,H'00,H'27,H'FF,H'80,H'3F,
             FE0007FC00 +                       H'FF,H'80,H'1F,H'FF,H'00,H'0F,H'FE,H'00,H'07,H'FC,H'00,H'0F,H'FE,H'22,H'3F,H'FF,
             07FC0003FC +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0003FE0003   
             FC0003F800   
             03F80003F0   
             0003F80027   
             FF803FFF80   
             1FFF000FFE   
             0007FC000F   
             FE223FFFFF   
             FFFFFFFFFF   
             FFFF         
    00003202              __$tank3Alpha:                   ; static: tank3Alpha
    00003202 FFE7FFFE00             .DATA.B     H'FF,H'E7,H'FF,H'FE,H'00,H'FF,H'FC,H'00,H'1F,H'FE,H'00,H'0F,H'FF,H'80,H'0F,H'FE,
             FFFC001FFE +                       H'00,H'07,H'FC,H'00,H'07,H'FC,H'00,H'03,H'A4,H'00,H'03,H'00,H'00,H'03,H'00,H'00,
             000FFF800F +                       H'03,H'00,H'00,H'03,H'80,H'00,H'03,H'00,H'0E,H'03,H'00,H'0F,H'87,H'00,H'07,H'FF,
             FE0007FC00 +                       H'81,H'17,H'FF,H'8F,H'BF,H'FF,H'DF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             07FC0003A4 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0003000003   
             0000030000   
             0380000300   
             0E03000F87   
             0007FF8117   
             FF8FBFFFDF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    0000324A              __$tank4Alpha:                   ; static: tank4Alpha
    0000324A FFE7FFFE00             .DATA.B     H'FF,H'E7,H'FF,H'FE,H'00,H'FF,H'FC,H'00,H'1F,H'FE,H'00,H'0F,H'FF,H'80,H'0F,H'FE,
             FFFC001FFE +                       H'00,H'07,H'FC,H'00,H'07,H'FC,H'00,H'03,H'A4,H'00,H'03,H'00,H'00,H'03,H'00,H'00,
             000FFF800F +                       H'03,H'00,H'00,H'03,H'80,H'00,H'03,H'00,H'0E,H'03,H'00,H'0F,H'87,H'00,H'07,H'FF,
             FE0007FC00 +                       H'80,H'07,H'FF,H'8E,H'0F,H'FF,H'DE,H'0F,H'FF,H'FE,H'0F,H'FF,H'FF,H'1F,H'FF,H'FF,
             07FC0003A4 +                       H'1F,H'FF,H'FF,H'BF,H'FF,H'FF,H'FF,H'FF
             0003000003   
             0000030000   
             0380000300   
             0E03000F87   
             0007FF8007   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  150


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FF8E0FFFDE   
             0FFFFE0FFF   
             FF1FFFFF1F   
             FFFFBFFFFF   
             FFFF         
    00003292              __$tank5Alpha:                   ; static: tank5Alpha
    00003292 FFE7FFFE00             .DATA.B     H'FF,H'E7,H'FF,H'FE,H'00,H'FF,H'FC,H'00,H'1F,H'FE,H'00,H'0F,H'FF,H'80,H'0F,H'FE,
             FFFC001FFE +                       H'00,H'07,H'FC,H'00,H'07,H'FC,H'00,H'03,H'A4,H'00,H'03,H'00,H'00,H'03,H'00,H'00,
             000FFF800F +                       H'03,H'00,H'00,H'03,H'80,H'00,H'03,H'00,H'0E,H'03,H'00,H'0F,H'87,H'00,H'07,H'FF,
             FE0007FC00 +                       H'80,H'07,H'FF,H'8C,H'07,H'FF,H'DC,H'07,H'FF,H'FE,H'0F,H'FF,H'FE,H'0F,H'FF,H'FF,
             07FC0003A4 +                       H'1F,H'FF,H'FF,H'BF,H'FF,H'FF,H'FF,H'FF
             0003000003   
             0000030000   
             0380000300   
             0E03000F87   
             0007FF8007   
             FF8C07FFDC   
             07FFFE0FFF   
             FE0FFFFF1F   
             FFFFBFFFFF   
             FFFF         
    000032DA              __$dragonMilieu:                 ; static: dragonMilieu
    000032DA FFE0000040             .DATA.B     H'FF,H'E0,H'00,H'00,H'40,H'97,H'80,H'00,H'30,H'88,H'40,H'00,H'0F,H'08,H'20,H'00,
             9780003088 +                       H'10,H'90,H'18,H'40,H'0F,H'20,H'67,H'A0,H'C4,H'93,H'80,H'10,H'3A,H'54,H'40,H'10,
             40000F0820 +                       H'04,H'49,H'A4,H'10,H'8F,H'89,H'9B,H'A0,H'82,H'48,H'00,H'40,H'02,H'48,H'06,H'80,
             0010901840 +                       H'3A,H'A4,H'19,H'00,H'C5,H'53,H'E0,H'00,H'00,H'8C,H'00,H'00,H'01,H'F0,H'00,H'00,
             0F2067A0C4 +                       H'FF,H'E0,H'00,H'00,H'7F,H'97,H'80,H'00,H'3F,H'88,H'40,H'00,H'0F,H'08,H'20,H'00,
             9380103A54 +                       H'1F,H'90,H'18,H'40,H'0F,H'20,H'67,H'A0,H'C7,H'93,H'80,H'10,H'FF,H'D7,H'C0,H'10,
             40100449A4 +                       H'FF,H'CF,H'E4,H'10,H'FF,H'8F,H'FF,H'A0,H'FF,H'CF,H'FF,H'C0,H'FF,H'CF,H'FF,H'80,
             108F899BA0 +                       H'FF,H'E7,H'F9,H'00,H'C5,H'F3,H'E0,H'00,H'00,H'FC,H'00,H'00,H'01,H'F0,H'00,H'00
             8248004002   
             4806803AA4   
             1900C553E0   
             00008C0000   
             01F00000FF   
             E000007F97   
             80003F8840   
             000F082000   
             1F9018400F   
             2067A0C793   
             8010FFD7C0   
             10FFCFE410   
             FF8FFFA0FF   
             CFFFC0FFCF   
             FF80FFE7F9   
             00C5F3E000   
             00FC000001   
             F00000       
    0000335A              __$dragonBas:                    ; static: dragonBas
    0000335A FFE0000040             .DATA.B     H'FF,H'E0,H'00,H'00,H'40,H'90,H'00,H'00,H'30,H'8F,H'80,H'00,H'0F,H'08,H'40,H'00,
             900000308F +                       H'10,H'88,H'20,H'00,H'0F,H'10,H'18,H'40,H'C4,H'A0,H'67,H'A0,H'3A,H'53,H'80,H'10,
             80000F0840 +                       H'04,H'54,H'40,H'10,H'8F,H'88,H'24,H'10,H'82,H'4B,H'5B,H'A0,H'02,H'4B,H'40,H'40,
             0010882000 +                       H'3A,H'A8,H'40,H'00,H'C5,H'54,H'92,H'00,H'00,H'8A,H'6D,H'00,H'01,H'F1,H'01,H'00,
             0F101840C4 +                       H'00,H'00,H'FE,H'00,H'FF,H'E0,H'00,H'00,H'7F,H'90,H'00,H'00,H'3F,H'8F,H'80,H'00,
             A067A03A53 +                       H'0F,H'08,H'40,H'00,H'1F,H'88,H'20,H'00,H'0F,H'10,H'18,H'40,H'C7,H'A0,H'67,H'A0,
             8010045440 +                       H'FB,H'D3,H'80,H'10,H'FF,H'D7,H'C0,H'10,H'FF,H'8F,H'E4,H'10,H'FF,H'CF,H'DB,H'A0,
             108F882410 +                       H'FF,H'CF,H'C0,H'40,H'FF,H'EF,H'C0,H'00,H'C5,H'F7,H'92,H'00,H'00,H'FB,H'FF,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  151


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             824B5BA002 +                       H'01,H'F1,H'FF,H'00,H'00,H'00,H'FE,H'00
             4B40403AA8   
             4000C55492   
             00008A6D00   
             01F1010000   
             00FE00FFE0   
             00007F9000   
             003F8F8000   
             0F0840001F   
             8820000F10   
             1840C7A067   
             A0FBD38010   
             FFD7C010FF   
             8FE410FFCF   
             DBA0FFCFC0   
             40FFEFC000   
             C5F7920000   
             FBFF0001F1   
             FF000000FE   
             00           
    000033E2              __$dragonHaut:                   ; static: dragonHaut
    000033E2 FFE7800040             .DATA.B     H'FF,H'E7,H'80,H'00,H'40,H'98,H'40,H'00,H'30,H'88,H'20,H'00,H'0F,H'10,H'18,H'40,
             9840003088 +                       H'10,H'A0,H'67,H'A0,H'0F,H'13,H'80,H'10,H'C4,H'94,H'40,H'10,H'3A,H'48,H'24,H'10,
             20000F1018 +                       H'04,H'4B,H'1B,H'A0,H'8F,H'8B,H'00,H'40,H'82,H'48,H'06,H'80,H'02,H'44,H'19,H'00,
             4010A067A0 +                       H'3A,H'A3,H'E0,H'00,H'C5,H'52,H'00,H'00,H'00,H'8C,H'00,H'00,H'01,H'F0,H'00,H'00,
             0F138010C4 +                       H'FF,H'E7,H'80,H'00,H'7F,H'98,H'40,H'00,H'3F,H'88,H'20,H'00,H'0F,H'10,H'18,H'40,
             9440103A48 +                       H'1F,H'A0,H'67,H'A0,H'0F,H'13,H'80,H'10,H'C7,H'97,H'C0,H'10,H'FF,H'CF,H'E4,H'10,
             2410044B1B +                       H'FF,H'CF,H'FF,H'A0,H'FF,H'8F,H'FF,H'C0,H'FF,H'CF,H'FF,H'80,H'FF,H'C7,H'F9,H'00,
             A08F8B0040 +                       H'FF,H'E3,H'E0,H'00,H'C5,H'F2,H'00,H'00,H'00,H'FC,H'00,H'00,H'01,H'F0,H'00,H'00
             8248068002   
             4419003AA3   
             E000C55200   
             00008C0000   
             01F00000FF   
             E780007F98   
             40003F8820   
             000F101840   
             1FA067A00F   
             138010C797   
             C010FFCFE4   
             10FFCFFFA0   
             FF8FFFC0FF   
             CFFF80FFC7   
             F900FFE3E0   
             00C5F20000   
             00FC000001   
             F00000       
    00003462              __$dragonMilieuAlpha:            ; static: dragonMilieuAlpha
    00003462 001FFFF080             .DATA.B     H'00,H'1F,H'FF,H'F0,H'80,H'08,H'7F,H'F0,H'C0,H'00,H'3F,H'F0,H'F0,H'00,H'1F,H'F0,
             087FF0C000 +                       H'E0,H'00,H'07,H'B0,H'F0,H'00,H'00,H'10,H'38,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             3FF0F0001F +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'30,H'00,H'00,H'00,H'70,
             F0E00007B0 +                       H'00,H'00,H'06,H'F0,H'3A,H'00,H'1F,H'F0,H'FF,H'03,H'FF,H'F0,H'FE,H'0F,H'FF,H'F0
             F000001038   
             0000000000   
             0000000000   
             0000000010   
             0000003000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  152


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000700000   
             06F03A001F   
             F0FF03FFF0   
             FE0FFFF0     
    000034A2              __$dragonBasAlpha:               ; static: dragonBasAlpha
    000034A2 001FFFF080             .DATA.B     H'00,H'1F,H'FF,H'F0,H'80,H'0F,H'FF,H'F0,H'C0,H'00,H'7F,H'F0,H'F0,H'00,H'3F,H'F0,
             0FFFF0C000 +                       H'E0,H'00,H'1F,H'F0,H'F0,H'00,H'07,H'B0,H'38,H'00,H'00,H'10,H'00,H'00,H'00,H'00,
             7FF0F0003F +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'24,H'10,H'00,H'00,H'3F,H'B0,
             F0E0001FF0 +                       H'00,H'00,H'3F,H'F0,H'3A,H'08,H'6D,H'F0,H'FF,H'04,H'00,H'F0,H'FE,H'0E,H'00,H'F0,
             F00007B038 +                       H'FF,H'FF,H'01,H'F0
             0000100000   
             0000000000   
             0000000000   
             0000241000   
             003FB00000   
             3FF03A086D   
             F0FF0400F0   
             FE0E00F0FF   
             FF01F0       
    000034E6              __$dragonHautAlpha:              ; static: dragonHautAlpha
    000034E6 00187FF080             .DATA.B     H'00,H'18,H'7F,H'F0,H'80,H'00,H'3F,H'F0,H'C0,H'00,H'1F,H'F0,H'F0,H'00,H'07,H'B0,
             003FF0C000 +                       H'E0,H'00,H'00,H'10,H'F0,H'00,H'00,H'00,H'38,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             1FF0F00007 +                       H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'30,H'00,H'00,H'00,H'70,H'00,H'00,H'06,H'F0,
             B0E0000010 +                       H'00,H'00,H'1F,H'F0,H'3A,H'01,H'FF,H'F0,H'FF,H'03,H'FF,H'F0,H'FE,H'0F,H'FF,H'F0
             F000000038   
             0000000000   
             0000000000   
             1000000030   
             0000007000   
             0006F00000   
             1FF03A01FF   
             F0FF03FFF0   
             FE0FFFF0     
    00003526              __$glace:                        ; static: glace
    00003526 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'03,H'C0,H'0C,H'30,H'10,H'08,H'20,H'78,H'39,H'84,
             0003C00C30 +                       H'46,H'04,H'41,H'04,H'41,H'12,H'92,H'82,H'84,H'41,H'84,H'41,H'78,H'3E,H'07,H'C0,
             1008207839 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0F,H'F0,H'10,H'08,H'22,H'78,H'39,H'84,
             8446044104 +                       H'46,H'04,H'41,H'04,H'49,H'12,H'92,H'92,H'84,H'41,H'84,H'41,H'78,H'3E,H'07,H'C0,
             4112928284 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'F0,H'22,H'08,H'39,H'F4,
             418441783E +                       H'46,H'04,H'41,H'04,H'49,H'12,H'92,H'92,H'E4,H'49,H'84,H'45,H'79,H'3E,H'07,H'C0,
             07C0000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'38,H'3F,H'C4,
             0000000000 +                       H'66,H'AC,H'51,H'24,H'49,H'12,H'92,H'92,H'E4,H'49,H'86,H'45,H'79,H'3E,H'07,H'C0
             0FF0100822   
             7839844604   
             4104491292   
             9284418441   
             783E07C000   
             0000000000   
             000000001F   
             F0220839F4   
             4604410449   
             129292E449   
             8445793E07   
             C000000000   
             0000000000   
             0000000038   
             3FC466AC51   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  153


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2449129292   
             E449864579   
             3E07C0       
    000035A6              __$glaceAlpha:                   ; static: glaceAlpha
    000035A6 FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'1F,H'F0,H'0F,H'E0,H'07,H'C0,H'07,H'C0,H'03,
             FFFC1FF00F +                       H'80,H'03,H'80,H'03,H'80,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'80,H'01,H'F8,H'3F,
             E007C007C0 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'0F,H'E0,H'07,H'C0,H'07,H'C0,H'03,
             0380038003 +                       H'80,H'03,H'80,H'03,H'80,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'80,H'01,H'F8,H'3F,
             8001000100 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'E0,H'0F,H'C0,H'07,H'C0,H'03,
             0000008001 +                       H'80,H'03,H'80,H'03,H'80,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'80,H'01,H'F8,H'3F,
             F83FFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'C7,H'C0,H'03,
             FFFFFFFFFF +                       H'80,H'03,H'80,H'03,H'80,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'80,H'01,H'F8,H'3F
             F00FE007C0   
             07C0038003   
             8003800100   
             0100000000   
             8001F83FFF   
             FFFFFFFFFF   
             FFFFFFFFE0   
             0FC007C003   
             8003800380   
             0100010000   
             00008001F8   
             3FFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFC7   
             C003800380   
             0380010001   
             0000000080   
             01F83F       
    00003626              __$gadgets:                      ; static: gadgets
    00003626 7FFE800180             .DATA.B     H'7F,H'FE,H'80,H'01,H'80,H'01,H'8E,H'01,H'9A,H'01,H'9F,H'81,H'91,H'41,H'9E,H'A1,
             018E019A01 +                       H'90,H'51,H'90,H'29,H'90,H'09,H'8F,H'F1,H'80,H'01,H'80,H'01,H'80,H'01,H'7F,H'FE,
             9F8191419E +                       H'7F,H'FE,H'80,H'01,H'87,H'E1,H'88,H'11,H'92,H'09,H'A6,H'05,H'A0,H'05,H'A0,H'FD,
             A190519029 +                       H'BF,H'05,H'A0,H'05,H'A0,H'05,H'90,H'09,H'88,H'11,H'87,H'E1,H'80,H'01,H'7F,H'FE,
             90098FF180 +                       H'7F,H'FE,H'80,H'01,H'87,H'E1,H'88,H'11,H'97,H'E9,H'90,H'09,H'B2,H'2D,H'B1,H'4D,
             0180018001 +                       H'B0,H'8D,H'B2,H'2D,H'91,H'49,H'90,H'89,H'88,H'11,H'87,H'E1,H'80,H'01,H'7F,H'FE,
             7FFE7FFE80 +                       H'7F,H'FE,H'80,H'01,H'80,H'01,H'80,H'C1,H'8F,H'E1,H'9C,H'11,H'B4,H'19,H'A4,H'DD,
             0187E18811 +                       H'B4,H'19,H'9C,H'11,H'8F,H'E1,H'80,H'C1,H'80,H'01,H'80,H'01,H'80,H'01,H'7F,H'FE,
             9209A605A0 +                       H'7F,H'FE,H'80,H'01,H'80,H'01,H'87,H'E1,H'8C,H'31,H'9E,H'79,H'97,H'E9,H'93,H'C9,
             05A0FDBF05 +                       H'93,H'C9,H'97,H'E9,H'9E,H'79,H'8C,H'31,H'87,H'E1,H'80,H'01,H'80,H'01,H'7F,H'FE,
             A005A00590 +                       H'7F,H'FE,H'80,H'01,H'83,H'01,H'8C,H'81,H'91,H'41,H'AD,H'21,H'A2,H'21,H'A1,H'D1,
             09881187E1 +                       H'A2,H'11,H'A5,H'11,H'A4,H'89,H'A4,H'89,H'9C,H'79,H'83,H'81,H'80,H'01,H'7F,H'FE,
             80017FFE7F +                       H'7F,H'FE,H'80,H'01,H'80,H'01,H'87,H'E1,H'8A,H'51,H'94,H'29,H'9B,H'D9,H'93,H'49,
             FE800187E1 +                       H'93,H'C9,H'9B,H'D9
             881197E990   
             09B22DB14D   
             B08DB22D91   
             4990898811   
             87E180017F   
             FE7FFE8001   
             800180C18F   
             E19C11B419   
             A4DDB4199C   
             118FE180C1   
             8001800180   
             017FFE7FFE   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  154


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             8001800187   
             E18C319E79   
             97E993C993   
             C997E99E79   
             8C3187E180   
             0180017FFE   
             7FFE800183   
             018C819141   
             AD21A221A1   
             D1A211A511   
             A489A4899C   
             7983818001   
             7FFE7FFE80   
             01800187E1   
             8A5194299B   
             D9934993C9   
             9BD9         
    000036FA 94298A5187             .DATA.B     H'94,H'29,H'8A,H'51,H'87,H'E1,H'80,H'01,H'80,H'01,H'7F,H'FE,H'7F,H'FE,H'80,H'01,
             E180018001 +                       H'80,H'01,H'87,H'E1,H'88,H'11,H'92,H'49,H'96,H'69,H'96,H'69,H'96,H'69,H'97,H'E9,
             7FFE7FFE80 +                       H'93,H'C9,H'88,H'11,H'87,H'E1,H'80,H'01,H'80,H'01,H'7F,H'FE,H'7F,H'FE,H'80,H'01,
             01800187E1 +                       H'8F,H'F1,H'90,H'49,H'AE,H'05,H'BB,H'75,H'B1,H'DD,H'BB,H'AD,H'AE,H'DD,H'A7,H'75,
             8811924996 +                       H'AD,H'85,H'A8,H'B5,H'9D,H'89,H'8F,H'F1,H'80,H'01,H'7F,H'FE,H'7F,H'FE,H'80,H'01,
             6996699669 +                       H'80,H'01,H'8E,H'71,H'92,H'49,H'92,H'49,H'A4,H'25,H'BC,H'3D,H'BC,H'3D,H'BC,H'3D,
             97E993C988 +                       H'BE,H'7D,H'9F,H'F9,H'8F,H'F1,H'87,H'E1,H'80,H'01,H'7F,H'FE,H'7F,H'FE,H'80,H'01,
             1187E18001 +                       H'80,H'01,H'87,H'E1,H'88,H'91,H'91,H'C9,H'92,H'09,H'93,H'09,H'90,H'C9,H'90,H'49,
             80017FFE7F +                       H'93,H'89,H'89,H'11,H'87,H'E1,H'80,H'01,H'80,H'01,H'7F,H'FE,H'7F,H'FE,H'80,H'01,
             FE80018FF1 +                       H'80,H'01,H'80,H'01,H'80,H'79,H'80,H'C5,H'95,H'55,H'83,H'55,H'A5,H'55,H'80,H'C5,
             9049AE05BB +                       H'80,H'79,H'80,H'01,H'80,H'01,H'80,H'01,H'80,H'01,H'7F,H'FE
             75B1DDBBAD   
             AEDDA775AD   
             85A8B59D89   
             8FF180017F   
             FE7FFE8001   
             80018E7192   
             499249A425   
             BC3DBC3DBC   
             3DBE7D9FF9   
             8FF187E180   
             017FFE7FFE   
             8001800187   
             E1889191C9   
             9209930990   
             C990499389   
             891187E180   
             0180017FFE   
             7FFE800180   
             0180018079   
             80C5955583   
             55A55580C5   
             8079800180   
             0180018001   
             7FFE         
    000037A6              __$levier:                       ; static: levier
    000037A6 07E01C3830             .DATA.B     H'07,H'E0,H'1C,H'38,H'30,H'0C,H'20,H'04,H'66,H'06,H'44,H'02,H'40,H'02,H'40,H'02,
             0C20046606 +                       H'C0,H'03,H'E0,H'07,H'E0,H'07,H'F0,H'0F,H'FC,H'3F,H'E7,H'E7,H'E3,H'C7,H'FF,H'FF,
             4402400240 +                       H'F3,H'CF,H'F3,H'CF,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,
             02C003E007 +                       H'F0,H'0F,H'F0,H'0F,H'FF,H'FF,H'E0,H'07,H'E0,H'07,H'E0,H'07,H'E0,H'07,H'C0,H'03,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  155


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             E007F00FFC +                       H'C0,H'03,H'C0,H'03,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'3F,H'F0,H'0F,H'E0,H'07,
             3FE7E7E3C7 +                       H'E6,H'07,H'C4,H'03,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'E0,H'07,H'E0,H'07,H'F0,H'0F,
             FFFFF3CFF3 +                       H'FC,H'3F,H'F7,H'EF,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'FF,H'FF,
             CFF00FF00F +                       H'E0,H'07,H'E0,H'07,H'E0,H'07,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'FF,H'FF,H'FF,H'FF
             F00FF00FF0   
             0FF00FF00F   
             F00FFFFFE0   
             07E007E007   
             E007C003C0   
             03C003FFFF   
             FFFFFFFFFC   
             3FF00FE007   
             E607C403C0   
             03C003C003   
             E007E007F0   
             0FFC3FF7EF   
             F00FF00FF0   
             0FF00FF00F   
             FFFFE007E0   
             07E007C003   
             C003C003FF   
             FFFFFF       
    00003826 0000001001             .DATAB.B    16,0
             00           
    00003836 FFFFFFFFC0             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'E0,H'07,H'E0,H'07,H'E7,H'E7,
             03C003C003 +                       H'FC,H'3F,H'F0,H'0F,H'E0,H'07,H'E6,H'07,H'C4,H'03,H'C0,H'03,H'C0,H'03,H'C0,H'03,
             E007E007E7 +                       H'E0,H'07,H'E0,H'07,H'F0,H'0F,H'FC,H'3F,H'E7,H'E7,H'E0,H'07,H'E0,H'07,H'C0,H'03,
             E7FC3FF00F +                       H'C0,H'03,H'C0,H'03,H'FF,H'FF,H'FF,H'FF
             E007E607C4   
             03C003C003   
             C003E007E0   
             07F00FFC3F   
             E7E7E007E0   
             07C003C003   
             C003FFFFFF   
             FF           
    0000386E 0000001001             .DATAB.B    16,0
             00           
    0000387E FFFFFFFFC0             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'E0,H'07,H'E0,H'07,H'E0,H'07,
             03C003C003 +                       H'FF,H'FF,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F7,H'EF,H'FC,H'3F,
             E007E007E0 +                       H'F0,H'0F,H'E0,H'07,H'E6,H'07,H'C4,H'03,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'E0,H'07,
             07FFFFF00F +                       H'E0,H'07,H'F0,H'0F,H'FC,H'3F,H'FF,H'FF
             F00FF00FF0   
             0FF00FF7EF   
             FC3FF00FE0   
             07E607C403   
             C003C003C0   
             03E007E007   
             F00FFC3FFF   
             FF           
    000038B6 0000001001             .DATAB.B    16,0
             00           
    000038C6 FFFFFFFFC0             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'E0,H'07,H'E0,H'07,H'E0,H'07,
             03C003C003 +                       H'E0,H'07,H'FF,H'FF,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,
             E007E007E0 +                       H'F0,H'0F,H'F0,H'0F,H'F3,H'CF,H'F3,H'CF,H'FF,H'FF,H'E3,H'C7,H'E7,H'E7,H'FC,H'3F,
             07E007FFFF +                       H'F0,H'0F,H'E0,H'07,H'E6,H'07,H'C4,H'03,H'40,H'02,H'40,H'02,H'40,H'02,H'60,H'06,
             F00FF00FF0 +                       H'20,H'04,H'30,H'0C,H'1C,H'38,H'07,H'E0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  156


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0FF00FF00F   
             F00FF00FF0   
             0FF3CFF3CF   
             FFFFE3C7E7   
             E7FC3FF00F   
             E007E607C4   
             0340024002   
             4002600620   
             04300C1C38   
             07E0         
    0000390E              __$lotsTirage:                   ; static: lotsTirage
    0000390E 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'03,
             0000000000 +                       H'C0,H'00,H'04,H'20,H'00,H'05,H'20,H'00,H'04,H'20,H'00,H'04,H'20,H'00,H'03,H'C0,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             03C0000420 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'03,H'C0,H'00,H'04,H'20,H'00,H'05,
             0005200004 +                       H'20,H'00,H'04,H'20,H'00,H'04,H'20,H'00,H'03,H'C0,H'00,H'00,H'00,H'00,H'1E,H'3C,
             2000042000 +                       H'00,H'21,H'42,H'00,H'29,H'52,H'00,H'21,H'42,H'00,H'21,H'42,H'00,H'1E,H'3C,H'00,
             03C0000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0F,H'3C,H'00,H'1E,
             0000000000 +                       H'C2,H'00,H'21,H'D2,H'00,H'29,H'7A,H'00,H'21,H'86,H'00,H'2F,H'A4,H'00,H'10,H'84,
             0000000000 +                       H'00,H'34,H'86,H'00,H'50,H'FE,H'00,H'50,H'A1,H'00,H'4F,H'29,H'00,H'42,H'21,H'00,
             0000000000 +                       H'3D,H'E1,H'00,H'00,H'1E,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'07,H'00,H'00,H'28,H'00,H'00,H'70,H'00,H'00,H'B8,H'00,H'01,H'70,
             000003C000 +                       H'00,H'03,H'E0,H'00,H'07,H'C0,H'00,H'0F,H'80,H'00,H'1F,H'00,H'00,H'3E,H'00,H'00,
             0420000520 +                       H'7C,H'00,H'00,H'38,H'00,H'00,H'10,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0004200004 +                       H'60,H'00,H'00,H'80
             200003C000   
             0000001E3C   
             0021420029   
             5200214200   
             2142001E3C   
             0000000000   
             0000000000   
             0000000F3C   
             001EC20021   
             D200297A00   
             2186002FA4   
             0010840034   
             860050FE00   
             50A1004F29   
             004221003D   
             E100001E00   
             0000000000   
             0000000000   
             0000000700   
             0028000070   
             0000B80001   
             700003E000   
             07C0000F80   
             001F00003E   
             00007C0000   
             3800001000   
             0000000000   
             0000006000   
             0080         
    000039E2 0000800001             .DATA.B     H'00,H'00,H'80,H'00,H'01,H'C0,H'00,H'07,H'F0,H'00,H'0F,H'F8,H'00,H'19,H'FC,H'00,
             C00007F000 +                       H'1B,H'FC,H'00,H'3F,H'FE,H'00,H'3F,H'FE,H'00,H'3F,H'FE,H'00,H'1F,H'FC,H'00,H'1F,
             0FF80019FC +                       H'FC,H'00,H'0F,H'F8,H'00,H'07,H'F0,H'00,H'01,H'C0,H'00,H'01,H'C0,H'00,H'0E,H'38,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  157


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             001BFC003F +                       H'00,H'30,H'06,H'00,H'41,H'09,H'00,H'55,H'29,H'00,H'3F,H'FE,H'00,H'01,H'40,H'00,
             FE003FFE00 +                       H'1F,H'7C,H'00,H'61,H'43,H'00,H'3F,H'FE,H'00,H'01,H'40,H'00,H'02,H'20,H'00,H'02,
             3FFE001FFC +                       H'A0,H'00,H'04,H'90,H'00,H'39,H'6E,H'00,H'46,H'11,H'00,H'FF,H'FF,H'80,H'00,H'00,
             001FFC000F +                       H'00,H'00,H'00,H'00,H'1E,H'3C,H'00,H'3F,H'7E,H'00,H'67,H'FF,H'00,H'6F,H'FF,H'00,
             F80007F000 +                       H'7F,H'FF,H'00,H'7F,H'FF,H'00,H'7F,H'FF,H'00,H'3F,H'FE,H'00,H'1F,H'FC,H'00,H'0F,
             01C00001C0 +                       H'F8,H'00,H'07,H'F0,H'00,H'03,H'E0,H'00,H'01,H'C0,H'00,H'00,H'80,H'00,H'00,H'00,
             000E380030 +                       H'00,H'00,H'00,H'00,H'01,H'C0,H'00,H'02,H'20,H'00,H'05,H'50,H'00,H'04,H'90,H'00,
             0600410900 +                       H'05,H'50,H'00,H'02,H'20,H'00,H'01,H'C0,H'00,H'38,H'0E,H'00,H'44,H'11,H'00,H'AA,
             5529003FFE +                       H'2A,H'80,H'92,H'24,H'80,H'AA,H'2A,H'80,H'44,H'11,H'00,H'38,H'0E,H'00,H'00,H'00,
             000140001F +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             7C00614300 +                       H'78,H'00,H'00,H'84
             3FFE000140   
             0002200002   
             A000049000   
             396E004611   
             00FFFF8000   
             0000000000   
             1E3C003F7E   
             0067FF006F   
             FF007FFF00   
             7FFF007FFF   
             003FFE001F   
             FC000FF800   
             07F00003E0   
             0001C00000   
             8000000000   
             00000001C0   
             0002200005   
             5000049000   
             0550000220   
             0001C00038   
             0E00441100   
             AA2A809224   
             80AA2A8044   
             1100380E00   
             0000000000   
             0000000000   
             0000000000   
             0000007800   
             0084         
    00003AB6 0E00A41100             .DATA.B     H'0E,H'00,H'A4,H'11,H'00,H'84,H'11,H'00,H'78,H'02,H'00,H'85,H'44,H'00,H'A4,H'88,
             8411007802 +                       H'00,H'85,H'5F,H'00,H'84,H'00,H'00,H'78,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             00854400A4 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'3F,
             8800855F00 +                       H'F8,H'00,H'40,H'04,H'00,H'51,H'12,H'00,H'48,H'89,H'00,H'44,H'45,H'00,H'48,H'89,
             8400007800 +                       H'00,H'51,H'12,H'00,H'40,H'04,H'00,H'3F,H'F8,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             00003FF800   
             4004005112   
             0048890044   
             4500488900   
             5112004004   
             003FF80000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  158


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             00           
    00003B0C              __$trefle:                       ; static: trefle
    00003B0C 03E0000C18             .DATA.B     H'03,H'E0,H'00,H'0C,H'18,H'00,H'10,H'04,H'00,H'27,H'72,H'00,H'4F,H'79,H'00,H'4F,
             0010040027 +                       H'F9,H'00,H'8F,H'F8,H'80,H'83,H'E0,H'80,H'8F,H'F8,H'80,H'8F,H'F8,H'80,H'8F,H'78,
             72004F7900 +                       H'80,H'47,H'71,H'00,H'40,H'81,H'00,H'20,H'82,H'00,H'11,H'04,H'00,H'0C,H'18,H'00,
             4FF9008FF8 +                       H'03,H'E0,H'00
             8083E0808F   
             F8808FF880   
             8F78804771   
             0040810020   
             8200110400   
             0C180003E0   
             00           
    00003B3F              __$vehiculesX:                   ; static: vehiculesX
    00003B3F 0401020002             .DATA.B     H'04,H'01,H'02,H'00,H'02,H'01,H'06,H'01,H'05,H'01,H'05
             0106010501   
             05           
    00003B4A 00                     .DATAB.B    1,0
    00003B4B 101615070B             .DATA.B     H'10,H'16,H'15,H'07,H'0B,H'16,H'14,H'14,H'1A,H'11,H'10,H'10
             1614141A11   
             1010         
    00003B57              __$vehiculesY:                   ; static: vehiculesY
    00003B57 0101010101             .DATA.B     H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'0E,H'11,H'12,H'0E,
             0101010101 +                       H'0F,H'0C,H'13,H'10,H'0D,H'11,H'0E,H'0E
             01010E1112   
             0E0F0C1310   
             0D110E0E     
    00003B6F              __$coinPatterns:                 ; static: coinPatterns
    00003B6F E38E38E380             .DATA.B     H'E3,H'8E,H'38,H'E3,H'80,H'71,H'C7,H'1C,H'71,H'C0,H'38,H'E3,H'8E,H'38,H'E0,H'71,
             71C71C71C0 +                       H'C7,H'1C,H'71,H'C0,H'E3,H'8E,H'38,H'E3,H'80
             38E38E38E0   
             71C71C71C0   
             E38E38E380   
    00003B88 0000001401             .DATAB.B    20,0
             00           
    00003B9C 7F001FC0FF             .DATA.B     H'7F,H'00,H'1F,H'C0,H'FF,H'80,H'3F,H'E0,H'7F,H'00,H'1F,H'C0,H'00,H'3F,H'80,H'00,
             803FE07F00 +                       H'00,H'7F,H'C0,H'00,H'00,H'3F,H'80,H'00
             1FC0003F80   
             00007FC000   
             003F8000     
    00003BB4 0000001501             .DATAB.B    21,0
             00           
    00003BC9 733A4EA884             .DATA.B     H'73,H'3A,H'4E,H'A8,H'84,H'93,H'50,H'A8,H'84,H'92,H'DE,H'A8,H'84,H'92,H'42,H'00,
             9350A88492 +                       H'73,H'3A,H'5E,H'A8
             DEA8849242   
             00733A5EA8   
    00003BDD 0000001901             .DATAB.B    25,0
             00           
    00003BF6 6300948094             .DATA.B     H'63,H'00,H'94,H'80,H'94,H'00,H'E4,H'00,H'84,H'80,H'83,H'00
             00E4008480   
             8300         
    00003C02 0000002101             .DATAB.B    33,0
             00           
    00003C23 7F000000FF             .DATA.B     H'7F,H'00,H'00,H'00,H'FF,H'80,H'00,H'00,H'7F,H'00,H'00,H'00,H'00,H'3F,H'80,H'00,
             8000007F00 +                       H'00,H'7F,H'C0,H'00,H'00,H'3F,H'80,H'00,H'00,H'00,H'1F,H'C0,H'00,H'00,H'3F,H'E0,
             0000003F80 +                       H'00,H'00,H'1F,H'C0
             00007FC000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  159


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             003F800000   
             001FC00000   
             3FE000001F   
             C0           
    00003C47 0000000901             .DATAB.B    9,0
             00           
    00003C50 AAA05540AA             .DATA.B     H'AA,H'A0,H'55,H'40,H'AA,H'A0,H'55,H'40,H'AA,H'A0,H'55,H'40,H'AA,H'A0,H'55,H'40,
             A05540AAA0 +                       H'AA,H'A0
             5540AAA055   
             40AAA0       
    00003C62 0000001B01             .DATAB.B    27,0
             00           
    00003C7D 7FFCFFFE7F             .DATA.B     H'7F,H'FC,H'FF,H'FE,H'7F,H'FC
             FC           
    00003C83 0000002701             .DATAB.B    39,0
             00           
    00003CAA 6CFEFE7C38             .DATA.B     H'6C,H'FE,H'FE,H'7C,H'38,H'10
             10           
    00003CB0 0000002701             .DATAB.B    39,0
             00           
    00003CD7 F003C00008             .DATA.B     H'F0,H'03,H'C0,H'00,H'08,H'04,H'20,H'00,H'04,H'08,H'10,H'00,H'02,H'10,H'08,H'00,
             0420000408 +                       H'01,H'E0,H'07,H'80
             1000021008   
             0001E00780   
    00003CEB 0000001901             .DATAB.B    25,0
             00           
    00003D04 FC001F8003             .DATA.B     H'FC,H'00,H'1F,H'80,H'03,H'80,H'E0,H'00,H'00,H'63,H'00,H'00,H'00,H'14,H'00,H'00,
             80E0000063 +                       H'00,H'08,H'00,H'00,H'00,H'14,H'00,H'00,H'00,H'63,H'00,H'00,H'03,H'80,H'E0,H'00,
             0000001400 +                       H'FC,H'00,H'1F,H'80
             0000080000   
             0014000000   
             6300000380   
             E000FC001F   
             80           
    00003D28 0000000901             .DATAB.B    9,0
             00           
    00003D31 F339C994A5             .DATA.B     H'F3,H'39,H'C9,H'94,H'A5,H'29,H'E7,H'BD,H'EF,H'94,H'A9,H'42,H'F4,H'A5,H'22
             29E7BDEF94   
             A942F4A522   
    00003D40 0000001E01             .DATAB.B    30,0
             00           
    00003D5E 0300030018             .DATA.B     H'03,H'00,H'03,H'00,H'18,H'60,H'18,H'60,H'C3,H'0C,H'C3,H'0C,H'18,H'60,H'18,H'60,
             601860C30C +                       H'03,H'00,H'03,H'00
             C30C186018   
             6003000300   
    00003D72 0000001901             .DATAB.B    25,0
             00           
    00003D8B 0200030003             .DATA.B     H'02,H'00,H'03,H'00,H'03,H'80,H'FF,H'C0,H'FF,H'E0,H'FF,H'C0,H'03,H'80,H'03,H'00,
             80FFC0FFE0 +                       H'02,H'00
             FFC0038003   
             000200       
    00003D9D 0000001B01             .DATAB.B    27,0
             00           
    00003DB8 0001F00000             .DATA.B     H'00,H'01,H'F0,H'00,H'00,H'00,H'3E,H'0F,H'80,H'00,H'07,H'C0,H'00,H'7C,H'00,H'F8,
             003E0F8000 +                       H'00,H'00,H'03,H'E0
             07C0007C00   
             F8000003E0   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  160


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003DCC 0000001901             .DATAB.B    25,0
             00           
    00003DE5 AAAAAAA0AA             .DATA.B     H'AA,H'AA,H'AA,H'A0,H'AA,H'AA,H'AA,H'A0
             AAAAA0       
    00003DED 0000002501             .DATAB.B    37,0
             00           
    00003E12 F87C3E1F3E             .DATA.B     H'F8,H'7C,H'3E,H'1F,H'3E,H'7C,H'F8
             7CF8         
    00003E19 0000002601             .DATAB.B    38,0
             00           
    00003E3F FF003FC000             .DATA.B     H'FF,H'00,H'3F,H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'80,H'1F,H'E0
             0000000000   
             007F801FE0   
    00003E4E 0000001E01             .DATAB.B    30,0
             00           
    00003E6C FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF
    00003E71 0000002801             .DATAB.B    40,0
             00           
    00003E99 FFFF800000             .DATA.B     H'FF,H'FF,H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'03,H'FF,H'FE
             0000000000   
             0000000000   
             000003FFFE   
    00003EB2 0000001401             .DATAB.B    20,0
             00           
    00003EC6              __$laserPattern:                 ; static: laserPattern
    00003EC6 0046004600             .DATA.W     H'0046,H'0046,H'0000,H'0000,H'0000,H'0000,H'0032,H'0082,H'0000,H'0000,H'0046,H'0046,
             0000000000 +                       H'0000,H'0000,H'0032,H'0082,H'0000,H'0000,H'0000,H'0000,H'0046,H'0046,H'0032,H'0082,
             0000003200 +                       H'0000,H'0000,H'0046,H'0046,H'0046,H'0046,H'0032,H'0082,H'0046,H'0046,H'0046,H'0046,
             8200000000 +                       H'0000,H'0000,H'0032,H'0082,H'0000,H'0000,H'0046,H'0000,H'0000,H'0000,H'0032,H'0082,
             0046004600 +                       H'0000,H'0000,H'0000,H'0046,H'0000,H'0000,H'0032,H'0082,H'0046,H'0000,H'0000,H'0000,
             0000000032 +                       H'0000,H'0000,H'0032,H'0120,H'0000,H'0000,H'0000,H'0000,H'0000,H'0046,H'0032,H'0120,
             0082000000 +                       H'0046,H'0046,H'008C,H'008C,H'00D2,H'00D2,H'0032,H'0104,H'0046,H'03E7,H'008C,H'008C,
             0000000000 +                       H'03E7,H'0046,H'0032,H'00BE,H'0046,H'0000,H'0000,H'0000,H'0000,H'0046,H'0032,H'0082,
             0046004600 +                       H'0046,H'006E,H'0096,H'00BE,H'00E6,H'010E,H'001E,H'012C,H'0046,H'0046,H'00AA,H'00AA,
             3200820000 +                       H'0078,H'0078,H'0032,H'00DC,H'0078,H'00D2,H'0136,H'0104,H'00A0,H'0046,H'001E,H'0154,
             0000004600 +                       H'0046,H'0000,H'0000,H'0000,H'0000,H'0046,H'0032,H'00A4,H'0046,H'0000,H'0000,H'0000,
             4600460046 +                       H'0000,H'0046,H'0032,H'0138
             0032008200   
             4600460046   
             0046000000   
             0000320082   
             0000000000   
             4600000000   
             0000003200   
             8200000000   
             0000004600   
             0000000032   
             0082004600   
             0000000000   
             0000000000   
             3201200000   
             0000000000   
             0000000046   
             0032012000   
             460046008C   
             008C00D200   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  161


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             D200320104   
             004603E700   
             8C008C03E7   
             0046003200   
             BE00460000   
             0000000000   
             0000460032   
             0082004600   
             6E009600BE   
             00E6010E00   
             1E012C0046   
             004600AA00   
             AA00780078   
             003200DC00   
             7800D20136   
             010400A000   
             46001E0154   
             0046000000   
             0000000000   
             0046003200   
             A400460000   
             0000000000   
             0000460032   
             0138         
    00003FD6 00000002               .RES.W      1
    00003FD8              L610:
    00003FD8 25644D                 .SDATA      "%dM"
    00003FDB 00                     .DATA.B     H'00
    00003FDC              L611:
    00003FDC 256424                 .SDATA      "%d$"
    00003FDF 00                     .DATA.B     H'00
    00003FE0              L793:
    00003FE0 2B2564                 .SDATA      "+%d"
    00003FE3 00                     .DATA.B     H'00
    00003FE4              L816:
    00003FE4 5155495454             .SDATA      "QUITTER ?"
             4552203F     
    00003FED 00                     .DATA.B     H'00
    00003FEE 00000002               .RES.W      1
    00003FF0              L817:
    00003FF0 4E4F4E                 .SDATA      "NON"
    00003FF3 00                     .DATA.B     H'00
    00003FF4              L818:
    00003FF4 4F5549                 .SDATA      "OUI"
    00003FF7 00                     .DATA.B     H'00
D   00000000              __$SysCallCode:                  ; static: SysCallCode
    00000000 D201422B60             .DATA.L     H'D201422B,H'60F20000,H'80010070
             F200008001   
             0070         
    0000000C              __$SysCall:                      ; static: SysCall
    0000000C <00000000>             .DATA.L     __$SysCallCode
    00000010              _piece:                          ; static: piece
    00000010 00000000               .DATA.L     H'00000000
    00000014              __$yPos$785:                     ; static: yPos
    00000014 00000020               .DATA.L     H'00000020
B   00000000              __$boxPos:                       ; static: boxPos
    00000000 00000004               .RES.L      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE  162


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000004              _zappeur:                        ; static: zappeur
    00000004 0000008C               .RES.L      35
    00000090              _laser:                          ; static: laser
    00000090 00000048               .RES.L      18
    000000D8              _missile:                        ; static: missile
    000000D8 00000060               .RES.L      24
    00000138              _jeton:                          ; static: jeton
    00000138 00000014               .RES.L      5
    0000014C              _pieceCount:                     ; static: pieceCount
    0000014C 00000004               .RES.L      1
    00000150              _lastPiece:                      ; static: lastPiece
    00000150 00000004               .RES.L      1
    00000154              _chosenPattern:                  ; static: chosenPattern
    00000154 00000004               .RES.L      1
    00000158              _vehiculeHitbox:                 ; static: vehiculeHitbox
    00000158 00000004               .RES.L      1
    0000015C              __$fps$604:                      ; static: fps
    0000015C 00000004               .RES.L      1
    00000160              __$fpsCount$605:                 ; static: fpsCount
    00000160 00000004               .RES.L      1









































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:27:46  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        14




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      828



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000024D0 Byte(s)
CONSTANT SECTION (C):                               00003FF8 Byte(s)
DATA     SECTION (D):                               00000018 Byte(s)
BSS      SECTION (B):                               00000164 Byte(s)

 TOTAL PROGRAM SIZE: 00006644 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           44
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          48
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           402






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ALEX\AppData\Local\Temp\hmkECC0.tmp 

