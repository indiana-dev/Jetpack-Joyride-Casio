SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\ALEX\Desktop\Jetpack Joyride Casio - LastIndev\fonctions.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      fonctions.     1    #include "include.h"
      fonctions.     2    
      fonctions.     3    static int exeStatut = 0, position = 8, direction = 0;
      fonctions.     4    static float angle = 0, phase = 0;
      fonctions.     5    
      fonctions.     6    static float vitesse = 0, acceleration = 0;
      fonctions.     7    static int frameDepart = 0, frameActuelle = 0;
      fonctions.     8    
      fonctions.     9    void initValues()
P   00000000              _initValues:                     ; function: initValues
                                                           ; frame size=0
      fonctions.    10    {
      fonctions.    11        exeStatut = 0, phase = 0, position = 8, direction = 0;
    00000000 D32D                   MOV.L       L1145+2,R3 ; __$exeStatut
    00000002 E008                   MOV         #8,R0
    00000004 D12D                   MOV.L       L1145+6,R1 ; __$phase
    00000006 E400                   MOV         #0,R4
    00000008 2342                   MOV.L       R4,@R3
    0000000A 6243                   MOV         R4,R2
    0000000C 2142                   MOV.L       R4,@R1
    0000000E D22C                   MOV.L       L1145+10,R2; __$position
    00000010 D32C                   MOV.L       L1145+14,R3; __$direction
    00000012 2202                   MOV.L       R0,@R2
    00000014 2342                   MOV.L       R4,@R3
      fonctions.    12        angle = 0;
    00000016 6343                   MOV         R4,R3
    00000018 D02B                   MOV.L       L1145+18,R0; __$angle
      fonctions.    13    
      fonctions.    14        vitesse = 0, acceleration = 0;
    0000001A 6133                   MOV         R3,R1
    0000001C D22B                   MOV.L       L1145+22,R2; __$vitesse
    0000001E 2042                   MOV.L       R4,@R0
    00000020 2232                   MOV.L       R3,@R2
    00000022 D32B                   MOV.L       L1145+26,R3; __$acceleration
      fonctions.    15        frameDepart = 0, frameActuelle = 0;
    00000024 D02B                   MOV.L       L1145+30,R0; __$frameDepart
    00000026 2342                   MOV.L       R4,@R3
    00000028 2012                   MOV.L       R1,@R0
    0000002A D32B                   MOV.L       L1145+34,R3; __$frameActuelle
      fonctions.    16    }
    0000002C 000B                   RTS
    0000002E 2312                   MOV.L       R1,@R3
      fonctions.    17    
      fonctions.    18    int deplacerVehicule(int *x, int *y, int speed, int frame, int vehicule)
    00000030              _deplacerVehicule:               ; function: deplacerVehicule
                                                           ; frame size=76
                                                           ; used runtime library name:
                                                           ; __adds, __addd, __subs, __muld, __divs, __negd, __stod, __dtos, __stoi,
                        +                                   __itos, __eqs, __nes, __gts, __lts
    00000030 2FE6                   MOV.L       R14,@-R15
    00000032 6E53                   MOV         R5,R14
    00000034 2FD6                   MOV.L       R13,@-R15
    00000036 2FC6                   MOV.L       R12,@-R15
    00000038 2FB6                   MOV.L       R11,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000003A 2FA6                   MOV.L       R10,@-R15
    0000003C 2F96                   MOV.L       R9,@-R15
    0000003E 2F86                   MOV.L       R8,@-R15
    00000040 4F22                   STS.L       PR,@-R15
    00000042 7FF8                   ADD         #-8,R15
      fonctions.    19    {
      fonctions.    20        if (vehicule == -1) // 750m d'avance
    00000044 9A37                   MOV.W       L1145,R10  ; H'7536
    00000046 2F42                   MOV.L       R4,@R15
    00000048 1F71                   MOV.L       R7,@(4,R15)
    0000004A 59FA                   MOV.L       @(40,R15),R9
    0000004C DC20                   MOV.L       L1145+26,R12; __$acceleration
    0000004E 6093                   MOV         R9,R0
    00000050 DD1E                   MOV.L       L1145+22,R13; __$vitesse
    00000052 88FF                   CMP/EQ      #-1,R0
    00000054 8F6A                   BF/S        L846
    00000056 6863                   MOV         R6,R8
      fonctions.    21        {
      fonctions.    22            if (IsKeyDown(KEY_CTRL_SHIFT)) acceleration = (0.4); //si on appuie sur EXE on monte
    00000058 D220                   MOV.L       L1145+38,R2; _IsKeyDown
    0000005A 420B                   JSR         @R2
    0000005C 64A3                   MOV         R10,R4
    0000005E 2008                   TST         R0,R0
    00000060 8902                   BT          L847
    00000062 D21F                   MOV.L       L1145+42,R2; H'3ECCCCCD
    00000064 A011                   BRA         L848
    00000066 2C22                   MOV.L       R2,@R12
    00000068              L847:                             
      fonctions.    23            else acceleration = (*y?-0.4:-1); // si y vaut 0, acceleration vaut -1 sinon elle vaut -0.01
    00000068 61E2                   MOV.L       @R14,R1
    0000006A 2118                   TST         R1,R1
    0000006C 8905                   BT          L849
    0000006E D31D                   MOV.L       L1145+46,R3; H'9999999A
    00000070 2F36                   MOV.L       R3,@-R15
    00000072 D31D                   MOV.L       L1145+50,R3; H'BFD99999
    00000074 2F36                   MOV.L       R3,@-R15
    00000076 A004                   BRA         L850
    00000078 0009                   NOP
    0000007A              L849:                             
    0000007A E200                   MOV         #0,R2
    0000007C 2F26                   MOV.L       R2,@-R15
    0000007E D21B                   MOV.L       L1145+54,R2; H'BFF00000
    00000080 2F26                   MOV.L       R2,@-R15
    00000082              L850:                             
    00000082 D11B                   MOV.L       L1145+58,R1; __dtos
    00000084 410B                   JSR         @R1
    00000086 0009                   NOP
    00000088 2C02                   MOV.L       R0,@R12
    0000008A              L848:                             
      fonctions.    24    
      fonctions.    25            vitesse += acceleration; //la vitesse depend de l'acceleration et y depend de la vitesse
    0000008A 60C2                   MOV.L       @R12,R0
    0000008C D319                   MOV.L       L1145+62,R3; __adds
    0000008E 430B                   JSR         @R3
    00000090 61D2                   MOV.L       @R13,R1
    00000092 2D02                   MOV.L       R0,@R13
      fonctions.    26            *y-=vitesse;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000094 D118                   MOV.L       L1145+66,R1; __itos
    00000096 410B                   JSR         @R1
    00000098 60E2                   MOV.L       @R14,R0
    0000009A 6103                   MOV         R0,R1
    0000009C D217                   MOV.L       L1145+70,R2; __subs
    0000009E 420B                   JSR         @R2
    000000A0 60D2                   MOV.L       @R13,R0
    000000A2 D117                   MOV.L       L1145+74,R1; __stoi
    000000A4 410B                   JSR         @R1
    000000A6 0009                   NOP
      fonctions.    27    
      fonctions.    28            if (*y > 45) *y = 45; // pour ne pas sortir de l'ecran
    000000A8 E32D                   MOV         #45,R3
    000000AA 6103                   MOV         R0,R1
    000000AC 3137                   CMP/GT      R3,R1
    000000AE 8F29                   BF/S        L851
    000000B0 2E02                   MOV.L       R0,@R14
    000000B2 A02C                   BRA         L852
    000000B4 2E32                   MOV.L       R3,@R14
    000000B6              L1145:                            
    000000B6 7536                   .DATA.W     H'7536
    000000B8 <00000000>             .DATA.L     __$exeStatut
    000000BC <00000000>             .DATA.L     __$phase
    000000C0 <00000000>             .DATA.L     __$position
    000000C4 <00000000>             .DATA.L     __$direction
    000000C8 <00000000>             .DATA.L     __$angle
    000000CC <00000000>             .DATA.L     __$vitesse
    000000D0 <00000000>             .DATA.L     __$acceleration
    000000D4 <00000000>             .DATA.L     __$frameDepart
    000000D8 <00000000>             .DATA.L     __$frameActuelle
    000000DC <00000000>             .DATA.L     _IsKeyDown
    000000E0 3ECCCCCD               .DATA.L     H'3ECCCCCD
    000000E4 9999999A               .DATA.L     H'9999999A
    000000E8 BFD99999               .DATA.L     H'BFD99999
    000000EC BFF00000               .DATA.L     H'BFF00000
    000000F0 <00000000>             .DATA.L     __dtos
    000000F4 <00000000>             .DATA.L     __adds
    000000F8 <00000000>             .DATA.L     __itos
    000000FC <00000000>             .DATA.L     __subs
    00000100 <00000000>             .DATA.L     __stoi
    00000104              L851:                             
      fonctions.    29            else if (*y < 0) *y = 0;
    00000104 62E2                   MOV.L       @R14,R2
    00000106 4211                   CMP/PZ      R2
    00000108 8901                   BT          L852
    0000010A E000                   MOV         #0,R0
    0000010C 2E02                   MOV.L       R0,@R14
    0000010E              L852:                             
      fonctions.    30    
      fonctions.    31            if (*y == 45 || *y == 0 ) // si on touche le sol ou le plafond
    0000010E 60E2                   MOV.L       @R14,R0
    00000110 882D                   CMP/EQ      #45,R0
    00000112 8D02                   BT/S        L855
    00000114 6403                   MOV         R0,R4
    00000116 2448                   TST         R4,R4
    00000118 8B08                   BF          L846
    0000011A              L855:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      fonctions.    32            {
      fonctions.    33                vitesse = 0; // la vitesse s'arrete
    0000011A E300                   MOV         #0,R3
    0000011C 2D32                   MOV.L       R3,@R13
      fonctions.    34                acceleration = -!*y; // l'acceleration devient negative
    0000011E 60E2                   MOV.L       @R14,R0
    00000120 D372                   MOV.L       L1146,R3   ; __itos
    00000122 2008                   TST         R0,R0
    00000124 0029                   MOVT        R0
    00000126 430B                   JSR         @R3
    00000128 600B                   NEG         R0,R0
    0000012A 2C02                   MOV.L       R0,@R12
    0000012C              L846:                             
      fonctions.    35            }
      fonctions.    36        }
      fonctions.    37        if (vehicule == 0) // barry
    0000012C 2998                   TST         R9,R9
    0000012E 8901                   BT          L1147
    00000130 A094                   BRA         L857
    00000132 0009                   NOP
    00000134              L1147:                            
      fonctions.    38        {
      fonctions.    39            if (IsKeyDown(KEY_CTRL_SHIFT)) acceleration = (0.01*(float)(speed)), vitesse = (*y==45&&sauvegarde
                         +->gadgetEquipe[0]==1||sauvegarde->gadgetEquipe[1]==1?2:vitesse); //si on appuie sur EXE on monte
    00000134 D36E                   MOV.L       L1146+4,R3 ; _IsKeyDown
    00000136 430B                   JSR         @R3
    00000138 64A3                   MOV         R10,R4
    0000013A 2008                   TST         R0,R0
    0000013C 892A                   BT          L858
    0000013E 7FF8                   ADD         #-8,R15
    00000140 D36A                   MOV.L       L1146,R3   ; __itos
    00000142 430B                   JSR         @R3
    00000144 6083                   MOV         R8,R0
    00000146 7FF8                   ADD         #-8,R15
    00000148 D26A                   MOV.L       L1146+8,R2 ; __stod
    0000014A 420B                   JSR         @R2
    0000014C 2FF6                   MOV.L       R15,@-R15
    0000014E D36A                   MOV.L       L1146+12,R3; H'47AE147B
    00000150 D16B                   MOV.L       L1146+20,R1; __muld
    00000152 2F36                   MOV.L       R3,@-R15
    00000154 D369                   MOV.L       L1146+16,R3; H'3F847AE1
    00000156 2F36                   MOV.L       R3,@-R15
    00000158 62F3                   MOV         R15,R2
    0000015A 7210                   ADD         #16,R2
    0000015C 410B                   JSR         @R1
    0000015E 2F26                   MOV.L       R2,@-R15
    00000160 D368                   MOV.L       L1146+24,R3; __dtos
    00000162 430B                   JSR         @R3
    00000164 0009                   NOP
    00000166 2C02                   MOV.L       R0,@R12
    00000168 60E2                   MOV.L       @R14,R0
    0000016A 882D                   CMP/EQ      #45,R0
    0000016C 8B05                   BF          L861
    0000016E D366                   MOV.L       L1146+28,R3; _sauvegarde
    00000170 6032                   MOV.L       @R3,R0
    00000172 840C                   MOV.B       @(12,R0),R0
    00000174 600C                   EXTU.B      R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000176 8801                   CMP/EQ      #1,R0
    00000178 8905                   BT          L860
    0000017A              L861:                             
    0000017A D363                   MOV.L       L1146+28,R3; _sauvegarde
    0000017C 6032                   MOV.L       @R3,R0
    0000017E 840D                   MOV.B       @(13,R0),R0
    00000180 600C                   EXTU.B      R0,R0
    00000182 8801                   CMP/EQ      #1,R0
    00000184 8B02                   BF          L859
    00000186              L860:                             
    00000186 D261                   MOV.L       L1146+32,R2; H'40000000
    00000188 A002                   BRA         L862
    0000018A 0009                   NOP
    0000018C              L859:                             
    0000018C D360                   MOV.L       L1146+36,R3; __$vitesse
    0000018E 6232                   MOV.L       @R3,R2
    00000190              L862:                             
    00000190 A035                   BRA         L863
    00000192 2D22                   MOV.L       R2,@R13
    00000194              L858:                             
      fonctions.    40            else acceleration = (*y?-((sauvegarde->gadgetEquipe[0]==3||sauvegarde->gadgetEquipe[1]==3?0.015:0.
                         +01)*(float)(speed)):-1); // si y vaut 0, acceleration vaut -1 sinon elle vaut -0.01
    00000194 61E2                   MOV.L       @R14,R1
    00000196 2118                   TST         R1,R1
    00000198 8929                   BT          L864
    0000019A D35B                   MOV.L       L1146+28,R3; _sauvegarde
    0000019C 6032                   MOV.L       @R3,R0
    0000019E 840C                   MOV.B       @(12,R0),R0
    000001A0 600C                   EXTU.B      R0,R0
    000001A2 8803                   CMP/EQ      #3,R0
    000001A4 8D05                   BT/S        L866
    000001A6 7FF0                   ADD         #-16,R15
    000001A8 6032                   MOV.L       @R3,R0
    000001AA 840D                   MOV.B       @(13,R0),R0
    000001AC 600C                   EXTU.B      R0,R0
    000001AE 8803                   CMP/EQ      #3,R0
    000001B0 8B05                   BF          L865
    000001B2              L866:                             
    000001B2 D358                   MOV.L       L1146+40,R3; H'EB851EB8
    000001B4 2F36                   MOV.L       R3,@-R15
    000001B6 D358                   MOV.L       L1146+44,R3; H'3F8EB851
    000001B8 2F36                   MOV.L       R3,@-R15
    000001BA A004                   BRA         L867
    000001BC 0009                   NOP
    000001BE              L865:                             
    000001BE D24E                   MOV.L       L1146+12,R2; H'47AE147B
    000001C0 2F26                   MOV.L       R2,@-R15
    000001C2 D24E                   MOV.L       L1146+16,R2; H'3F847AE1
    000001C4 2F26                   MOV.L       R2,@-R15
    000001C6              L867:                             
    000001C6 D149                   MOV.L       L1146,R1   ; __itos
    000001C8 410B                   JSR         @R1
    000001CA 6083                   MOV         R8,R0
    000001CC D349                   MOV.L       L1146+8,R3 ; __stod
    000001CE 7FF8                   ADD         #-8,R15
    000001D0 430B                   JSR         @R3
    000001D2 2FF6                   MOV.L       R15,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001D4 D14A                   MOV.L       L1146+20,R1; __muld
    000001D6 62F3                   MOV         R15,R2
    000001D8 7210                   ADD         #16,R2
    000001DA 410B                   JSR         @R1
    000001DC 2F26                   MOV.L       R2,@-R15
    000001DE E308                   MOV         #8,R3
    000001E0 33FC                   ADD         R15,R3
    000001E2 2F36                   MOV.L       R3,@-R15
    000001E4 D34D                   MOV.L       L1146+48,R3; __negd
    000001E6 430B                   JSR         @R3
    000001E8 0009                   NOP
    000001EA A004                   BRA         L868
    000001EC 0009                   NOP
    000001EE              L864:                             
    000001EE E200                   MOV         #0,R2
    000001F0 2F26                   MOV.L       R2,@-R15
    000001F2 D24B                   MOV.L       L1146+52,R2; H'BFF00000
    000001F4 2F26                   MOV.L       R2,@-R15
    000001F6              L868:                             
    000001F6 D143                   MOV.L       L1146+24,R1; __dtos
    000001F8 410B                   JSR         @R1
    000001FA 0009                   NOP
    000001FC 2C02                   MOV.L       R0,@R12
    000001FE              L863:                             
      fonctions.    41    
      fonctions.    42            vitesse += acceleration; //la vitesse depend de l'acceleration et y depend de la vitesse
    000001FE 60C2                   MOV.L       @R12,R0
    00000200 D348                   MOV.L       L1146+56,R3; __adds
    00000202 430B                   JSR         @R3
    00000204 61D2                   MOV.L       @R13,R1
    00000206 2D02                   MOV.L       R0,@R13
      fonctions.    43            *y-=vitesse;
    00000208 D138                   MOV.L       L1146,R1   ; __itos
    0000020A 410B                   JSR         @R1
    0000020C 60E2                   MOV.L       @R14,R0
    0000020E 6103                   MOV         R0,R1
    00000210 D245                   MOV.L       L1146+60,R2; __subs
    00000212 420B                   JSR         @R2
    00000214 60D2                   MOV.L       @R13,R0
    00000216 D145                   MOV.L       L1146+64,R1; __stoi
    00000218 410B                   JSR         @R1
    0000021A 0009                   NOP
      fonctions.    44    
      fonctions.    45            if (*y > 45) *y = 45; // pour ne pas sortir de l'ecran
    0000021C E32D                   MOV         #45,R3
    0000021E 6103                   MOV         R0,R1
    00000220 3137                   CMP/GT      R3,R1
    00000222 8F02                   BF/S        L869
    00000224 2E02                   MOV.L       R0,@R14
    00000226 A005                   BRA         L870
    00000228 2E32                   MOV.L       R3,@R14
    0000022A              L869:                             
      fonctions.    46            else if (*y < 0) *y = 0;
    0000022A 62E2                   MOV.L       @R14,R2
    0000022C 4211                   CMP/PZ      R2
    0000022E 8901                   BT          L870
    00000230 E000                   MOV         #0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000232 2E02                   MOV.L       R0,@R14
    00000234              L870:                             
      fonctions.    47    
      fonctions.    48            if (*y == 45 || *y == 0 ) // si on touche le sol ou le plafond
    00000234 60E2                   MOV.L       @R14,R0
    00000236 882D                   CMP/EQ      #45,R0
    00000238 8D02                   BT/S        L873
    0000023A 6403                   MOV         R0,R4
    0000023C 2448                   TST         R4,R4
    0000023E 8B0D                   BF          L857
    00000240              L873:                             
      fonctions.    49            {
      fonctions.    50                if (*y == 0) *y = 1;
    00000240 63E2                   MOV.L       @R14,R3
    00000242 2338                   TST         R3,R3
    00000244 8F02                   BF/S        L874
      fonctions.    51                vitesse = 0; // la vitesse s'arrete
    00000246 E200                   MOV         #0,R2
    00000248 E301                   MOV         #1,R3
    0000024A 2E32                   MOV.L       R3,@R14
    0000024C              L874:                             
    0000024C 2D22                   MOV.L       R2,@R13
      fonctions.    52                acceleration = -!*y; // l'acceleration devient negative
    0000024E 60E2                   MOV.L       @R14,R0
    00000250 D326                   MOV.L       L1146,R3   ; __itos
    00000252 2008                   TST         R0,R0
    00000254 0029                   MOVT        R0
    00000256 430B                   JSR         @R3
    00000258 600B                   NEG         R0,R0
    0000025A 2C02                   MOV.L       R0,@R12
    0000025C              L857:                             
      fonctions.    53            }
      fonctions.    54        }
      fonctions.    55        if (vehicule == 1) // moto
    0000025C 6093                   MOV         R9,R0
    0000025E 8801                   CMP/EQ      #1,R0
    00000260 8901                   BT          L1148
    00000262 A085                   BRA         L876
    00000264 0009                   NOP
    00000266              L1148:                            
      fonctions.    56        {
      fonctions.    57            if(IsKeyDown(KEY_CTRL_SHIFT) && *y==44 && exeStatut == 0) // si on appuie sur exe et qu'on est au 
                         +sol
    00000266 D322                   MOV.L       L1146+4,R3 ; _IsKeyDown
    00000268 430B                   JSR         @R3
    0000026A 64A3                   MOV         R10,R4
    0000026C 2008                   TST         R0,R0
    0000026E 8910                   BT          L877
    00000270 60E2                   MOV.L       @R14,R0
    00000272 882C                   CMP/EQ      #44,R0
    00000274 8B0D                   BF          L877
    00000276 D32E                   MOV.L       L1146+68,R3; __$exeStatut
    00000278 6232                   MOV.L       @R3,R2
    0000027A 2228                   TST         R2,R2
    0000027C 8B09                   BF          L877
      fonctions.    58            {
      fonctions.    59                acceleration = 0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000027E E200                   MOV         #0,R2
      fonctions.    60                vitesse = 2.5;
    00000280 D32C                   MOV.L       L1146+72,R3; H'40200000
    00000282 2C22                   MOV.L       R2,@R12
    00000284 2D32                   MOV.L       R3,@R13
      fonctions.    61                frameDepart = frame;
      fonctions.    62                exeStatut = 1;
    00000286 E301                   MOV         #1,R3
    00000288 52F1                   MOV.L       @(4,R15),R2
    0000028A D12B                   MOV.L       L1146+76,R1; __$frameDepart
    0000028C 2122                   MOV.L       R2,@R1
    0000028E D228                   MOV.L       L1146+68,R2; __$exeStatut
    00000290 2232                   MOV.L       R3,@R2
    00000292              L877:                             
      fonctions.    63            }
      fonctions.    64            frameActuelle = frame - frameDepart;
    00000292 D029                   MOV.L       L1146+76,R0; __$frameDepart
    00000294 51F1                   MOV.L       @(4,R15),R1
    00000296 6302                   MOV.L       @R0,R3
    00000298 D228                   MOV.L       L1146+80,R2; __$frameActuelle
    0000029A 3138                   SUB         R3,R1
    0000029C 2212                   MOV.L       R1,@R2
      fonctions.    65            if((IsKeyUp(KEY_CTRL_SHIFT) && frameActuelle>2) || frameActuelle>8) acceleration = -0.3; // determ
                         +ination de la hauteur du saut
    0000029E D328                   MOV.L       L1146+84,R3; _IsKeyUp
    000002A0 430B                   JSR         @R3
    000002A2 64A3                   MOV         R10,R4
    000002A4 2008                   TST         R0,R0
    000002A6 8904                   BT          L880
    000002A8 D124                   MOV.L       L1146+80,R1; __$frameActuelle
    000002AA E302                   MOV         #2,R3
    000002AC 6212                   MOV.L       @R1,R2
    000002AE 3237                   CMP/GT      R3,R2
    000002B0 8904                   BT          L879
    000002B2              L880:                             
    000002B2 E308                   MOV         #8,R3
    000002B4 D221                   MOV.L       L1146+80,R2; __$frameActuelle
    000002B6 6022                   MOV.L       @R2,R0
    000002B8 3037                   CMP/GT      R3,R0
    000002BA 8B01                   BF          L878
    000002BC              L879:                             
    000002BC D321                   MOV.L       L1146+88,R3; H'BE99999A
    000002BE 2C32                   MOV.L       R3,@R12
    000002C0              L878:                             
      fonctions.    66    
      fonctions.    67            vitesse += acceleration; //la vitesse depend de l'acceleration et y depend de la vitesse
    000002C0 60C2                   MOV.L       @R12,R0
    000002C2 D218                   MOV.L       L1146+56,R2; __adds
    000002C4 420B                   JSR         @R2
    000002C6 61D2                   MOV.L       @R13,R1
    000002C8 2D02                   MOV.L       R0,@R13
      fonctions.    68            *y-=vitesse;
    000002CA D108                   MOV.L       L1146,R1   ; __itos
    000002CC 410B                   JSR         @R1
    000002CE 60E2                   MOV.L       @R14,R0
    000002D0 D315                   MOV.L       L1146+60,R3; __subs
    000002D2 6103                   MOV         R0,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002D4 430B                   JSR         @R3
    000002D6 60D2                   MOV.L       @R13,R0
    000002D8 D114                   MOV.L       L1146+64,R1; __stoi
    000002DA 410B                   JSR         @R1
    000002DC 0009                   NOP
      fonctions.    69    
      fonctions.    70            if (*y > 44) *y = 44; // pour ne pas sortir de l'ecran
    000002DE E22C                   MOV         #44,R2
    000002E0 6103                   MOV         R0,R1
    000002E2 3127                   CMP/GT      R2,R1
    000002E4 8F30                   BF/S        L881
    000002E6 2E02                   MOV.L       R0,@R14
    000002E8 A033                   BRA         L882
    000002EA 2E22                   MOV.L       R2,@R14
    000002EC              L1146:                            
    000002EC <00000000>             .DATA.L     __itos
    000002F0 <00000000>             .DATA.L     _IsKeyDown
    000002F4 <00000000>             .DATA.L     __stod
    000002F8 47AE147B               .DATA.L     H'47AE147B
    000002FC 3F847AE1               .DATA.L     H'3F847AE1
    00000300 <00000000>             .DATA.L     __muld
    00000304 <00000000>             .DATA.L     __dtos
    00000308 <00000000>             .DATA.L     _sauvegarde
    0000030C 40000000               .DATA.L     H'40000000
    00000310 <00000000>             .DATA.L     __$vitesse
    00000314 EB851EB8               .DATA.L     H'EB851EB8
    00000318 3F8EB851               .DATA.L     H'3F8EB851
    0000031C <00000000>             .DATA.L     __negd
    00000320 BFF00000               .DATA.L     H'BFF00000
    00000324 <00000000>             .DATA.L     __adds
    00000328 <00000000>             .DATA.L     __subs
    0000032C <00000000>             .DATA.L     __stoi
    00000330 <00000000>             .DATA.L     __$exeStatut
    00000334 40200000               .DATA.L     H'40200000
    00000338 <00000000>             .DATA.L     __$frameDepart
    0000033C <00000000>             .DATA.L     __$frameActuelle
    00000340 <00000000>             .DATA.L     _IsKeyUp
    00000344 BE99999A               .DATA.L     H'BE99999A
    00000348              L881:                             
      fonctions.    71            else if (*y < 0) *y = 0;
    00000348 63E2                   MOV.L       @R14,R3
    0000034A 4311                   CMP/PZ      R3
    0000034C 8901                   BT          L882
    0000034E E000                   MOV         #0,R0
    00000350 2E02                   MOV.L       R0,@R14
    00000352              L882:                             
      fonctions.    72    
      fonctions.    73            if (*y == 44 || *y == 0 ) // si on touche le sol ou le plafond
    00000352 60E2                   MOV.L       @R14,R0
    00000354 882C                   CMP/EQ      #44,R0
    00000356 8D02                   BT/S        L885
    00000358 6403                   MOV         R0,R4
    0000035A 2448                   TST         R4,R4
    0000035C 8B08                   BF          L876
    0000035E              L885:                             
      fonctions.    74            {
      fonctions.    75                vitesse = 0; // la vitesse s'arrete




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000035E E300                   MOV         #0,R3
    00000360 2D32                   MOV.L       R3,@R13
      fonctions.    76                acceleration = -!*y; // l'acceleration devient negative
    00000362 60E2                   MOV.L       @R14,R0
    00000364 D366                   MOV.L       L1149,R3   ; __itos
    00000366 2008                   TST         R0,R0
    00000368 0029                   MOVT        R0
    0000036A 430B                   JSR         @R3
    0000036C 600B                   NEG         R0,R0
    0000036E 2C02                   MOV.L       R0,@R12
    00000370              L876:                             
      fonctions.    77            }
      fonctions.    78        }
      fonctions.    79        if (vehicule == 2) // teleporteur
    00000370 DB64                   MOV.L       L1149+4,R11; __$phase
    00000372 6093                   MOV         R9,R0
    00000374 8802                   CMP/EQ      #2,R0
    00000376 8B59                   BF          L887
    00000378 D363                   MOV.L       L1149+8,R3 ; __$position
    0000037A 6432                   MOV.L       @R3,R4
    0000037C 61B2                   MOV.L       @R11,R1
    0000037E D263                   MOV.L       L1149+12,R2; __nes
    00000380 420B                   JSR         @R2
    00000382 E000                   MOV         #0,R0
    00000384 8800                   CMP/EQ      #0,R0
    00000386 8B2B                   BF          L888
      fonctions.    80        {
      fonctions.    81            if (phase == 0) // si il n'y a pas de teleportation en cours
      fonctions.    82            {
      fonctions.    83                if (position > 53) direction = 1; // si la droite sort de l'ecran, on change de sens
    00000388 E235                   MOV         #53,R2
    0000038A 3427                   CMP/GT      R2,R4
    0000038C 8B03                   BF          L889
    0000038E E001                   MOV         #1,R0
    00000390 D15F                   MOV.L       L1149+16,R1; __$direction
    00000392 A006                   BRA         L890
    00000394 2102                   MOV.L       R0,@R1
    00000396              L889:                             
      fonctions.    84                else if (position < 8) direction = 0;
    00000396 E108                   MOV         #8,R1
    00000398 3413                   CMP/GE      R1,R4
    0000039A 8902                   BT          L890
    0000039C D35C                   MOV.L       L1149+16,R3; __$direction
    0000039E E000                   MOV         #0,R0
    000003A0 2302                   MOV.L       R0,@R3
    000003A2              L890:                             
      fonctions.    85    
      fonctions.    86                position += (direction?-2:2); // on definit le sens de la droite
    000003A2 D25B                   MOV.L       L1149+16,R2; __$direction
    000003A4 6122                   MOV.L       @R2,R1
    000003A6 2118                   TST         R1,R1
    000003A8 8901                   BT          L892
    000003AA A001                   BRA         L893
    000003AC E2FE                   MOV         #-2,R2
    000003AE              L892:                             
    000003AE E202                   MOV         #2,R2
    000003B0              L893:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003B0 D155                   MOV.L       L1149+8,R1 ; __$position
    000003B2 6312                   MOV.L       @R1,R3
    000003B4 332C                   ADD         R2,R3
    000003B6 2132                   MOV.L       R3,@R1
      fonctions.    87    
      fonctions.    88                if (IsKeyDown(KEY_CTRL_SHIFT) && *x < 50 && exeStatut == 0)
    000003B8 D256                   MOV.L       L1149+20,R2; _IsKeyDown
    000003BA 420B                   JSR         @R2
    000003BC 64A3                   MOV         R10,R4
    000003BE 2008                   TST         R0,R0
    000003C0 8913                   BT          L895
    000003C2 E332                   MOV         #50,R3
    000003C4 62F2                   MOV.L       @R15,R2
    000003C6 6122                   MOV.L       @R2,R1
    000003C8 3133                   CMP/GE      R3,R1
    000003CA 890E                   BT          L895
    000003CC D252                   MOV.L       L1149+24,R2; __$exeStatut
    000003CE 6022                   MOV.L       @R2,R0
    000003D0 2008                   TST         R0,R0
    000003D2 8B0A                   BF          L895
      fonctions.    89                {
      fonctions.    90                    phase = 1; // si on appuye sur EXE et qu'on est pas trop eloigne, on commence l'animation 
                         +de teleportation
    000003D4 D051                   MOV.L       L1149+28,R0; H'3F800000
      fonctions.    91                    exeStatut = 1;
    000003D6 E301                   MOV         #1,R3
    000003D8 D24F                   MOV.L       L1149+24,R2; __$exeStatut
    000003DA 2B02                   MOV.L       R0,@R11
    000003DC A005                   BRA         L895
    000003DE 2232                   MOV.L       R3,@R2
    000003E0              L888:                             
      fonctions.    92                }
      fonctions.    93            }
      fonctions.    94            else phase++;
    000003E0 D14E                   MOV.L       L1149+28,R1; H'3F800000
    000003E2 D24F                   MOV.L       L1149+32,R2; __adds
    000003E4 420B                   JSR         @R2
    000003E6 60B2                   MOV.L       @R11,R0
    000003E8 2B02                   MOV.L       R0,@R11
    000003EA              L895:                             
      fonctions.    95    
      fonctions.    96            if (*x > 8) *x -= 2; // on ramene le teleporteur a sa position initiale
    000003EA E208                   MOV         #8,R2
    000003EC 63F2                   MOV.L       @R15,R3
    000003EE 6132                   MOV.L       @R3,R1
    000003F0 3127                   CMP/GT      R2,R1
    000003F2 8B03                   BF          L896
    000003F4 60F2                   MOV.L       @R15,R0
    000003F6 6302                   MOV.L       @R0,R3
    000003F8 73FE                   ADD         #-2,R3
    000003FA 2032                   MOV.L       R3,@R0
    000003FC              L896:                             
      fonctions.    97    
      fonctions.    98            if (phase == 5) // a cette animation on fait la teleportation
    000003FC D049                   MOV.L       L1149+36,R0; H'40A00000
    000003FE D243                   MOV.L       L1149+12,R2; __nes
    00000400 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000402 61B2                   MOV.L       @R11,R1
    00000404 8800                   CMP/EQ      #0,R0
    00000406 8B09                   BF          L897
      fonctions.    99            {
      fonctions.   100                *y = position-8;
    00000408 D23F                   MOV.L       L1149+8,R2 ; __$position
    0000040A 6322                   MOV.L       @R2,R3
    0000040C 73F8                   ADD         #-8,R3
    0000040E 2E32                   MOV.L       R3,@R14
      fonctions.   101                *x += 45;
    00000410 61F2                   MOV.L       @R15,R1
    00000412 6312                   MOV.L       @R1,R3
    00000414 732D                   ADD         #45,R3
    00000416 2132                   MOV.L       R3,@R1
    00000418 A008                   BRA         L887
    0000041A 0009                   NOP
    0000041C              L897:                             
      fonctions.   102            }
      fonctions.   103            else if (phase == 9) phase = 0; // la derniere animation reinitialise tout
    0000041C D042                   MOV.L       L1149+40,R0; H'41100000
    0000041E D23B                   MOV.L       L1149+12,R2; __nes
    00000420 420B                   JSR         @R2
    00000422 61B2                   MOV.L       @R11,R1
    00000424 8800                   CMP/EQ      #0,R0
    00000426 8B01                   BF          L887
    00000428 E300                   MOV         #0,R3
    0000042A 2B32                   MOV.L       R3,@R11
    0000042C              L887:                             
      fonctions.   104        }
      fonctions.   105        if (vehicule == 3) // gravity guy
    0000042C 6093                   MOV         R9,R0
    0000042E 8803                   CMP/EQ      #3,R0
    00000430 8901                   BT          L1150
    00000432 A0A1                   BRA         L900
    00000434 0009                   NOP
    00000436              L1150:                            
      fonctions.   106        {
      fonctions.   107            if (IsKeyDown(KEY_CTRL_SHIFT) && exeStatut == 0) // si on appuie sur exe
    00000436 D337                   MOV.L       L1149+20,R3; _IsKeyDown
    00000438 430B                   JSR         @R3
    0000043A 64A3                   MOV         R10,R4
    0000043C 2008                   TST         R0,R0
    0000043E 890C                   BT          L901
    00000440 D235                   MOV.L       L1149+24,R2; __$exeStatut
    00000442 6322                   MOV.L       @R2,R3
    00000444 2338                   TST         R3,R3
    00000446 8B08                   BF          L901
      fonctions.   108            {
      fonctions.   109                direction = (direction?0:1); // on change la gravite
    00000448 D331                   MOV.L       L1149+16,R3; __$direction
    0000044A 6232                   MOV.L       @R3,R2
    0000044C D130                   MOV.L       L1149+16,R1; __$direction
    0000044E 2228                   TST         R2,R2
      fonctions.   110                exeStatut =  1;
    00000450 D031                   MOV.L       L1149+24,R0; __$exeStatut
    00000452 0329                   MOVT        R3
    00000454 2132                   MOV.L       R3,@R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000456 E201                   MOV         #1,R2
    00000458 2022                   MOV.L       R2,@R0
    0000045A              L901:                             
      fonctions.   111            }
      fonctions.   112    
      fonctions.   113            if (direction) acceleration = (0.01*(float)(speed));
    0000045A D12D                   MOV.L       L1149+16,R1; __$direction
    0000045C 6312                   MOV.L       @R1,R3
    0000045E 2338                   TST         R3,R3
    00000460 8915                   BT          L904
    00000462 7FF8                   ADD         #-8,R15
    00000464 D326                   MOV.L       L1149,R3   ; __itos
    00000466 430B                   JSR         @R3
    00000468 6083                   MOV         R8,R0
    0000046A 7FF8                   ADD         #-8,R15
    0000046C D22F                   MOV.L       L1149+44,R2; __stod
    0000046E 420B                   JSR         @R2
    00000470 2FF6                   MOV.L       R15,@-R15
    00000472 D32F                   MOV.L       L1149+48,R3; H'47AE147B
    00000474 D030                   MOV.L       L1149+56,R0; __muld
    00000476 2F36                   MOV.L       R3,@-R15
    00000478 D32E                   MOV.L       L1149+52,R3; H'3F847AE1
    0000047A 2F36                   MOV.L       R3,@-R15
    0000047C 62F3                   MOV         R15,R2
    0000047E 7210                   ADD         #16,R2
    00000480 400B                   JSR         @R0
    00000482 2F26                   MOV.L       R2,@-R15
    00000484 D32D                   MOV.L       L1149+60,R3; __dtos
    00000486 430B                   JSR         @R3
    00000488 0009                   NOP
    0000048A A023                   BRA         L1128
    0000048C 0009                   NOP
    0000048E              L904:                             
      fonctions.   114            else acceleration = (*y?-(0.01*(float)(speed)):-1);
    0000048E 63E2                   MOV.L       @R14,R3
    00000490 2338                   TST         R3,R3
    00000492 8918                   BT          L906
    00000494 D31A                   MOV.L       L1149,R3   ; __itos
    00000496 7FF0                   ADD         #-16,R15
    00000498 430B                   JSR         @R3
    0000049A 6083                   MOV         R8,R0
    0000049C D223                   MOV.L       L1149+44,R2; __stod
    0000049E 7FF8                   ADD         #-8,R15
    000004A0 420B                   JSR         @R2
    000004A2 2FF6                   MOV.L       R15,@-R15
    000004A4 D322                   MOV.L       L1149+48,R3; H'47AE147B
    000004A6 2F36                   MOV.L       R3,@-R15
    000004A8 D322                   MOV.L       L1149+52,R3; H'3F847AE1
    000004AA 2F36                   MOV.L       R3,@-R15
    000004AC D022                   MOV.L       L1149+56,R0; __muld
    000004AE 62F3                   MOV         R15,R2
    000004B0 7210                   ADD         #16,R2
    000004B2 400B                   JSR         @R0
    000004B4 2F26                   MOV.L       R2,@-R15
    000004B6 E308                   MOV         #8,R3
    000004B8 33FC                   ADD         R15,R3
    000004BA 2F36                   MOV.L       R3,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004BC D320                   MOV.L       L1149+64,R3; __negd
    000004BE 430B                   JSR         @R3
    000004C0 0009                   NOP
    000004C2 A004                   BRA         L907
    000004C4 0009                   NOP
    000004C6              L906:                             
    000004C6 E200                   MOV         #0,R2
    000004C8 2F26                   MOV.L       R2,@-R15
    000004CA D21E                   MOV.L       L1149+68,R2; H'BFF00000
    000004CC 2F26                   MOV.L       R2,@-R15
    000004CE              L907:                             
    000004CE D11B                   MOV.L       L1149+60,R1; __dtos
    000004D0 410B                   JSR         @R1
    000004D2 0009                   NOP
    000004D4              L1128:                            
    000004D4 2C02                   MOV.L       R0,@R12
      fonctions.   115    
      fonctions.   116            vitesse += acceleration; //la vitesse depend de l'acceleration et y depend de la vitesse
    000004D6 D312                   MOV.L       L1149+32,R3; __adds
    000004D8 430B                   JSR         @R3
    000004DA 61D2                   MOV.L       @R13,R1
    000004DC 2D02                   MOV.L       R0,@R13
      fonctions.   117            *y-=vitesse;
    000004DE D108                   MOV.L       L1149,R1   ; __itos
    000004E0 410B                   JSR         @R1
    000004E2 60E2                   MOV.L       @R14,R0
    000004E4 D218                   MOV.L       L1149+72,R2; __subs
    000004E6 6103                   MOV         R0,R1
    000004E8 420B                   JSR         @R2
    000004EA 60D2                   MOV.L       @R13,R0
    000004EC D117                   MOV.L       L1149+76,R1; __stoi
    000004EE 410B                   JSR         @R1
    000004F0 0009                   NOP
      fonctions.   118    
      fonctions.   119            if (*y > 44) *y = 44; // pour ne pas sortir de l'ecran
    000004F2 E32C                   MOV         #44,R3
    000004F4 6103                   MOV         R0,R1
    000004F6 3137                   CMP/GT      R3,R1
    000004F8 8F2A                   BF/S        L908
    000004FA 2E02                   MOV.L       R0,@R14
    000004FC A02D                   BRA         L909
    000004FE 2E32                   MOV.L       R3,@R14
    00000500              L1149:                            
    00000500 <00000000>             .DATA.L     __itos
    00000504 <00000000>             .DATA.L     __$phase
    00000508 <00000000>             .DATA.L     __$position
    0000050C <00000000>             .DATA.L     __nes
    00000510 <00000000>             .DATA.L     __$direction
    00000514 <00000000>             .DATA.L     _IsKeyDown
    00000518 <00000000>             .DATA.L     __$exeStatut
    0000051C 3F800000               .DATA.L     H'3F800000
    00000520 <00000000>             .DATA.L     __adds
    00000524 40A00000               .DATA.L     H'40A00000
    00000528 41100000               .DATA.L     H'41100000
    0000052C <00000000>             .DATA.L     __stod
    00000530 47AE147B               .DATA.L     H'47AE147B
    00000534 3F847AE1               .DATA.L     H'3F847AE1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000538 <00000000>             .DATA.L     __muld
    0000053C <00000000>             .DATA.L     __dtos
    00000540 <00000000>             .DATA.L     __negd
    00000544 BFF00000               .DATA.L     H'BFF00000
    00000548 <00000000>             .DATA.L     __subs
    0000054C <00000000>             .DATA.L     __stoi
    00000550              L908:                             
      fonctions.   120            else if (*y < 0) *y = 0;
    00000550 62E2                   MOV.L       @R14,R2
    00000552 4211                   CMP/PZ      R2
    00000554 8901                   BT          L909
    00000556 E000                   MOV         #0,R0
    00000558 2E02                   MOV.L       R0,@R14
    0000055A              L909:                             
      fonctions.   121    
      fonctions.   122            if (*y == 44 || *y == 0 ) // si on touche le sol ou le plafond
    0000055A 60E2                   MOV.L       @R14,R0
    0000055C 882C                   CMP/EQ      #44,R0
    0000055E 8D02                   BT/S        L912
    00000560 6403                   MOV         R0,R4
    00000562 2448                   TST         R4,R4
    00000564 8B08                   BF          L900
    00000566              L912:                             
      fonctions.   123            {
      fonctions.   124                vitesse = 0; // la vitesse s'arrete
    00000566 E300                   MOV         #0,R3
    00000568 2D32                   MOV.L       R3,@R13
      fonctions.   125                acceleration = -!*y; // l'acceleration devient negative
    0000056A 60E2                   MOV.L       @R14,R0
    0000056C D362                   MOV.L       L1151+2,R3 ; __itos
    0000056E 2008                   TST         R0,R0
    00000570 0029                   MOVT        R0
    00000572 430B                   JSR         @R3
    00000574 600B                   NEG         R0,R0
    00000576 2C02                   MOV.L       R0,@R12
    00000578              L900:                             
      fonctions.   126            }
      fonctions.   127        }
      fonctions.   128        if (vehicule == 4) // oiseau
    00000578 6093                   MOV         R9,R0
    0000057A 8804                   CMP/EQ      #4,R0
    0000057C 8901                   BT          L1152
    0000057E A088                   BRA         L914
    00000580 0009                   NOP
    00000582              L1152:                            
      fonctions.   129        {
      fonctions.   130            if (phase != 0) phase++; // on gere l'animation de l'oiseau
    00000582 61B2                   MOV.L       @R11,R1
    00000584 D35D                   MOV.L       L1151+6,R3 ; __eqs
    00000586 430B                   JSR         @R3
    00000588 E000                   MOV         #0,R0
    0000058A 8800                   CMP/EQ      #0,R0
    0000058C 8B04                   BF          L915
    0000058E D15C                   MOV.L       L1151+10,R1; H'3F800000
    00000590 D25C                   MOV.L       L1151+14,R2; __adds
    00000592 420B                   JSR         @R2
    00000594 60B2                   MOV.L       @R11,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000596 2B02                   MOV.L       R0,@R11
    00000598              L915:                             
      fonctions.   131            if (phase > 6) phase = 0;
    00000598 D05B                   MOV.L       L1151+18,R0; H'40C00000
    0000059A D35C                   MOV.L       L1151+22,R3; __gts
    0000059C 430B                   JSR         @R3
    0000059E 61B2                   MOV.L       @R11,R1
    000005A0 8800                   CMP/EQ      #0,R0
    000005A2 8D02                   BT/S        L916
      fonctions.   132    
      fonctions.   133            if (IsKeyDown(KEY_CTRL_SHIFT) && exeStatut == 0) // si on appuie sur exe
    000005A4 64A3                   MOV         R10,R4
    000005A6 E200                   MOV         #0,R2
    000005A8 2B22                   MOV.L       R2,@R11
    000005AA              L916:                             
    000005AA D359                   MOV.L       L1151+26,R3; _IsKeyDown
    000005AC 430B                   JSR         @R3
    000005AE 0009                   NOP
    000005B0 2008                   TST         R0,R0
    000005B2 8920                   BT          L917
    000005B4 D257                   MOV.L       L1151+30,R2; __$exeStatut
    000005B6 6322                   MOV.L       @R2,R3
    000005B8 2338                   TST         R3,R3
    000005BA 8B1C                   BF          L917
      fonctions.   134            {
      fonctions.   135                vitesse = 0; // on reinitialise la vitesse
      fonctions.   136                acceleration = (0.06*(float)(speed)); // on donne un impulsion
    000005BC D24E                   MOV.L       L1151+2,R2 ; __itos
    000005BE E300                   MOV         #0,R3
    000005C0 2D32                   MOV.L       R3,@R13
    000005C2 7FF8                   ADD         #-8,R15
    000005C4 420B                   JSR         @R2
    000005C6 6083                   MOV         R8,R0
    000005C8 D353                   MOV.L       L1151+34,R3; __stod
    000005CA 7FF8                   ADD         #-8,R15
    000005CC 430B                   JSR         @R3
    000005CE 2FF6                   MOV.L       R15,@-R15
    000005D0 D252                   MOV.L       L1151+38,R2; H'EB851EB8
    000005D2 2F26                   MOV.L       R2,@-R15
    000005D4 D252                   MOV.L       L1151+42,R2; H'3FAEB851
    000005D6 2F26                   MOV.L       R2,@-R15
    000005D8 D152                   MOV.L       L1151+46,R1; __muld
    000005DA 63F3                   MOV         R15,R3
    000005DC 7310                   ADD         #16,R3
    000005DE 410B                   JSR         @R1
    000005E0 2F36                   MOV.L       R3,@-R15
    000005E2 D251                   MOV.L       L1151+50,R2; __dtos
    000005E4 420B                   JSR         @R2
    000005E6 0009                   NOP
    000005E8 2C02                   MOV.L       R0,@R12
      fonctions.   137                exeStatut = 1;
    000005EA E301                   MOV         #1,R3
    000005EC D249                   MOV.L       L1151+30,R2; __$exeStatut
    000005EE 2232                   MOV.L       R3,@R2
      fonctions.   138                phase = 1; // premiere phase de l'animation
    000005F0 D143                   MOV.L       L1151+10,R1; H'3F800000
    000005F2 A024                   BRA         L918




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005F4 2B12                   MOV.L       R1,@R11
    000005F6              L917:                             
      fonctions.   139            }
      fonctions.   140            else acceleration = (*y?-(0.01*(float)(speed)):-1);
    000005F6 62E2                   MOV.L       @R14,R2
    000005F8 2228                   TST         R2,R2
    000005FA 8918                   BT          L919
    000005FC D33E                   MOV.L       L1151+2,R3 ; __itos
    000005FE 7FF0                   ADD         #-16,R15
    00000600 430B                   JSR         @R3
    00000602 6083                   MOV         R8,R0
    00000604 D244                   MOV.L       L1151+34,R2; __stod
    00000606 7FF8                   ADD         #-8,R15
    00000608 420B                   JSR         @R2
    0000060A 2FF6                   MOV.L       R15,@-R15
    0000060C D347                   MOV.L       L1151+54,R3; H'47AE147B
    0000060E 2F36                   MOV.L       R3,@-R15
    00000610 D347                   MOV.L       L1151+58,R3; H'3F847AE1
    00000612 2F36                   MOV.L       R3,@-R15
    00000614 D143                   MOV.L       L1151+46,R1; __muld
    00000616 62F3                   MOV         R15,R2
    00000618 7210                   ADD         #16,R2
    0000061A 410B                   JSR         @R1
    0000061C 2F26                   MOV.L       R2,@-R15
    0000061E E308                   MOV         #8,R3
    00000620 33FC                   ADD         R15,R3
    00000622 2F36                   MOV.L       R3,@-R15
    00000624 D343                   MOV.L       L1151+62,R3; __negd
    00000626 430B                   JSR         @R3
    00000628 0009                   NOP
    0000062A A004                   BRA         L920
    0000062C 0009                   NOP
    0000062E              L919:                             
    0000062E E200                   MOV         #0,R2
    00000630 2F26                   MOV.L       R2,@-R15
    00000632 D241                   MOV.L       L1151+66,R2; H'BFF00000
    00000634 2F26                   MOV.L       R2,@-R15
    00000636              L920:                             
    00000636 D13C                   MOV.L       L1151+50,R1; __dtos
    00000638 410B                   JSR         @R1
    0000063A 0009                   NOP
    0000063C 2C02                   MOV.L       R0,@R12
    0000063E              L918:                             
      fonctions.   141    
      fonctions.   142            vitesse += acceleration; //la vitesse depend de l'acceleration et y depend de la vitesse
    0000063E 60C2                   MOV.L       @R12,R0
    00000640 D330                   MOV.L       L1151+14,R3; __adds
    00000642 430B                   JSR         @R3
    00000644 61D2                   MOV.L       @R13,R1
    00000646 2D02                   MOV.L       R0,@R13
      fonctions.   143            *y-=vitesse;
    00000648 D12B                   MOV.L       L1151+2,R1 ; __itos
    0000064A 410B                   JSR         @R1
    0000064C 60E2                   MOV.L       @R14,R0
    0000064E 6103                   MOV         R0,R1
    00000650 D23A                   MOV.L       L1151+70,R2; __subs
    00000652 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000654 60D2                   MOV.L       @R13,R0
    00000656 D13A                   MOV.L       L1151+74,R1; __stoi
    00000658 410B                   JSR         @R1
    0000065A 0009                   NOP
      fonctions.   144    
      fonctions.   145            if (*y > 46) *y = 46; // pour ne pas sortir de l'ecran
    0000065C E42E                   MOV         #46,R4
    0000065E 6303                   MOV         R0,R3
    00000660 3347                   CMP/GT      R4,R3
    00000662 8F02                   BF/S        L921
    00000664 2E02                   MOV.L       R0,@R14
    00000666 A005                   BRA         L922
    00000668 2E42                   MOV.L       R4,@R14
    0000066A              L921:                             
      fonctions.   146            else if (*y < 0) *y = 0;
    0000066A 62E2                   MOV.L       @R14,R2
    0000066C 4211                   CMP/PZ      R2
    0000066E 8901                   BT          L922
    00000670 E100                   MOV         #0,R1
    00000672 2E12                   MOV.L       R1,@R14
    00000674              L922:                             
      fonctions.   147    
      fonctions.   148            if (*y == 46 || *y == 0 ) // si on touche le sol ou le plafond
    00000674 60E2                   MOV.L       @R14,R0
    00000676 882E                   CMP/EQ      #46,R0
    00000678 8D02                   BT/S        L925
    0000067A 6403                   MOV         R0,R4
    0000067C 2448                   TST         R4,R4
    0000067E 8B08                   BF          L914
    00000680              L925:                             
      fonctions.   149            {
      fonctions.   150                vitesse = 0; // la vitesse s'arrete
    00000680 E300                   MOV         #0,R3
    00000682 2D32                   MOV.L       R3,@R13
      fonctions.   151                acceleration = -!*y; // l'acceleration devient negative
    00000684 60E2                   MOV.L       @R14,R0
    00000686 2008                   TST         R0,R0
    00000688 D31B                   MOV.L       L1151+2,R3 ; __itos
    0000068A 0029                   MOVT        R0
    0000068C 430B                   JSR         @R3
    0000068E 600B                   NEG         R0,R0
    00000690 2C02                   MOV.L       R0,@R12
    00000692              L914:                             
      fonctions.   152            }
      fonctions.   153        }
      fonctions.   154        if (vehicule == 5) // ptit ecraseur
    00000692 6093                   MOV         R9,R0
    00000694 8805                   CMP/EQ      #5,R0
    00000696 8901                   BT          L1153
    00000698 A0B4                   BRA         L927
    0000069A 0009                   NOP
    0000069C              L1153:                            
      fonctions.   155        {
      fonctions.   156            if(IsKeyDown(KEY_CTRL_SHIFT) && *y == 40 && exeStatut == 0) // si on appuie sur exe et qu'on est a
                         +u sol
    0000069C D31C                   MOV.L       L1151+26,R3; _IsKeyDown
    0000069E 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006A0 64A3                   MOV         R10,R4
    000006A2 2008                   TST         R0,R0
    000006A4 8950                   BT          L928
    000006A6 60E2                   MOV.L       @R14,R0
    000006A8 8828                   CMP/EQ      #40,R0
    000006AA 8B4D                   BF          L928
    000006AC D319                   MOV.L       L1151+30,R3; __$exeStatut
    000006AE 6232                   MOV.L       @R3,R2
    000006B0 2228                   TST         R2,R2
    000006B2 8B49                   BF          L928
      fonctions.   157            {
      fonctions.   158                acceleration = -(0.01*(float)(speed)); // on accelere
    000006B4 D210                   MOV.L       L1151+2,R2 ; __itos
    000006B6 7FF0                   ADD         #-16,R15
    000006B8 420B                   JSR         @R2
    000006BA 6083                   MOV         R8,R0
    000006BC D316                   MOV.L       L1151+34,R3; __stod
    000006BE 7FF8                   ADD         #-8,R15
    000006C0 430B                   JSR         @R3
    000006C2 2FF6                   MOV.L       R15,@-R15
    000006C4 D219                   MOV.L       L1151+54,R2; H'47AE147B
    000006C6 2F26                   MOV.L       R2,@-R15
    000006C8 D219                   MOV.L       L1151+58,R2; H'3F847AE1
    000006CA 2F26                   MOV.L       R2,@-R15
    000006CC D115                   MOV.L       L1151+46,R1; __muld
    000006CE 63F3                   MOV         R15,R3
    000006D0 7310                   ADD         #16,R3
    000006D2 410B                   JSR         @R1
    000006D4 2F36                   MOV.L       R3,@-R15
    000006D6 E208                   MOV         #8,R2
    000006D8 32FC                   ADD         R15,R2
    000006DA 2F26                   MOV.L       R2,@-R15
    000006DC D215                   MOV.L       L1151+62,R2; __negd
    000006DE 420B                   JSR         @R2
    000006E0 0009                   NOP
    000006E2 D311                   MOV.L       L1151+50,R3; __dtos
    000006E4 430B                   JSR         @R3
    000006E6 0009                   NOP
    000006E8 2C02                   MOV.L       R0,@R12
      fonctions.   159                vitesse = 4.; // on augmente la vitesse d'un coup : impulsion
      fonctions.   160                exeStatut = 1;
    000006EA E301                   MOV         #1,R3
    000006EC D109                   MOV.L       L1151+30,R1; __$exeStatut
    000006EE D215                   MOV.L       L1151+78,R2; H'40800000
    000006F0 2D22                   MOV.L       R2,@R13
    000006F2 A058                   BRA         L929
    000006F4 2132                   MOV.L       R3,@R1
    000006F6              L1151:                            
    000006F6 0000                   .DATA.W     0
    000006F8 <00000000>             .DATA.L     __itos
    000006FC <00000000>             .DATA.L     __eqs
    00000700 3F800000               .DATA.L     H'3F800000
    00000704 <00000000>             .DATA.L     __adds
    00000708 40C00000               .DATA.L     H'40C00000
    0000070C <00000000>             .DATA.L     __gts
    00000710 <00000000>             .DATA.L     _IsKeyDown
    00000714 <00000000>             .DATA.L     __$exeStatut




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000718 <00000000>             .DATA.L     __stod
    0000071C EB851EB8               .DATA.L     H'EB851EB8
    00000720 3FAEB851               .DATA.L     H'3FAEB851
    00000724 <00000000>             .DATA.L     __muld
    00000728 <00000000>             .DATA.L     __dtos
    0000072C 47AE147B               .DATA.L     H'47AE147B
    00000730 3F847AE1               .DATA.L     H'3F847AE1
    00000734 <00000000>             .DATA.L     __negd
    00000738 BFF00000               .DATA.L     H'BFF00000
    0000073C <00000000>             .DATA.L     __subs
    00000740 <00000000>             .DATA.L     __stoi
    00000744 40800000               .DATA.L     H'40800000
    00000748              L928:                             
      fonctions.   161            }
      fonctions.   162            else acceleration = (*y?(IsKeyDown(KEY_CTRL_SHIFT)?-(0.001*(float)(speed)):-0.4):-0.4); // sinon o
                         +n redescent Ë† -0.4, ou 0.005 si on appuie sur exe
    00000748 60E2                   MOV.L       @R14,R0
    0000074A 2008                   TST         R0,R0
    0000074C 8923                   BT          L930
    0000074E 946E                   MOV.W       L1154,R4   ; H'7536
    00000750 D337                   MOV.L       L1154+2,R3 ; _IsKeyDown
    00000752 430B                   JSR         @R3
    00000754 0009                   NOP
    00000756 2008                   TST         R0,R0
    00000758 8918                   BT          L931
    0000075A 7FF0                   ADD         #-16,R15
    0000075C D335                   MOV.L       L1154+6,R3 ; __itos
    0000075E 430B                   JSR         @R3
    00000760 6083                   MOV         R8,R0
    00000762 7FF8                   ADD         #-8,R15
    00000764 D234                   MOV.L       L1154+10,R2; __stod
    00000766 420B                   JSR         @R2
    00000768 2FF6                   MOV.L       R15,@-R15
    0000076A D334                   MOV.L       L1154+14,R3; H'D2F1A9FC
    0000076C D135                   MOV.L       L1154+22,R1; __muld
    0000076E 2F36                   MOV.L       R3,@-R15
    00000770 D333                   MOV.L       L1154+18,R3; H'3F50624D
    00000772 2F36                   MOV.L       R3,@-R15
    00000774 62F3                   MOV         R15,R2
    00000776 7210                   ADD         #16,R2
    00000778 410B                   JSR         @R1
    0000077A 2F26                   MOV.L       R2,@-R15
    0000077C E308                   MOV         #8,R3
    0000077E 33FC                   ADD         R15,R3
    00000780 2F36                   MOV.L       R3,@-R15
    00000782 D331                   MOV.L       L1154+26,R3; __negd
    00000784 430B                   JSR         @R3
    00000786 0009                   NOP
    00000788 A009                   BRA         L933
    0000078A 0009                   NOP
    0000078C              L931:                             
    0000078C D22F                   MOV.L       L1154+30,R2; H'9999999A
    0000078E 2F26                   MOV.L       R2,@-R15
    00000790 D22F                   MOV.L       L1154+34,R2; H'BFD99999
    00000792 A004                   BRA         L933
    00000794 2F26                   MOV.L       R2,@-R15
    00000796              L930:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000796 D12D                   MOV.L       L1154+30,R1; H'9999999A
    00000798 2F16                   MOV.L       R1,@-R15
    0000079A D12D                   MOV.L       L1154+34,R1; H'BFD99999
    0000079C 2F16                   MOV.L       R1,@-R15
    0000079E              L933:                             
    0000079E D22D                   MOV.L       L1154+38,R2; __dtos
    000007A0 420B                   JSR         @R2
    000007A2 0009                   NOP
    000007A4 2C02                   MOV.L       R0,@R12
    000007A6              L929:                             
      fonctions.   163    
      fonctions.   164            vitesse += acceleration; //la vitesse depend de l'acceleration et x depend de la vitesse
    000007A6 60C2                   MOV.L       @R12,R0
    000007A8 D32B                   MOV.L       L1154+42,R3; __adds
    000007AA 430B                   JSR         @R3
    000007AC 61D2                   MOV.L       @R13,R1
    000007AE 2D02                   MOV.L       R0,@R13
      fonctions.   165            *y-=vitesse;
    000007B0 D120                   MOV.L       L1154+6,R1 ; __itos
    000007B2 410B                   JSR         @R1
    000007B4 60E2                   MOV.L       @R14,R0
    000007B6 6103                   MOV         R0,R1
    000007B8 D228                   MOV.L       L1154+46,R2; __subs
    000007BA 420B                   JSR         @R2
    000007BC 60D2                   MOV.L       @R13,R0
    000007BE D128                   MOV.L       L1154+50,R1; __stoi
    000007C0 410B                   JSR         @R1
    000007C2 0009                   NOP
      fonctions.   166    
      fonctions.   167            if (*y > 40) *y = 40; // pour ne pas sortir de l'ecran
    000007C4 E428                   MOV         #40,R4
    000007C6 6303                   MOV         R0,R3
    000007C8 3347                   CMP/GT      R4,R3
    000007CA 8F02                   BF/S        L934
    000007CC 2E02                   MOV.L       R0,@R14
    000007CE A005                   BRA         L935
    000007D0 2E42                   MOV.L       R4,@R14
    000007D2              L934:                             
      fonctions.   168            else if (*y < 0) *y = 0;
    000007D2 62E2                   MOV.L       @R14,R2
    000007D4 4211                   CMP/PZ      R2
    000007D6 8901                   BT          L935
    000007D8 E100                   MOV         #0,R1
    000007DA 2E12                   MOV.L       R1,@R14
    000007DC              L935:                             
      fonctions.   169    
      fonctions.   170            if (*y == 40 || *y == 0 ) // si on touche le sol ou le plafond
    000007DC 60E2                   MOV.L       @R14,R0
    000007DE 8828                   CMP/EQ      #40,R0
    000007E0 8D02                   BT/S        L938
    000007E2 6403                   MOV         R0,R4
    000007E4 2448                   TST         R4,R4
    000007E6 8B0D                   BF          L927
    000007E8              L938:                             
      fonctions.   171            {
      fonctions.   172                vitesse = -1; // la vitesse s'arrete
    000007E8 D31E                   MOV.L       L1154+54,R3; H'BF800000




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007EA 2D32                   MOV.L       R3,@R13
      fonctions.   173                acceleration = -!*y; // l'acceleration devient negative
    000007EC 60E2                   MOV.L       @R14,R0
    000007EE 2008                   TST         R0,R0
    000007F0 D310                   MOV.L       L1154+6,R3 ; __itos
    000007F2 0029                   MOVT        R0
    000007F4 430B                   JSR         @R3
    000007F6 600B                   NEG         R0,R0
    000007F8 2C02                   MOV.L       R0,@R12
      fonctions.   174                if (*y == 0) *y = 1;
    000007FA 62E2                   MOV.L       @R14,R2
    000007FC 2228                   TST         R2,R2
    000007FE 8B01                   BF          L927
    00000800 E301                   MOV         #1,R3
    00000802 2E32                   MOV.L       R3,@R14
    00000804              L927:                             
      fonctions.   175            }
      fonctions.   176        }
      fonctions.   177    
      fonctions.   178        if (vehicule == 6) // dragon
    00000804 6093                   MOV         R9,R0
    00000806 8806                   CMP/EQ      #6,R0
    00000808 8901                   BT          L1155
    0000080A A089                   BRA         L941
    0000080C 0009                   NOP
    0000080E              L1155:                            
      fonctions.   179        {
      fonctions.   180            *x = 0;
    0000080E E200                   MOV         #0,R2
    00000810 63F2                   MOV.L       @R15,R3
    00000812 2322                   MOV.L       R2,@R3
      fonctions.   181            acceleration = (IsKeyDown(KEY_CTRL_SHIFT) ? -0.005 : +0.005) * ((float)speed);
    00000814 D306                   MOV.L       L1154+2,R3 ; _IsKeyDown
    00000816 7FF8                   ADD         #-8,R15
    00000818 430B                   JSR         @R3
    0000081A 64A3                   MOV         R10,R4
    0000081C 2008                   TST         R0,R0
    0000081E 8D27                   BT/S        L942
    00000820 6083                   MOV         R8,R0
    00000822 D311                   MOV.L       L1154+58,R3; H'47AE147B
    00000824 2F36                   MOV.L       R3,@-R15
    00000826 D311                   MOV.L       L1154+62,R3; H'BF747AE1
    00000828 2F36                   MOV.L       R3,@-R15
    0000082A A025                   BRA         L943
    0000082C 0009                   NOP
    0000082E              L1154:                            
    0000082E 7536                   .DATA.W     H'7536
    00000830 <00000000>             .DATA.L     _IsKeyDown
    00000834 <00000000>             .DATA.L     __itos
    00000838 <00000000>             .DATA.L     __stod
    0000083C D2F1A9FC               .DATA.L     H'D2F1A9FC
    00000840 3F50624D               .DATA.L     H'3F50624D
    00000844 <00000000>             .DATA.L     __muld
    00000848 <00000000>             .DATA.L     __negd
    0000084C 9999999A               .DATA.L     H'9999999A
    00000850 BFD99999               .DATA.L     H'BFD99999
    00000854 <00000000>             .DATA.L     __dtos




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000858 <00000000>             .DATA.L     __adds
    0000085C <00000000>             .DATA.L     __subs
    00000860 <00000000>             .DATA.L     __stoi
    00000864 BF800000               .DATA.L     H'BF800000
    00000868 47AE147B               .DATA.L     H'47AE147B
    0000086C BF747AE1               .DATA.L     H'BF747AE1
    00000870              L942:                             
    00000870 D284                   MOV.L       L1156+2,R2 ; H'47AE147B
    00000872 2F26                   MOV.L       R2,@-R15
    00000874 D284                   MOV.L       L1156+6,R2 ; H'3F747AE1
    00000876 2F26                   MOV.L       R2,@-R15
    00000878              L943:                             
    00000878 D184                   MOV.L       L1156+10,R1; __itos
    0000087A 410B                   JSR         @R1
    0000087C 0009                   NOP
    0000087E 7FF8                   ADD         #-8,R15
    00000880 D383                   MOV.L       L1156+14,R3; __stod
    00000882 430B                   JSR         @R3
    00000884 2FF6                   MOV.L       R15,@-R15
    00000886 62F3                   MOV         R15,R2
    00000888 D182                   MOV.L       L1156+18,R1; __muld
    0000088A 7210                   ADD         #16,R2
    0000088C 410B                   JSR         @R1
    0000088E 2F26                   MOV.L       R2,@-R15
    00000890 D381                   MOV.L       L1156+22,R3; __dtos
    00000892 430B                   JSR         @R3
    00000894 0009                   NOP
    00000896 2C02                   MOV.L       R0,@R12
      fonctions.   182            if(!*y && IsKeyDown(KEY_CTRL_SHIFT)) vitesse = -1;
    00000898 62E2                   MOV.L       @R14,R2
    0000089A 2228                   TST         R2,R2
    0000089C 8B06                   BF          L944
    0000089E D37F                   MOV.L       L1156+26,R3; _IsKeyDown
    000008A0 430B                   JSR         @R3
    000008A2 64A3                   MOV         R10,R4
    000008A4 2008                   TST         R0,R0
    000008A6 8901                   BT          L944
    000008A8 D37D                   MOV.L       L1156+30,R3; H'BF800000
    000008AA 2D32                   MOV.L       R3,@R13
    000008AC              L944:                             
      fonctions.   183            vitesse += acceleration;
    000008AC 60C2                   MOV.L       @R12,R0
    000008AE D27D                   MOV.L       L1156+34,R2; __adds
    000008B0 420B                   JSR         @R2
    000008B2 61D2                   MOV.L       @R13,R1
    000008B4 2D02                   MOV.L       R0,@R13
      fonctions.   184            *y -= vitesse;
    000008B6 D175                   MOV.L       L1156+10,R1; __itos
    000008B8 410B                   JSR         @R1
    000008BA 60E2                   MOV.L       @R14,R0
    000008BC D37A                   MOV.L       L1156+38,R3; __subs
    000008BE 6103                   MOV         R0,R1
    000008C0 430B                   JSR         @R3
    000008C2 60D2                   MOV.L       @R13,R0
    000008C4 D179                   MOV.L       L1156+42,R1; __stoi
    000008C6 410B                   JSR         @R1
    000008C8 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      fonctions.   185    
      fonctions.   186            if (*y > 45) *y = 45;
    000008CA E22D                   MOV         #45,R2
    000008CC 6103                   MOV         R0,R1
    000008CE 3127                   CMP/GT      R2,R1
    000008D0 8F02                   BF/S        L945
    000008D2 2E02                   MOV.L       R0,@R14
    000008D4 A007                   BRA         L946
    000008D6 2E22                   MOV.L       R2,@R14
    000008D8              L945:                             
      fonctions.   187            else if (*y < 0) *y = 0 + IsKeyDown(KEY_CTRL_SHIFT);
    000008D8 63E2                   MOV.L       @R14,R3
    000008DA 4311                   CMP/PZ      R3
    000008DC 8903                   BT          L946
    000008DE D36F                   MOV.L       L1156+26,R3; _IsKeyDown
    000008E0 430B                   JSR         @R3
    000008E2 64A3                   MOV         R10,R4
    000008E4 2E02                   MOV.L       R0,@R14
    000008E6              L946:                             
      fonctions.   188            if (*y == 45 || *y == 0 ) vitesse = 0;
    000008E6 60E2                   MOV.L       @R14,R0
    000008E8 882D                   CMP/EQ      #45,R0
    000008EA 8D02                   BT/S        L949
    000008EC 6403                   MOV         R0,R4
    000008EE 2448                   TST         R4,R4
    000008F0 8B01                   BF          L948
    000008F2              L949:                             
    000008F2 E200                   MOV         #0,R2
    000008F4 2D22                   MOV.L       R2,@R13
    000008F6              L948:                             
      fonctions.   189    
      fonctions.   190            phase = (vitesse != 0 ? (vitesse < 0 ? -1 : 1) : 0);
    000008F6 61D2                   MOV.L       @R13,R1
    000008F8 D36D                   MOV.L       L1156+46,R3; __eqs
    000008FA 430B                   JSR         @R3
    000008FC E000                   MOV         #0,R0
    000008FE 8800                   CMP/EQ      #0,R0
    00000900 8B09                   BF          L950
    00000902 61D2                   MOV.L       @R13,R1
    00000904 D26B                   MOV.L       L1156+50,R2; __lts
    00000906 420B                   JSR         @R2
    00000908 E000                   MOV         #0,R0
    0000090A 8800                   CMP/EQ      #0,R0
    0000090C 8901                   BT          L951
    0000090E A003                   BRA         L953
    00000910 E0FF                   MOV         #-1,R0
    00000912              L951:                             
    00000912 A001                   BRA         L953
    00000914 E001                   MOV         #1,R0
    00000916              L950:                             
    00000916 E000                   MOV         #0,R0
    00000918              L953:                             
    00000918 D35C                   MOV.L       L1156+10,R3; __itos
    0000091A 430B                   JSR         @R3
    0000091C 0009                   NOP
    0000091E 2B02                   MOV.L       R0,@R11
    00000920              L941:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      fonctions.   191        }
      fonctions.   192    
      fonctions.   193        if (vehicule == 7) // insta-ball
    00000920 6093                   MOV         R9,R0
    00000922 8807                   CMP/EQ      #7,R0
    00000924 8B5F                   BF          L954
      fonctions.   194        {
      fonctions.   195            acceleration = -(0.01*(float)(speed));
    00000926 7FF0                   ADD         #-16,R15
    00000928 D358                   MOV.L       L1156+10,R3; __itos
    0000092A 430B                   JSR         @R3
    0000092C 6083                   MOV         R8,R0
    0000092E 7FF8                   ADD         #-8,R15
    00000930 D257                   MOV.L       L1156+14,R2; __stod
    00000932 420B                   JSR         @R2
    00000934 2FF6                   MOV.L       R15,@-R15
    00000936 D353                   MOV.L       L1156+2,R3 ; H'47AE147B
    00000938 D156                   MOV.L       L1156+18,R1; __muld
    0000093A 2F36                   MOV.L       R3,@-R15
    0000093C D35E                   MOV.L       L1156+54,R3; H'3F847AE1
    0000093E 2F36                   MOV.L       R3,@-R15
    00000940 62F3                   MOV         R15,R2
    00000942 7210                   ADD         #16,R2
    00000944 410B                   JSR         @R1
    00000946 2F26                   MOV.L       R2,@-R15
    00000948 E308                   MOV         #8,R3
    0000094A 33FC                   ADD         R15,R3
    0000094C 2F36                   MOV.L       R3,@-R15
    0000094E D35B                   MOV.L       L1156+58,R3; __negd
    00000950 430B                   JSR         @R3
    00000952 0009                   NOP
    00000954 D250                   MOV.L       L1156+22,R2; __dtos
    00000956 420B                   JSR         @R2
    00000958 0009                   NOP
    0000095A 2C02                   MOV.L       R0,@R12
      fonctions.   196    
      fonctions.   197            vitesse += acceleration; //la vitesse depend de l'acceleration et x depend de la vitesse
    0000095C D351                   MOV.L       L1156+34,R3; __adds
    0000095E 430B                   JSR         @R3
    00000960 61D2                   MOV.L       @R13,R1
    00000962 2D02                   MOV.L       R0,@R13
      fonctions.   198            *y-=vitesse;
    00000964 D149                   MOV.L       L1156+10,R1; __itos
    00000966 410B                   JSR         @R1
    00000968 60E2                   MOV.L       @R14,R0
    0000096A 6103                   MOV         R0,R1
    0000096C D24E                   MOV.L       L1156+38,R2; __subs
    0000096E 420B                   JSR         @R2
    00000970 60D2                   MOV.L       @R13,R0
    00000972 D14E                   MOV.L       L1156+42,R1; __stoi
    00000974 410B                   JSR         @R1
    00000976 0009                   NOP
      fonctions.   199    
      fonctions.   200            if (*y > 44) *y = 44; // pour ne pas sortir de l'ecran
    00000978 E32C                   MOV         #44,R3
    0000097A 6103                   MOV         R0,R1
    0000097C 3137                   CMP/GT      R3,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000097E 8F01                   BF/S        L955
    00000980 2E02                   MOV.L       R0,@R14
    00000982 2E32                   MOV.L       R3,@R14
    00000984              L955:                             
      fonctions.   201            if (*y == 44) // si on touche le sol ou le plafond
    00000984 60E2                   MOV.L       @R14,R0
    00000986 882C                   CMP/EQ      #44,R0
    00000988 8B06                   BF          L956
      fonctions.   202            {
      fonctions.   203                vitesse = 5;
    0000098A D24D                   MOV.L       L1156+62,R2; H'40A00000
      fonctions.   204                phase++;
    0000098C D14D                   MOV.L       L1156+66,R1; H'3F800000
    0000098E 2D22                   MOV.L       R2,@R13
    00000990 D344                   MOV.L       L1156+34,R3; __adds
    00000992 430B                   JSR         @R3
    00000994 60B2                   MOV.L       @R11,R0
    00000996 2B02                   MOV.L       R0,@R11
    00000998              L956:                             
      fonctions.   205            }
      fonctions.   206    
      fonctions.   207            if (phase == 5)
    00000998 D049                   MOV.L       L1156+62,R0; H'40A00000
    0000099A D24B                   MOV.L       L1156+70,R2; __nes
    0000099C 420B                   JSR         @R2
    0000099E 61B2                   MOV.L       @R11,R1
    000009A0 8800                   CMP/EQ      #0,R0
    000009A2 8B02                   BF          L957
      fonctions.   208            {
      fonctions.   209                phase = 0;
    000009A4 E300                   MOV         #0,R3
    000009A6 A0D2                   BRA         L699
    000009A8 2B32                   MOV.L       R3,@R11
    000009AA              L957:                             
      fonctions.   210                return 1;
      fonctions.   211            }
      fonctions.   212    
      fonctions.   213            angle+=0.004; // rotation de la balle
    000009AA 7FF8                   ADD         #-8,R15
    000009AC D348                   MOV.L       L1156+78,R3; H'D2F1A9FC
    000009AE D447                   MOV.L       L1156+74,R4; __$angle
    000009B0 2F36                   MOV.L       R3,@-R15
    000009B2 D348                   MOV.L       L1156+82,R3; H'3F70624D
    000009B4 D236                   MOV.L       L1156+14,R2; __stod
    000009B6 2F36                   MOV.L       R3,@-R15
    000009B8 7FF8                   ADD         #-8,R15
    000009BA 6042                   MOV.L       @R4,R0
    000009BC 420B                   JSR         @R2
    000009BE 2FF6                   MOV.L       R15,@-R15
    000009C0 62F3                   MOV         R15,R2
    000009C2 7210                   ADD         #16,R2
    000009C4 2F26                   MOV.L       R2,@-R15
    000009C6 D244                   MOV.L       L1156+86,R2; __addd
    000009C8 420B                   JSR         @R2
    000009CA 0009                   NOP
    000009CC D232                   MOV.L       L1156+22,R2; __dtos
    000009CE 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009D0 0009                   NOP
      fonctions.   214            if (angle > 360) angle = 0;
    000009D2 6103                   MOV         R0,R1
    000009D4 D342                   MOV.L       L1156+94,R3; __gts
    000009D6 2402                   MOV.L       R0,@R4
    000009D8 D040                   MOV.L       L1156+90,R0; H'43B40000
    000009DA 430B                   JSR         @R3
    000009DC 0009                   NOP
    000009DE 8800                   CMP/EQ      #0,R0
    000009E0 8901                   BT          L954
    000009E2 E200                   MOV         #0,R2
    000009E4 2422                   MOV.L       R2,@R4
    000009E6              L954:                             
      fonctions.   215        }
      fonctions.   216    
      fonctions.   217        if (vehicule == 8) // glacomatique
    000009E6 6093                   MOV         R9,R0
    000009E8 8808                   CMP/EQ      #8,R0
    000009EA 8B15                   BF          L960
      fonctions.   218        {
      fonctions.   219            if (phase == 0) *y = 45;
    000009EC 61B2                   MOV.L       @R11,R1
    000009EE D236                   MOV.L       L1156+70,R2; __nes
    000009F0 420B                   JSR         @R2
    000009F2 E000                   MOV         #0,R0
    000009F4 8800                   CMP/EQ      #0,R0
    000009F6 8B01                   BF          L961
    000009F8 E32D                   MOV         #45,R3
    000009FA 2E32                   MOV.L       R3,@R14
    000009FC              L961:                             
      fonctions.   220    
      fonctions.   221            phase++;
    000009FC D131                   MOV.L       L1156+66,R1; H'3F800000
    000009FE D229                   MOV.L       L1156+34,R2; __adds
    00000A00 420B                   JSR         @R2
    00000A02 60B2                   MOV.L       @R11,R0
    00000A04 2B02                   MOV.L       R0,@R11
      fonctions.   222            if (phase > 120) return 1;
    00000A06 6103                   MOV         R0,R1
    00000A08 D335                   MOV.L       L1156+94,R3; __gts
    00000A0A D036                   MOV.L       L1156+98,R0; H'42F00000
    00000A0C 430B                   JSR         @R3
    00000A0E 0009                   NOP
    00000A10 8800                   CMP/EQ      #0,R0
    00000A12 8901                   BT          L1157
    00000A14 A09B                   BRA         L699
    00000A16 0009                   NOP
    00000A18              L1157:                            
    00000A18              L960:                             
      fonctions.   223        }
      fonctions.   224    
      fonctions.   225        if (vehicule == 9)
    00000A18 6093                   MOV         R9,R0
    00000A1A 8809                   CMP/EQ      #9,R0
    00000A1C 8901                   BT          L1158
    00000A1E A098                   BRA         L963
    00000A20 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A22              L1158:                            
      fonctions.   226        {
      fonctions.   227            acceleration = -(0.005*(float)(speed));
    00000A22 7FF0                   ADD         #-16,R15
    00000A24 D219                   MOV.L       L1156+10,R2; __itos
    00000A26 420B                   JSR         @R2
    00000A28 6083                   MOV         R8,R0
    00000A2A 7FF8                   ADD         #-8,R15
    00000A2C D318                   MOV.L       L1156+14,R3; __stod
    00000A2E 430B                   JSR         @R3
    00000A30 2FF6                   MOV.L       R15,@-R15
    00000A32 D214                   MOV.L       L1156+2,R2 ; H'47AE147B
    00000A34 D117                   MOV.L       L1156+18,R1; __muld
    00000A36 2F26                   MOV.L       R2,@-R15
    00000A38 D213                   MOV.L       L1156+6,R2 ; H'3F747AE1
    00000A3A 2F26                   MOV.L       R2,@-R15
    00000A3C 63F3                   MOV         R15,R3
    00000A3E 7310                   ADD         #16,R3
    00000A40 410B                   JSR         @R1
    00000A42 2F36                   MOV.L       R3,@-R15
    00000A44 E208                   MOV         #8,R2
    00000A46 32FC                   ADD         R15,R2
    00000A48 2F26                   MOV.L       R2,@-R15
    00000A4A D21C                   MOV.L       L1156+58,R2; __negd
    00000A4C 420B                   JSR         @R2
    00000A4E 0009                   NOP
    00000A50 D311                   MOV.L       L1156+22,R3; __dtos
    00000A52 430B                   JSR         @R3
    00000A54 0009                   NOP
    00000A56 2C02                   MOV.L       R0,@R12
      fonctions.   228    
      fonctions.   229            vitesse += acceleration; //la vitesse depend de l'acceleration et x depend de la vitesse
    00000A58 D212                   MOV.L       L1156+34,R2; __adds
    00000A5A 420B                   JSR         @R2
    00000A5C 61D2                   MOV.L       @R13,R1
    00000A5E 2D02                   MOV.L       R0,@R13
      fonctions.   230            *y-=vitesse;
    00000A60 D10A                   MOV.L       L1156+10,R1; __itos
    00000A62 410B                   JSR         @R1
    00000A64 60E2                   MOV.L       @R14,R0
    00000A66 6103                   MOV         R0,R1
    00000A68 D30F                   MOV.L       L1156+38,R3; __subs
    00000A6A 430B                   JSR         @R3
    00000A6C 60D2                   MOV.L       @R13,R0
    00000A6E D10F                   MOV.L       L1156+42,R1; __stoi
    00000A70 410B                   JSR         @R1
    00000A72 0009                   NOP
      fonctions.   231    
      fonctions.   232            if (*y > 50) *y = 50; // pour ne pas sortir de l'ecran
    00000A74 E432                   MOV         #50,R4
    00000A76 6203                   MOV         R0,R2
    00000A78 3247                   CMP/GT      R4,R2
    00000A7A 8F35                   BF/S        L964
    00000A7C 2E02                   MOV.L       R0,@R14
    00000A7E A038                   BRA         L965
    00000A80 2E42                   MOV.L       R4,@R14
    00000A82              L1156:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A82 0000                   .DATA.W     0
    00000A84 47AE147B               .DATA.L     H'47AE147B
    00000A88 3F747AE1               .DATA.L     H'3F747AE1
    00000A8C <00000000>             .DATA.L     __itos
    00000A90 <00000000>             .DATA.L     __stod
    00000A94 <00000000>             .DATA.L     __muld
    00000A98 <00000000>             .DATA.L     __dtos
    00000A9C <00000000>             .DATA.L     _IsKeyDown
    00000AA0 BF800000               .DATA.L     H'BF800000
    00000AA4 <00000000>             .DATA.L     __adds
    00000AA8 <00000000>             .DATA.L     __subs
    00000AAC <00000000>             .DATA.L     __stoi
    00000AB0 <00000000>             .DATA.L     __eqs
    00000AB4 <00000000>             .DATA.L     __lts
    00000AB8 3F847AE1               .DATA.L     H'3F847AE1
    00000ABC <00000000>             .DATA.L     __negd
    00000AC0 40A00000               .DATA.L     H'40A00000
    00000AC4 3F800000               .DATA.L     H'3F800000
    00000AC8 <00000000>             .DATA.L     __nes
    00000ACC <00000000>             .DATA.L     __$angle
    00000AD0 D2F1A9FC               .DATA.L     H'D2F1A9FC
    00000AD4 3F70624D               .DATA.L     H'3F70624D
    00000AD8 <00000000>             .DATA.L     __addd
    00000ADC 43B40000               .DATA.L     H'43B40000
    00000AE0 <00000000>             .DATA.L     __gts
    00000AE4 42F00000               .DATA.L     H'42F00000
    00000AE8              L964:                             
      fonctions.   233            else if (*y < 0) *y = 0;
    00000AE8 63E2                   MOV.L       @R14,R3
    00000AEA 4311                   CMP/PZ      R3
    00000AEC 8901                   BT          L965
    00000AEE E100                   MOV         #0,R1
    00000AF0 2E12                   MOV.L       R1,@R14
    00000AF2              L965:                             
      fonctions.   234    
      fonctions.   235            if (*y == 50 || *y == 0 ) // si on touche le sol ou le plafond
    00000AF2 60E2                   MOV.L       @R14,R0
    00000AF4 8832                   CMP/EQ      #50,R0
    00000AF6 8D02                   BT/S        L968
    00000AF8 6403                   MOV         R0,R4
    00000AFA 2448                   TST         R4,R4
    00000AFC 8B1C                   BF          L967
    00000AFE              L968:                             
      fonctions.   236            {
      fonctions.   237                vitesse = -1; // la vitesse s'arrete
    00000AFE D351                   MOV.L       L1159,R3   ; H'BF800000
    00000B00 2D32                   MOV.L       R3,@R13
      fonctions.   238                acceleration = -!*y; // l'acceleration devient negative
    00000B02 60E2                   MOV.L       @R14,R0
    00000B04 D350                   MOV.L       L1159+4,R3 ; __itos
    00000B06 2008                   TST         R0,R0
    00000B08 0029                   MOVT        R0
    00000B0A 430B                   JSR         @R3
    00000B0C 600B                   NEG         R0,R0
    00000B0E 2C02                   MOV.L       R0,@R12
      fonctions.   239                if (*y == 0) *y = 1;
    00000B10 62E2                   MOV.L       @R14,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B12 2228                   TST         R2,R2
    00000B14 8B02                   BF          L970
    00000B16 E301                   MOV         #1,R3
    00000B18 A009                   BRA         L971
    00000B1A 2E32                   MOV.L       R3,@R14
    00000B1C              L970:                             
      fonctions.   240                else
      fonctions.   241                {
      fonctions.   242                    vitesse = 4-phase/2;
    00000B1C D04B                   MOV.L       L1159+8,R0 ; H'40000000
    00000B1E D34C                   MOV.L       L1159+12,R3; __divs
    00000B20 430B                   JSR         @R3
    00000B22 61B2                   MOV.L       @R11,R1
    00000B24 D14B                   MOV.L       L1159+16,R1; H'40800000
    00000B26 D24C                   MOV.L       L1159+20,R2; __subs
    00000B28 420B                   JSR         @R2
    00000B2A 0009                   NOP
    00000B2C 2D02                   MOV.L       R0,@R13
    00000B2E              L971:                             
      fonctions.   243                }
      fonctions.   244                phase++;
    00000B2E D14B                   MOV.L       L1159+24,R1; H'3F800000
    00000B30 D34B                   MOV.L       L1159+28,R3; __adds
    00000B32 430B                   JSR         @R3
    00000B34 60B2                   MOV.L       @R11,R0
    00000B36 2B02                   MOV.L       R0,@R11
    00000B38              L967:                             
      fonctions.   245            }
      fonctions.   246    
      fonctions.   247            if (phase > 6) return 2;
    00000B38 D04A                   MOV.L       L1159+32,R0; H'40C00000
    00000B3A D24B                   MOV.L       L1159+36,R2; __gts
    00000B3C 420B                   JSR         @R2
    00000B3E 61B2                   MOV.L       @R11,R1
    00000B40 8800                   CMP/EQ      #0,R0
    00000B42 8901                   BT          L972
    00000B44 A00E                   BRA         L958
    00000B46 E002                   MOV         #2,R0
    00000B48              L972:                             
      fonctions.   248            if (*y == 50) return 1;
    00000B48 60E2                   MOV.L       @R14,R0
    00000B4A 8832                   CMP/EQ      #50,R0
    00000B4C 8B09                   BF          L1129
    00000B4E              L699:
    00000B4E A009                   BRA         L958
    00000B50 E001                   MOV         #1,R0
    00000B52              L963:                             
      fonctions.   249            else return 0;
      fonctions.   250        }
      fonctions.   251    
      fonctions.   252        if (IsKeyUp(KEY_CTRL_SHIFT)) exeStatut = 0; // pour eviter l'appui constant sur EXE
    00000B52 D246                   MOV.L       L1159+40,R2; _IsKeyUp
    00000B54 420B                   JSR         @R2
    00000B56 64A3                   MOV         R10,R4
    00000B58 2008                   TST         R0,R0
    00000B5A 8902                   BT          L1129
    00000B5C D344                   MOV.L       L1159+44,R3; __$exeStatut




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B5E E200                   MOV         #0,R2
    00000B60 2322                   MOV.L       R2,@R3
    00000B62              L1129:                            
      fonctions.   253    
      fonctions.   254        return 0;
    00000B62 E000                   MOV         #0,R0
      fonctions.   255    }
    00000B64              L958:                             
    00000B64 7F08                   ADD         #8,R15
    00000B66 4F26                   LDS.L       @R15+,PR
    00000B68 68F6                   MOV.L       @R15+,R8
    00000B6A 69F6                   MOV.L       @R15+,R9
    00000B6C 6AF6                   MOV.L       @R15+,R10
    00000B6E 6BF6                   MOV.L       @R15+,R11
    00000B70 6CF6                   MOV.L       @R15+,R12
    00000B72 6DF6                   MOV.L       @R15+,R13
    00000B74 000B                   RTS
    00000B76 6EF6                   MOV.L       @R15+,R14
      fonctions.   256    void afficherVehicule(int x, int y, int lvl, int vehicule)
    00000B78              _afficherVehicule:               ; function: afficherVehicule
                                                           ; frame size=152
                                                           ; used runtime library name:
                                                           ; __divls, __modls, __addd, __subdr, __muls, __muld, __divs, __divdr, __s
                        +                                  tod, __stoi, __dtoi, __itod, __eqs, __nes, __ges, __les
    00000B78 2FE6                   MOV.L       R14,@-R15
    00000B7A 6E53                   MOV         R5,R14
    00000B7C D340                   MOV.L       L1159+60,R3; __divls
    00000B7E 61E3                   MOV         R14,R1
    00000B80 2FD6                   MOV.L       R13,@-R15
    00000B82 6D43                   MOV         R4,R13
    00000B84 2FC6                   MOV.L       R12,@-R15
    00000B86 E42D                   MOV         #45,R4
    00000B88 2FB6                   MOV.L       R11,@-R15
    00000B8A EB04                   MOV         #4,R11
    00000B8C DC3B                   MOV.L       L1159+56,R12; _ML_bmp_or
    00000B8E 2FA6                   MOV.L       R10,@-R15
    00000B90 2F96                   MOV.L       R9,@-R15
    00000B92 2F86                   MOV.L       R8,@-R15
    00000B94 4F22                   STS.L       PR,@-R15
    00000B96 E801                   MOV         #1,R8
    00000B98 D936                   MOV.L       L1159+48,R9; _sauvegarde
    00000B9A 7FD4                   ADD         #-44,R15
    00000B9C DA36                   MOV.L       L1159+52,R10; _ML_bmp_and
    00000B9E 1F66                   MOV.L       R6,@(24,R15)
    00000BA0 1F71                   MOV.L       R7,@(4,R15)
    00000BA2 430B                   JSR         @R3
    00000BA4 6043                   MOV         R4,R0
    00000BA6 61E3                   MOV         R14,R1
    00000BA8 D235                   MOV.L       L1159+60,R2; __divls
    00000BAA 63E3                   MOV         R14,R3
    00000BAC 1F05                   MOV.L       R0,@(20,R15)
    00000BAE 4108                   SHLL2       R1
    00000BB0 313C                   ADD         R3,R1
    00000BB2 420B                   JSR         @R2
    00000BB4 6043                   MOV         R4,R0
    00000BB6 63D3                   MOV         R13,R3
    00000BB8 1F04                   MOV.L       R0,@(16,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BBA 730A                   ADD         #10,R3
    00000BBC 1F39                   MOV.L       R3,@(36,R15)
    00000BBE 50F6                   MOV.L       @(24,R15),R0
    00000BC0 4011                   CMP/PZ      R0
    00000BC2 8B01                   BF          L977
    00000BC4 A005                   BRA         L978
    00000BC6 C907                   AND         #7,R0
    00000BC8              L977:                             
    00000BC8 6007                   NOT         R0,R0
    00000BCA 7001                   ADD         #1,R0
    00000BCC C907                   AND         #7,R0
    00000BCE 6007                   NOT         R0,R0
    00000BD0 7001                   ADD         #1,R0
    00000BD2              L978:                             
    00000BD2 2F02                   MOV.L       R0,@R15
    00000BD4 51F6                   MOV.L       @(24,R15),R1
    00000BD6 D22B                   MOV.L       L1159+64,R2; __modls
    00000BD8 420B                   JSR         @R2
    00000BDA E006                   MOV         #6,R0
    00000BDC 1F07                   MOV.L       R0,@(28,R15)
    00000BDE 62D3                   MOV         R13,R2
    00000BE0 7207                   ADD         #7,R2
    00000BE2 1F22                   MOV.L       R2,@(8,R15)
    00000BE4 50F1                   MOV.L       @(4,R15),R0
    00000BE6 88FF                   CMP/EQ      #-1,R0
    00000BE8 8904                   BT          L979
    00000BEA 51F1                   MOV.L       @(4,R15),R1
    00000BEC 2118                   TST         R1,R1
    00000BEE 8901                   BT          L1160
    00000BF0 A1D5                   BRA         L976
    00000BF2 0009                   NOP
    00000BF4              L1160:                            
    00000BF4              L979:                             
      fonctions.   257    {
      fonctions.   258        if (vehicule == -1 || vehicule == 0)
      fonctions.   259        {
      fonctions.   260            /* Tous les lvl%8<4 servent a alterner le pied droit et le pied gauche
      fonctions.   261             lorsque barry est au sol pour donner une impression de marche.
      fonctions.   262             Tous les 5 tours de boucle il change de pied. */
      fonctions.   263    
      fonctions.   264            ML_filled_ellipse(x+10,60,5*y/45+2,y/45+1,ML_BLACK); // dessin de l'ombre
    00000BF4 2F86                   MOV.L       R8,@-R15
    00000BF6 E53C                   MOV         #60,R5
    00000BF8 D323                   MOV.L       L1159+68,R3; _ML_filled_ellipse
    00000BFA 57F6                   MOV.L       @(24,R15),R7
    00000BFC 56F5                   MOV.L       @(20,R15),R6
    00000BFE 7701                   ADD         #1,R7
    00000C00 7602                   ADD         #2,R6
    00000C02 430B                   JSR         @R3
    00000C04 54FA                   MOV.L       @(40,R15),R4
      fonctions.   265    
      fonctions.   266            switch (sauvegarde->jetpackEquipe) // on affiche le jetpack et ses animations
    00000C06 E119                   MOV         #25,R1
    00000C08 6092                   MOV.L       @R9,R0
    00000C0A 001C                   MOV.B       @(R0,R1),R0
    00000C0C 600C                   EXTU.B      R0,R0
    00000C0E 8800                   CMP/EQ      #0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C10 8D0C                   BT/S        L814
    00000C12 7F04                   ADD         #4,R15
    00000C14 8801                   CMP/EQ      #1,R0
    00000C16 896A                   BT          L815
    00000C18 8802                   CMP/EQ      #2,R0
    00000C1A 8B01                   BF          L1161
    00000C1C A0BE                   BRA         L816
    00000C1E 0009                   NOP
    00000C20              L1161:                            
    00000C20 8803                   CMP/EQ      #3,R0
    00000C22 8B01                   BF          L1162
    00000C24 A123                   BRA         L817
    00000C26 0009                   NOP
    00000C28              L1162:                            
    00000C28 A14B                   BRA         L980
    00000C2A 0009                   NOP
    00000C2C              L814:                            ; case label 
      fonctions.   267            {
      fonctions.   268                case 0:
      fonctions.   269                    ML_bmp_and(jetpack1Alpha,x,lvl%8<4&&y==45?y-1:y,8,16); // masque alpha du jetpack
    00000C2C E310                   MOV         #16,R3
    00000C2E 2F36                   MOV.L       R3,@-R15
    00000C30 52F1                   MOV.L       @(4,R15),R2
    00000C32 32B3                   CMP/GE      R11,R2
    00000C34 8D2A                   BT/S        L981
    00000C36 E708                   MOV         #8,R7
    00000C38 60E3                   MOV         R14,R0
    00000C3A 882D                   CMP/EQ      #45,R0
    00000C3C 8B26                   BF          L981
    00000C3E 66E3                   MOV         R14,R6
    00000C40 A025                   BRA         L982
    00000C42 76FF                   ADD         #-1,R6
    00000C44              L1159:                            
    00000C44 BF800000               .DATA.L     H'BF800000
    00000C48 <00000000>             .DATA.L     __itos
    00000C4C 40000000               .DATA.L     H'40000000
    00000C50 <00000000>             .DATA.L     __divs
    00000C54 40800000               .DATA.L     H'40800000
    00000C58 <00000000>             .DATA.L     __subs
    00000C5C 3F800000               .DATA.L     H'3F800000
    00000C60 <00000000>             .DATA.L     __adds
    00000C64 40C00000               .DATA.L     H'40C00000
    00000C68 <00000000>             .DATA.L     __gts
    00000C6C <00000000>             .DATA.L     _IsKeyUp
    00000C70 <00000000>             .DATA.L     __$exeStatut
    00000C74 <00000000>             .DATA.L     _sauvegarde
    00000C78 <00000000>             .DATA.L     _ML_bmp_and
    00000C7C <00000000>             .DATA.L     _ML_bmp_or
    00000C80 <00000000>             .DATA.L     __divls
    00000C84 <00000000>             .DATA.L     __modls
    00000C88 <00000000>             .DATA.L     _ML_filled_ellipse
    00000C8C              L981:                             
    00000C8C 66E3                   MOV         R14,R6
    00000C8E              L982:                             
    00000C8E D43C                   MOV.L       L1163+2,R4 ; __$jetpack1Alpha
    00000C90 4A0B                   JSR         @R10
    00000C92 65D3                   MOV         R13,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C94 7F04                   ADD         #4,R15
      fonctions.   270                    if (lvl&1 && IsKeyDown(KEY_CTRL_SHIFT)) ML_bmp_or(jetpack1[0],x,lvl%8<4&&y==45?y-1:y,8,16)
                         +; // affichage de la premiere animation du jetpack
    00000C96 52F6                   MOV.L       @(24,R15),R2
    00000C98 2288                   TST         R8,R2
    00000C9A 8915                   BT          L983
    00000C9C 946F                   MOV.W       L1163,R4   ; H'7536
    00000C9E D239                   MOV.L       L1163+6,R2 ; _IsKeyDown
    00000CA0 420B                   JSR         @R2
    00000CA2 0009                   NOP
    00000CA4 2008                   TST         R0,R0
    00000CA6 890F                   BT          L983
    00000CA8 E210                   MOV         #16,R2
    00000CAA 2F26                   MOV.L       R2,@-R15
    00000CAC 53F1                   MOV.L       @(4,R15),R3
    00000CAE 33B3                   CMP/GE      R11,R3
    00000CB0 8D06                   BT/S        L984
    00000CB2 E708                   MOV         #8,R7
    00000CB4 60E3                   MOV         R14,R0
    00000CB6 882D                   CMP/EQ      #45,R0
    00000CB8 8B02                   BF          L984
    00000CBA 66E3                   MOV         R14,R6
    00000CBC A001                   BRA         L985
    00000CBE 76FF                   ADD         #-1,R6
    00000CC0              L984:                             
    00000CC0 66E3                   MOV         R14,R6
    00000CC2              L985:                             
    00000CC2 D431                   MOV.L       L1163+10,R4; __$jetpack1
    00000CC4 A00F                   BRA         L1130
    00000CC6 65D3                   MOV         R13,R5
    00000CC8              L983:                             
      fonctions.   271                    else ML_bmp_or(jetpack1[1],x,lvl%8<4&&y==45?y-1:y,8,16); // 2eme animation du jetpack
    00000CC8 E310                   MOV         #16,R3
    00000CCA 2F36                   MOV.L       R3,@-R15
    00000CCC 52F1                   MOV.L       @(4,R15),R2
    00000CCE 32B3                   CMP/GE      R11,R2
    00000CD0 8D06                   BT/S        L987
    00000CD2 E708                   MOV         #8,R7
    00000CD4 60E3                   MOV         R14,R0
    00000CD6 882D                   CMP/EQ      #45,R0
    00000CD8 8B02                   BF          L987
    00000CDA 66E3                   MOV         R14,R6
    00000CDC A001                   BRA         L988
    00000CDE 76FF                   ADD         #-1,R6
    00000CE0              L987:                             
    00000CE0 66E3                   MOV         R14,R6
    00000CE2              L988:                             
    00000CE2 65D3                   MOV         R13,R5
    00000CE4 D429                   MOV.L       L1163+14,R4; H'00000010+__$jetpack1
    00000CE6              L1130:                            
    00000CE6 4C0B                   JSR         @R12
    00000CE8 0009                   NOP
      fonctions.   272                break;
    00000CEA A0EA                   BRA         L980
    00000CEC 7F04                   ADD         #4,R15
    00000CEE              L815:                            ; case label 
      fonctions.   273                case 1:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      fonctions.   274                    if (IsKeyDown(KEY_CTRL_SHIFT))
    00000CEE 9446                   MOV.W       L1163,R4   ; H'7536
    00000CF0 D324                   MOV.L       L1163+6,R3 ; _IsKeyDown
    00000CF2 430B                   JSR         @R3
    00000CF4 0009                   NOP
    00000CF6 2008                   TST         R0,R0
    00000CF8 8920                   BT          L989
      fonctions.   275                    {
      fonctions.   276                        ML_rectangle(x+2,y+13,x+6,60,1,ML_CHECKER,ML_BLACK); // animation du laser
    00000CFA E303                   MOV         #3,R3
    00000CFC D224                   MOV.L       L1163+18,R2; _ML_rectangle
    00000CFE E73C                   MOV         #60,R7
    00000D00 2F86                   MOV.L       R8,@-R15
    00000D02 66D3                   MOV         R13,R6
    00000D04 2F36                   MOV.L       R3,@-R15
    00000D06 65E3                   MOV         R14,R5
    00000D08 2F86                   MOV.L       R8,@-R15
    00000D0A 7606                   ADD         #6,R6
    00000D0C 1F6B                   MOV.L       R6,@(44,R15)
    00000D0E 750D                   ADD         #13,R5
    00000D10 1F5D                   MOV.L       R5,@(52,R15)
    00000D12 64D3                   MOV         R13,R4
    00000D14 7402                   ADD         #2,R4
    00000D16 420B                   JSR         @R2
    00000D18 1F46                   MOV.L       R4,@(24,R15)
    00000D1A 7F0C                   ADD         #12,R15
      fonctions.   277                        if (lvl%6<3) ML_rectangle(x+2,y+13,x+6,60,1,ML_XOR,ML_TRANSPARENT);
    00000D1C 52F7                   MOV.L       @(28,R15),R2
    00000D1E E303                   MOV         #3,R3
    00000D20 3233                   CMP/GE      R3,R2
    00000D22 890B                   BT          L989
    00000D24 D31A                   MOV.L       L1163+18,R3; _ML_rectangle
    00000D26 E2FF                   MOV         #-1,R2
    00000D28 2F26                   MOV.L       R2,@-R15
    00000D2A E102                   MOV         #2,R1
    00000D2C 2F16                   MOV.L       R1,@-R15
    00000D2E E73C                   MOV         #60,R7
    00000D30 2F86                   MOV.L       R8,@-R15
    00000D32 56FB                   MOV.L       @(44,R15),R6
    00000D34 55FD                   MOV.L       @(52,R15),R5
    00000D36 430B                   JSR         @R3
    00000D38 54F6                   MOV.L       @(24,R15),R4
    00000D3A 7F0C                   ADD         #12,R15
    00000D3C              L989:                             
      fonctions.   278                    }
      fonctions.   279                    ML_bmp_and(jetpack2Alpha,x,lvl%8<4&&y==45?y-1:y,8,16);
    00000D3C E210                   MOV         #16,R2
    00000D3E 2F26                   MOV.L       R2,@-R15
    00000D40 53F1                   MOV.L       @(4,R15),R3
    00000D42 33B3                   CMP/GE      R11,R3
    00000D44 8D06                   BT/S        L991
    00000D46 E708                   MOV         #8,R7
    00000D48 60E3                   MOV         R14,R0
    00000D4A 882D                   CMP/EQ      #45,R0
    00000D4C 8B02                   BF          L991
    00000D4E 66E3                   MOV         R14,R6
    00000D50 A001                   BRA         L992




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D52 76FF                   ADD         #-1,R6
    00000D54              L991:                             
    00000D54 66E3                   MOV         R14,R6
    00000D56              L992:                             
    00000D56 D40F                   MOV.L       L1163+22,R4; __$jetpack2Alpha
    00000D58 4A0B                   JSR         @R10
    00000D5A 65D3                   MOV         R13,R5
    00000D5C 7F04                   ADD         #4,R15
      fonctions.   280                    ML_bmp_or(jetpack2,x,lvl%8<4&&y==45?y-1:y,8,16);
    00000D5E E210                   MOV         #16,R2
    00000D60 2F26                   MOV.L       R2,@-R15
    00000D62 53F1                   MOV.L       @(4,R15),R3
    00000D64 33B3                   CMP/GE      R11,R3
    00000D66 8D06                   BT/S        L993
    00000D68 E708                   MOV         #8,R7
    00000D6A 60E3                   MOV         R14,R0
    00000D6C 882D                   CMP/EQ      #45,R0
    00000D6E 8B02                   BF          L993
    00000D70 66E3                   MOV         R14,R6
    00000D72 A001                   BRA         L994
    00000D74 76FF                   ADD         #-1,R6
    00000D76              L993:                             
    00000D76 66E3                   MOV         R14,R6
    00000D78              L994:                             
    00000D78 D407                   MOV.L       L1163+26,R4; __$jetpack2
      fonctions.   281                break;
    00000D7A A09F                   BRA         L1132
    00000D7C 65D3                   MOV         R13,R5
    00000D7E              L1163:                            
    00000D7E 7536                   .DATA.W     H'7536
    00000D80 <00000000>             .DATA.L     __$jetpack1Alpha
    00000D84 <00000000>             .DATA.L     _IsKeyDown
    00000D88 <00000000>             .DATA.L     __$jetpack1
    00000D8C <00000010>             .DATA.L     H'00000010+__$jetpack1
    00000D90 <00000000>             .DATA.L     _ML_rectangle
    00000D94 <00000000>             .DATA.L     __$jetpack2Alpha
    00000D98 <00000000>             .DATA.L     __$jetpack2
    00000D9C              L816:                            ; case label 
      fonctions.   282                case 2:
      fonctions.   283                    if (IsKeyDown(KEY_CTRL_SHIFT))
    00000D9C 9473                   MOV.W       L1164,R4   ; H'7536
    00000D9E D33A                   MOV.L       L1164+2,R3 ; _IsKeyDown
    00000DA0 430B                   JSR         @R3
    00000DA2 0009                   NOP
    00000DA4 2008                   TST         R0,R0
    00000DA6 893E                   BT          L995
      fonctions.   284                    {
      fonctions.   285                        ML_bmp_and(jetpack3Alpha[(lvl%4<2)+1],x,lvl%8<4&&y==45?y-1:y,8,16);
    00000DA8 E310                   MOV         #16,R3
    00000DAA 2F36                   MOV.L       R3,@-R15
    00000DAC 52F1                   MOV.L       @(4,R15),R2
    00000DAE 32B3                   CMP/GE      R11,R2
    00000DB0 8D06                   BT/S        L996
    00000DB2 E708                   MOV         #8,R7
    00000DB4 60E3                   MOV         R14,R0
    00000DB6 882D                   CMP/EQ      #45,R0
    00000DB8 8B02                   BF          L996




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DBA 66E3                   MOV         R14,R6
    00000DBC A001                   BRA         L999
    00000DBE 76FF                   ADD         #-1,R6
    00000DC0              L996:                             
    00000DC0 66E3                   MOV         R14,R6
    00000DC2              L999:                             
    00000DC2 50F7                   MOV.L       @(28,R15),R0
    00000DC4 4011                   CMP/PZ      R0
    00000DC6 8F02                   BF/S        L997
    00000DC8 65D3                   MOV         R13,R5
    00000DCA A005                   BRA         L998
    00000DCC C903                   AND         #3,R0
    00000DCE              L997:                             
    00000DCE 6007                   NOT         R0,R0
    00000DD0 7001                   ADD         #1,R0
    00000DD2 C903                   AND         #3,R0
    00000DD4 6007                   NOT         R0,R0
    00000DD6 7001                   ADD         #1,R0
    00000DD8              L998:                             
    00000DD8 1F04                   MOV.L       R0,@(16,R15)
    00000DDA E302                   MOV         #2,R3
    00000DDC D22B                   MOV.L       L1164+6,R2 ; __$jetpack3Alpha
    00000DDE 3033                   CMP/GE      R3,R0
    00000DE0 0429                   MOVT        R4
    00000DE2 74FF                   ADD         #-1,R4
    00000DE4 644B                   NEG         R4,R4
    00000DE6 4408                   SHLL2       R4
    00000DE8 4408                   SHLL2       R4
    00000DEA 342C                   ADD         R2,R4
    00000DEC 4A0B                   JSR         @R10
    00000DEE 7410                   ADD         #16,R4
    00000DF0 7F04                   ADD         #4,R15
      fonctions.   286                        ML_bmp_or(jetpack3[(lvl%4<2)+1],x,lvl%8<4&&y==45?y-1:y,8,16);
    00000DF2 E310                   MOV         #16,R3
    00000DF4 2F36                   MOV.L       R3,@-R15
    00000DF6 52F1                   MOV.L       @(4,R15),R2
    00000DF8 32B3                   CMP/GE      R11,R2
    00000DFA 8D06                   BT/S        L1000
    00000DFC E708                   MOV         #8,R7
    00000DFE 60E3                   MOV         R14,R0
    00000E00 882D                   CMP/EQ      #45,R0
    00000E02 8B02                   BF          L1000
    00000E04 66E3                   MOV         R14,R6
    00000E06 A001                   BRA         L1001
    00000E08 76FF                   ADD         #-1,R6
    00000E0A              L1000:                            
    00000E0A 66E3                   MOV         R14,R6
    00000E0C              L1001:                            
    00000E0C 53F4                   MOV.L       @(16,R15),R3
    00000E0E 65D3                   MOV         R13,R5
    00000E10 E202                   MOV         #2,R2
    00000E12 3323                   CMP/GE      R2,R3
    00000E14 D31E                   MOV.L       L1164+10,R3; __$jetpack3
    00000E16 0429                   MOVT        R4
    00000E18 74FF                   ADD         #-1,R4
    00000E1A 644B                   NEG         R4,R4
    00000E1C 4408                   SHLL2       R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E1E 4408                   SHLL2       R4
    00000E20 343C                   ADD         R3,R4
    00000E22 A020                   BRA         L1131
    00000E24 7410                   ADD         #16,R4
    00000E26              L995:                             
      fonctions.   287                    }
      fonctions.   288                    else
      fonctions.   289                    {
      fonctions.   290                        ML_bmp_and(jetpack3Alpha[0],x,lvl%8<4&&y==45?y-1:y,8,16);
    00000E26 E310                   MOV         #16,R3
    00000E28 2F36                   MOV.L       R3,@-R15
    00000E2A 52F1                   MOV.L       @(4,R15),R2
    00000E2C 32B3                   CMP/GE      R11,R2
    00000E2E 8D06                   BT/S        L1003
    00000E30 E708                   MOV         #8,R7
    00000E32 60E3                   MOV         R14,R0
    00000E34 882D                   CMP/EQ      #45,R0
    00000E36 8B02                   BF          L1003
    00000E38 66E3                   MOV         R14,R6
    00000E3A A001                   BRA         L1004
    00000E3C 76FF                   ADD         #-1,R6
    00000E3E              L1003:                            
    00000E3E 66E3                   MOV         R14,R6
    00000E40              L1004:                            
    00000E40 D412                   MOV.L       L1164+6,R4 ; __$jetpack3Alpha
    00000E42 4A0B                   JSR         @R10
    00000E44 65D3                   MOV         R13,R5
    00000E46 7F04                   ADD         #4,R15
      fonctions.   291                        ML_bmp_or(jetpack3[0],x,lvl%8<4&&y==45?y-1:y,8,16);
    00000E48 E210                   MOV         #16,R2
    00000E4A 2F26                   MOV.L       R2,@-R15
    00000E4C 53F1                   MOV.L       @(4,R15),R3
    00000E4E 33B3                   CMP/GE      R11,R3
    00000E50 8D06                   BT/S        L1005
    00000E52 E708                   MOV         #8,R7
    00000E54 60E3                   MOV         R14,R0
    00000E56 882D                   CMP/EQ      #45,R0
    00000E58 8B02                   BF          L1005
    00000E5A 66E3                   MOV         R14,R6
    00000E5C A001                   BRA         L1006
    00000E5E 76FF                   ADD         #-1,R6
    00000E60              L1005:                            
    00000E60 66E3                   MOV         R14,R6
    00000E62              L1006:                            
    00000E62 65D3                   MOV         R13,R5
    00000E64 D40A                   MOV.L       L1164+10,R4; __$jetpack3
    00000E66              L1131:                            
    00000E66 4C0B                   JSR         @R12
    00000E68 0009                   NOP
      fonctions.   292                    }
      fonctions.   293                break;
    00000E6A A02A                   BRA         L980
    00000E6C 7F04                   ADD         #4,R15
    00000E6E              L817:                            ; case label 
      fonctions.   294                case 3:
      fonctions.   295                    ML_bmp_and(jetpack4Alpha,x,lvl%8<4&&y==45?y-1:y,8,16);
    00000E6E E310                   MOV         #16,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E70 2F36                   MOV.L       R3,@-R15
    00000E72 52F1                   MOV.L       @(4,R15),R2
    00000E74 32B3                   CMP/GE      R11,R2
    00000E76 8D0D                   BT/S        L1007
    00000E78 E708                   MOV         #8,R7
    00000E7A 60E3                   MOV         R14,R0
    00000E7C 882D                   CMP/EQ      #45,R0
    00000E7E 8B09                   BF          L1007
    00000E80 66E3                   MOV         R14,R6
    00000E82 A008                   BRA         L1008
    00000E84 76FF                   ADD         #-1,R6
    00000E86              L1164:                            
    00000E86 7536                   .DATA.W     H'7536
    00000E88 <00000000>             .DATA.L     _IsKeyDown
    00000E8C <00000000>             .DATA.L     __$jetpack3Alpha
    00000E90 <00000000>             .DATA.L     __$jetpack3
    00000E94              L1007:                            
    00000E94 66E3                   MOV         R14,R6
    00000E96              L1008:                            
    00000E96 D48D                   MOV.L       L1165,R4   ; __$jetpack4Alpha
    00000E98 4A0B                   JSR         @R10
    00000E9A 65D3                   MOV         R13,R5
    00000E9C 7F04                   ADD         #4,R15
      fonctions.   296                    ML_bmp_or(jetpack4,x,lvl%8<4&&y==45?y-1:y,8,16);
    00000E9E E210                   MOV         #16,R2
    00000EA0 2F26                   MOV.L       R2,@-R15
    00000EA2 53F1                   MOV.L       @(4,R15),R3
    00000EA4 33B3                   CMP/GE      R11,R3
    00000EA6 8D06                   BT/S        L1009
    00000EA8 E708                   MOV         #8,R7
    00000EAA 60E3                   MOV         R14,R0
    00000EAC 882D                   CMP/EQ      #45,R0
    00000EAE 8B02                   BF          L1009
    00000EB0 66E3                   MOV         R14,R6
    00000EB2 A001                   BRA         L1010
    00000EB4 76FF                   ADD         #-1,R6
    00000EB6              L1009:                            
    00000EB6 66E3                   MOV         R14,R6
    00000EB8              L1010:                            
    00000EB8 D485                   MOV.L       L1165+4,R4 ; __$jetpack4
    00000EBA 65D3                   MOV         R13,R5
      fonctions.   297                break;
    00000EBC              L1132:                            
    00000EBC 4C0B                   JSR         @R12
    00000EBE 0009                   NOP
    00000EC0 7F04                   ADD         #4,R15
    00000EC2              L980:                             
      fonctions.   298            }
      fonctions.   299    
      fonctions.   300            if (y == 45) // si on touche le sol
    00000EC2 60E3                   MOV         R14,R0
    00000EC4 882D                   CMP/EQ      #45,R0
    00000EC6 8B4A                   BF          L1011
      fonctions.   301            {
      fonctions.   302                ML_bmp_and_cl((lvl%8<4?barryDown1Alpha[sauvegarde->tenueEquipe]:barryDown2Alpha[sauvegarde->te
                         +nueEquipe]),x+7,lvl%8<4?y-1:y,10,16); // masque alpha de barry au sol
    00000EC8 E210                   MOV         #16,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000ECA 2F26                   MOV.L       R2,@-R15
    00000ECC 53F1                   MOV.L       @(4,R15),R3
    00000ECE 33B3                   CMP/GE      R11,R3
    00000ED0 8D03                   BT/S        L1012
    00000ED2 E70A                   MOV         #10,R7
    00000ED4 66E3                   MOV         R14,R6
    00000ED6 A001                   BRA         L1014
    00000ED8 76FF                   ADD         #-1,R6
    00000EDA              L1012:                            
    00000EDA 66E3                   MOV         R14,R6
    00000EDC              L1014:                            
    00000EDC 55F3                   MOV.L       @(12,R15),R5
    00000EDE 53F1                   MOV.L       @(4,R15),R3
    00000EE0 33B3                   CMP/GE      R11,R3
    00000EE2 8909                   BT          L1013
    00000EE4 D27B                   MOV.L       L1165+8,R2 ; _sauvegarde
    00000EE6 E014                   MOV         #20,R0
    00000EE8 D37B                   MOV.L       L1165+12,R3; __$barryDown1Alpha
    00000EEA 6422                   MOV.L       @R2,R4
    00000EEC 044C                   MOV.B       @(R0,R4),R4
    00000EEE 644C                   EXTU.B      R4,R4
    00000EF0 4408                   SHLL2       R4
    00000EF2 4408                   SHLL2       R4
    00000EF4 A009                   BRA         L1133
    00000EF6 4400                   SHLL        R4
    00000EF8              L1013:                            
    00000EF8 D276                   MOV.L       L1165+8,R2 ; _sauvegarde
    00000EFA E014                   MOV         #20,R0
    00000EFC D377                   MOV.L       L1165+16,R3; __$barryDown2Alpha
    00000EFE 6422                   MOV.L       @R2,R4
    00000F00 044C                   MOV.B       @(R0,R4),R4
    00000F02 644C                   EXTU.B      R4,R4
    00000F04 4408                   SHLL2       R4
    00000F06 4408                   SHLL2       R4
    00000F08 4400                   SHLL        R4
    00000F0A              L1133:                            
    00000F0A 343C                   ADD         R3,R4
    00000F0C D374                   MOV.L       L1165+20,R3; _ML_bmp_and_cl
    00000F0E 430B                   JSR         @R3
    00000F10 0009                   NOP
    00000F12 7F04                   ADD         #4,R15
      fonctions.   303                ML_bmp_or((lvl%8<4?barryDown1[sauvegarde->tenueEquipe]:barryDown2[sauvegarde->tenueEquipe]),x+
                         +7,lvl%8<4?y-1:y,10,16); // affichage de barry au sol
    00000F14 E210                   MOV         #16,R2
    00000F16 2F26                   MOV.L       R2,@-R15
    00000F18 53F1                   MOV.L       @(4,R15),R3
    00000F1A 33B3                   CMP/GE      R11,R3
    00000F1C 8D03                   BT/S        L1016
    00000F1E E70A                   MOV         #10,R7
    00000F20 66E3                   MOV         R14,R6
    00000F22 A001                   BRA         L1018
    00000F24 76FF                   ADD         #-1,R6
    00000F26              L1016:                            
    00000F26 66E3                   MOV         R14,R6
    00000F28              L1018:                            
    00000F28 55F3                   MOV.L       @(12,R15),R5
    00000F2A 53F1                   MOV.L       @(4,R15),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F2C 33B3                   CMP/GE      R11,R3
    00000F2E 8909                   BT          L1017
    00000F30 D268                   MOV.L       L1165+8,R2 ; _sauvegarde
    00000F32 E014                   MOV         #20,R0
    00000F34 D36B                   MOV.L       L1165+24,R3; __$barryDown1
    00000F36 6422                   MOV.L       @R2,R4
    00000F38 044C                   MOV.B       @(R0,R4),R4
    00000F3A 644C                   EXTU.B      R4,R4
    00000F3C 4408                   SHLL2       R4
    00000F3E 4408                   SHLL2       R4
    00000F40 A009                   BRA         L1134
    00000F42 4400                   SHLL        R4
    00000F44              L1017:                            
    00000F44 D263                   MOV.L       L1165+8,R2 ; _sauvegarde
    00000F46 E014                   MOV         #20,R0
    00000F48 D367                   MOV.L       L1165+28,R3; __$barryDown2
    00000F4A 6422                   MOV.L       @R2,R4
    00000F4C 044C                   MOV.B       @(R0,R4),R4
    00000F4E 644C                   EXTU.B      R4,R4
    00000F50 4408                   SHLL2       R4
    00000F52 4408                   SHLL2       R4
    00000F54 4400                   SHLL        R4
    00000F56              L1134:                            
    00000F56 4C0B                   JSR         @R12
    00000F58 343C                   ADD         R3,R4
    00000F5A A020                   BRA         L976
    00000F5C 7F04                   ADD         #4,R15
    00000F5E              L1011:                            
      fonctions.   304            }
      fonctions.   305            else //sinon, si on est en l'air
      fonctions.   306            {
      fonctions.   307                ML_bmp_and_cl(barryAlpha[sauvegarde->tenueEquipe],x+7,y,10,16); // masque alpha de barry en l'
                         +air
    00000F5E E210                   MOV         #16,R2
    00000F60 D362                   MOV.L       L1165+32,R3; __$barryAlpha
    00000F62 E70A                   MOV         #10,R7
    00000F64 2F26                   MOV.L       R2,@-R15
    00000F66 66E3                   MOV         R14,R6
    00000F68 55F3                   MOV.L       @(12,R15),R5
    00000F6A E014                   MOV         #20,R0
    00000F6C D25C                   MOV.L       L1165+20,R2; _ML_bmp_and_cl
    00000F6E 6492                   MOV.L       @R9,R4
    00000F70 044C                   MOV.B       @(R0,R4),R4
    00000F72 644C                   EXTU.B      R4,R4
    00000F74 4408                   SHLL2       R4
    00000F76 4408                   SHLL2       R4
    00000F78 4400                   SHLL        R4
    00000F7A 420B                   JSR         @R2
    00000F7C 343C                   ADD         R3,R4
      fonctions.   308                ML_bmp_or(barryUp[sauvegarde->tenueEquipe],x+7,y,10,16); // affichage de barry en l'air
    00000F7E E110                   MOV         #16,R1
    00000F80 D35B                   MOV.L       L1165+36,R3; __$barryUp
    00000F82 E70A                   MOV         #10,R7
    00000F84 2F16                   MOV.L       R1,@-R15
    00000F86 66E3                   MOV         R14,R6
    00000F88 55F4                   MOV.L       @(16,R15),R5
    00000F8A E014                   MOV         #20,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F8C 6492                   MOV.L       @R9,R4
    00000F8E 044C                   MOV.B       @(R0,R4),R4
    00000F90 644C                   EXTU.B      R4,R4
    00000F92 4408                   SHLL2       R4
    00000F94 4408                   SHLL2       R4
    00000F96 4400                   SHLL        R4
    00000F98 4C0B                   JSR         @R12
    00000F9A 343C                   ADD         R3,R4
    00000F9C 7F08                   ADD         #8,R15
    00000F9E              L976:                             
    00000F9E 62D3                   MOV         R13,R2
    00000FA0 720C                   ADD         #12,R2
    00000FA2 63E3                   MOV         R14,R3
    00000FA4 1F28                   MOV.L       R2,@(32,R15)
    00000FA6 73FF                   ADD         #-1,R3
    00000FA8 1F33                   MOV.L       R3,@(12,R15)
    00000FAA 50F1                   MOV.L       @(4,R15),R0
    00000FAC 8801                   CMP/EQ      #1,R0
    00000FAE 8B54                   BF          L1021
      fonctions.   309            }
      fonctions.   310        }
      fonctions.   311        if (vehicule == 1)
      fonctions.   312        {
      fonctions.   313            ML_filled_ellipse(x+12,60,5*y/45+6,y/45+1,ML_BLACK);
    00000FB0 2F86                   MOV.L       R8,@-R15
    00000FB2 E53C                   MOV         #60,R5
    00000FB4 D14F                   MOV.L       L1165+40,R1; _ML_filled_ellipse
    00000FB6 57F6                   MOV.L       @(24,R15),R7
    00000FB8 56F5                   MOV.L       @(20,R15),R6
    00000FBA 7701                   ADD         #1,R7
    00000FBC 7606                   ADD         #6,R6
    00000FBE 410B                   JSR         @R1
    00000FC0 6423                   MOV         R2,R4
      fonctions.   314    
      fonctions.   315            if (y == 44) // si la moto est au sol
    00000FC2 60E3                   MOV         R14,R0
    00000FC4 882C                   CMP/EQ      #44,R0
    00000FC6 8F2C                   BF/S        L1022
    00000FC8 7F04                   ADD         #4,R15
      fonctions.   316            {
      fonctions.   317                ML_bmp_and(motoAlpha,x,y-1,24,24); // masque alpha de la moto au sol
    00000FCA E218                   MOV         #24,R2
    00000FCC D44A                   MOV.L       L1165+44,R4; __$motoAlpha
    00000FCE 6723                   MOV         R2,R7
    00000FD0 2F26                   MOV.L       R2,@-R15
    00000FD2 56F4                   MOV.L       @(16,R15),R6
    00000FD4 4A0B                   JSR         @R10
    00000FD6 65D3                   MOV         R13,R5
    00000FD8 7F04                   ADD         #4,R15
      fonctions.   318                ML_bmp_or(lvl%8<4||sauvegarde->ameliorationNoir[0]==2?moto[sauvegarde->ameliorationNoir[0]==2]
                         +:moto2,x,y-1,24,24); // affichage de la moto au sol
    00000FDA E318                   MOV         #24,R3
    00000FDC 2F36                   MOV.L       R3,@-R15
    00000FDE 6733                   MOV         R3,R7
    00000FE0 56F4                   MOV.L       @(16,R15),R6
    00000FE2 52F1                   MOV.L       @(4,R15),R2
    00000FE4 32B3                   CMP/GE      R11,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FE6 8F07                   BF/S        L1024
    00000FE8 65D3                   MOV         R13,R5
    00000FEA D13A                   MOV.L       L1165+8,R1 ; _sauvegarde
    00000FEC 6012                   MOV.L       @R1,R0
    00000FEE 701A                   ADD         #26,R0
    00000FF0 6000                   MOV.B       @R0,R0
    00000FF2 600C                   EXTU.B      R0,R0
    00000FF4 8802                   CMP/EQ      #2,R0
    00000FF6 8B0F                   BF          L1023
    00000FF8              L1024:                            
    00000FF8 D336                   MOV.L       L1165+8,R3 ; _sauvegarde
    00000FFA 6032                   MOV.L       @R3,R0
    00000FFC D23F                   MOV.L       L1165+48,R2; __$moto
    00000FFE 701A                   ADD         #26,R0
    00001000 6000                   MOV.B       @R0,R0
    00001002 600C                   EXTU.B      R0,R0
    00001004 8802                   CMP/EQ      #2,R0
    00001006 0429                   MOVT        R4
    00001008 6343                   MOV         R4,R3
    0000100A 4408                   SHLL2       R4
    0000100C 4400                   SHLL        R4
    0000100E 343C                   ADD         R3,R4
    00001010 4408                   SHLL2       R4
    00001012 4400                   SHLL        R4
    00001014 A001                   BRA         L1025
    00001016 342C                   ADD         R2,R4
    00001018              L1023:                            
    00001018 D439                   MOV.L       L1165+52,R4; __$moto2
    0000101A              L1025:                            
    0000101A 4C0B                   JSR         @R12
    0000101C 0009                   NOP
    0000101E A01C                   BRA         L1021
    00001020 7F04                   ADD         #4,R15
    00001022              L1022:                            
      fonctions.   319            }
      fonctions.   320            else
      fonctions.   321            {
      fonctions.   322                ML_bmp_and(motoAirAlpha,x,y,24,24); // masque alpha de la moto en l'air
    00001022 E318                   MOV         #24,R3
    00001024 D437                   MOV.L       L1165+56,R4; __$motoAirAlpha
    00001026 66E3                   MOV         R14,R6
    00001028 2F36                   MOV.L       R3,@-R15
    0000102A 6733                   MOV         R3,R7
    0000102C 4A0B                   JSR         @R10
    0000102E 65D3                   MOV         R13,R5
      fonctions.   323                ML_bmp_or(motoAir[sauvegarde->ameliorationNoir[0]==2],x,y,24,24); // affichage de la moto en l
                         +'air
    00001030 D135                   MOV.L       L1165+60,R1; __$motoAir
    00001032 E218                   MOV         #24,R2
    00001034 2F26                   MOV.L       R2,@-R15
    00001036 6723                   MOV         R2,R7
    00001038 6092                   MOV.L       @R9,R0
    0000103A 66E3                   MOV         R14,R6
    0000103C 65D3                   MOV         R13,R5
    0000103E 701A                   ADD         #26,R0
    00001040 6000                   MOV.B       @R0,R0
    00001042 600C                   EXTU.B      R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001044 8802                   CMP/EQ      #2,R0
    00001046 0429                   MOVT        R4
    00001048 6343                   MOV         R4,R3
    0000104A 4408                   SHLL2       R4
    0000104C 4400                   SHLL        R4
    0000104E 343C                   ADD         R3,R4
    00001050 4408                   SHLL2       R4
    00001052 4400                   SHLL        R4
    00001054 4C0B                   JSR         @R12
    00001056 341C                   ADD         R1,R4
    00001058 7F08                   ADD         #8,R15
    0000105A              L1021:                            
      fonctions.   324            }
      fonctions.   325        }
      fonctions.   326        if (vehicule == 2)
    0000105A 50F1                   MOV.L       @(4,R15),R0
    0000105C 8802                   CMP/EQ      #2,R0
    0000105E 8901                   BT          L1166
    00001060 A0B7                   BRA         L1027
    00001062 0009                   NOP
    00001064              L1166:                            
      fonctions.   327        {
      fonctions.   328            ML_filled_ellipse(x+3,60,5*y/45+2,y/45+1,ML_BLACK);
    00001064 2F86                   MOV.L       R8,@-R15
    00001066 E53C                   MOV         #60,R5
    00001068 D322                   MOV.L       L1165+40,R3; _ML_filled_ellipse
    0000106A 64D3                   MOV         R13,R4
    0000106C 57F6                   MOV.L       @(24,R15),R7
    0000106E 7701                   ADD         #1,R7
    00001070 56F5                   MOV.L       @(20,R15),R6
    00001072 7602                   ADD         #2,R6
    00001074 430B                   JSR         @R3
    00001076 7403                   ADD         #3,R4
      fonctions.   329    
      fonctions.   330            ML_line(x+5,y+8,x+45,position,ML_BLACK);
    00001078 2F86                   MOV.L       R8,@-R15
    0000107A 66D3                   MOV         R13,R6
    0000107C D324                   MOV.L       L1165+68,R3; _ML_line
    0000107E 65E3                   MOV         R14,R5
    00001080 D222                   MOV.L       L1165+64,R2; __$position
    00001082 64D3                   MOV         R13,R4
    00001084 6722                   MOV.L       @R2,R7
    00001086 762D                   ADD         #45,R6
    00001088 7508                   ADD         #8,R5
    0000108A 430B                   JSR         @R3
    0000108C 7405                   ADD         #5,R4
    0000108E 7F08                   ADD         #8,R15
      fonctions.   331    
      fonctions.   332            if (phase == 0) // phase initiale du teleporteur
    00001090 D320                   MOV.L       L1165+72,R3; __$phase
    00001092 6132                   MOV.L       @R3,R1
    00001094 D220                   MOV.L       L1165+76,R2; __nes
    00001096 420B                   JSR         @R2
    00001098 E000                   MOV         #0,R0
    0000109A 8800                   CMP/EQ      #0,R0
    0000109C 8B42                   BF          L1028
      fonctions.   333            {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      fonctions.   334                ML_bmp_and(teleporteur1Alpha,x,y,8,16);
    0000109E E210                   MOV         #16,R2
    000010A0 D41E                   MOV.L       L1165+80,R4; __$teleporteur1Alpha
    000010A2 E708                   MOV         #8,R7
    000010A4 2F26                   MOV.L       R2,@-R15
    000010A6 66E3                   MOV         R14,R6
    000010A8 4A0B                   JSR         @R10
    000010AA 65D3                   MOV         R13,R5
      fonctions.   335                ML_bmp_or(teleporteur1[sauvegarde->ameliorationNoir[1]==2],x,y,8,16);
    000010AC D21C                   MOV.L       L1165+84,R2; __$teleporteur1
    000010AE E310                   MOV         #16,R3
    000010B0 2F36                   MOV.L       R3,@-R15
    000010B2 E708                   MOV         #8,R7
    000010B4 6092                   MOV.L       @R9,R0
    000010B6 E11B                   MOV         #27,R1
    000010B8 001C                   MOV.B       @(R0,R1),R0
    000010BA 66E3                   MOV         R14,R6
    000010BC 65D3                   MOV         R13,R5
    000010BE 600C                   EXTU.B      R0,R0
    000010C0 8802                   CMP/EQ      #2,R0
    000010C2 0429                   MOVT        R4
    000010C4 4408                   SHLL2       R4
    000010C6 4408                   SHLL2       R4
    000010C8 A05A                   BRA         L1142
    000010CA 342C                   ADD         R2,R4
    000010CC              L1165:                            
    000010CC <00000000>             .DATA.L     __$jetpack4Alpha
    000010D0 <00000000>             .DATA.L     __$jetpack4
    000010D4 <00000000>             .DATA.L     _sauvegarde
    000010D8 <00000000>             .DATA.L     __$barryDown1Alpha
    000010DC <00000000>             .DATA.L     __$barryDown2Alpha
    000010E0 <00000000>             .DATA.L     _ML_bmp_and_cl
    000010E4 <00000000>             .DATA.L     __$barryDown1
    000010E8 <00000000>             .DATA.L     __$barryDown2
    000010EC <00000000>             .DATA.L     __$barryAlpha
    000010F0 <00000000>             .DATA.L     __$barryUp
    000010F4 <00000000>             .DATA.L     _ML_filled_ellipse
    000010F8 <00000000>             .DATA.L     __$motoAlpha
    000010FC <00000000>             .DATA.L     __$moto
    00001100 <00000000>             .DATA.L     __$moto2
    00001104 <00000000>             .DATA.L     __$motoAirAlpha
    00001108 <00000000>             .DATA.L     __$motoAir
    0000110C <00000000>             .DATA.L     __$position
    00001110 <00000000>             .DATA.L     _ML_line
    00001114 <00000000>             .DATA.L     __$phase
    00001118 <00000000>             .DATA.L     __nes
    0000111C <00000000>             .DATA.L     __$teleporteur1Alpha
    00001120 <00000000>             .DATA.L     __$teleporteur1
    00001124              L1028:                            
      fonctions.   336            }
      fonctions.   337            else if (phase == 1 || phase == 2 || phase == 7 || phase == 8) // premiere animation
    00001124 D07E                   MOV.L       L1167,R0   ; H'3F800000
    00001126 D27F                   MOV.L       L1167+4,R2 ; __eqs
    00001128 420B                   JSR         @R2
    0000112A 6132                   MOV.L       @R3,R1
    0000112C 8800                   CMP/EQ      #0,R0
    0000112E 8B11                   BF          L1031




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001130 D07D                   MOV.L       L1167+8,R0 ; H'40000000
    00001132 D27C                   MOV.L       L1167+4,R2 ; __eqs
    00001134 420B                   JSR         @R2
    00001136 6132                   MOV.L       @R3,R1
    00001138 8800                   CMP/EQ      #0,R0
    0000113A 8B0B                   BF          L1031
    0000113C D07B                   MOV.L       L1167+12,R0; H'40E00000
    0000113E D279                   MOV.L       L1167+4,R2 ; __eqs
    00001140 420B                   JSR         @R2
    00001142 6132                   MOV.L       @R3,R1
    00001144 8800                   CMP/EQ      #0,R0
    00001146 8B05                   BF          L1031
    00001148 D079                   MOV.L       L1167+16,R0; H'41000000
    0000114A D27A                   MOV.L       L1167+20,R2; __nes
    0000114C 420B                   JSR         @R2
    0000114E 6132                   MOV.L       @R3,R1
    00001150 8800                   CMP/EQ      #0,R0
    00001152 8B19                   BF          L1030
    00001154              L1031:                            
      fonctions.   338            {
      fonctions.   339                ML_bmp_and(teleporteur2Alpha,x,y,8,16);
    00001154 D478                   MOV.L       L1167+24,R4; __$teleporteur2Alpha
    00001156 E310                   MOV         #16,R3
    00001158 2F36                   MOV.L       R3,@-R15
    0000115A E708                   MOV         #8,R7
    0000115C 66E3                   MOV         R14,R6
    0000115E 4A0B                   JSR         @R10
    00001160 65D3                   MOV         R13,R5
      fonctions.   340                ML_bmp_or(teleporteur2[sauvegarde->ameliorationNoir[1]==2],x,y,8,16);
    00001162 E210                   MOV         #16,R2
    00001164 D375                   MOV.L       L1167+28,R3; __$teleporteur2
    00001166 E708                   MOV         #8,R7
    00001168 2F26                   MOV.L       R2,@-R15
    0000116A 66E3                   MOV         R14,R6
    0000116C 6092                   MOV.L       @R9,R0
    0000116E E11B                   MOV         #27,R1
    00001170 001C                   MOV.B       @(R0,R1),R0
    00001172 65D3                   MOV         R13,R5
    00001174 600C                   EXTU.B      R0,R0
    00001176 8802                   CMP/EQ      #2,R0
    00001178 0429                   MOVT        R4
    0000117A 4408                   SHLL2       R4
    0000117C 4408                   SHLL2       R4
    0000117E 343C                   ADD         R3,R4
    00001180              L1142:                            
    00001180 4C0B                   JSR         @R12
    00001182 0009                   NOP
    00001184 A025                   BRA         L1027
    00001186 7F08                   ADD         #8,R15
    00001188              L1030:                            
      fonctions.   341            }
      fonctions.   342            else if (phase >= 3 || phase <= 6) // deuxieme animation
    00001188 D26D                   MOV.L       L1167+32,R2; __$phase
    0000118A D06E                   MOV.L       L1167+36,R0; H'40400000
    0000118C D36E                   MOV.L       L1167+40,R3; __ges
    0000118E 430B                   JSR         @R3
    00001190 6122                   MOV.L       @R2,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001192 8800                   CMP/EQ      #0,R0
    00001194 8B05                   BF          L1034
    00001196 D06D                   MOV.L       L1167+44,R0; H'40C00000
    00001198 D36D                   MOV.L       L1167+48,R3; __les
    0000119A 430B                   JSR         @R3
    0000119C 6122                   MOV.L       @R2,R1
    0000119E 8800                   CMP/EQ      #0,R0
    000011A0 8917                   BT          L1027
    000011A2              L1034:                            
      fonctions.   343            {
      fonctions.   344                ML_bmp_and(teleporteur3Alpha,x,y,8,16);
    000011A2 E210                   MOV         #16,R2
    000011A4 D46B                   MOV.L       L1167+52,R4; __$teleporteur3Alpha
    000011A6 E708                   MOV         #8,R7
    000011A8 2F26                   MOV.L       R2,@-R15
    000011AA 66E3                   MOV         R14,R6
    000011AC 4A0B                   JSR         @R10
    000011AE 65D3                   MOV         R13,R5
      fonctions.   345                ML_bmp_or(teleporteur3[sauvegarde->ameliorationNoir[1]==2],x,y,8,16);
    000011B0 D269                   MOV.L       L1167+56,R2; __$teleporteur3
    000011B2 E310                   MOV         #16,R3
    000011B4 2F36                   MOV.L       R3,@-R15
    000011B6 E708                   MOV         #8,R7
    000011B8 6092                   MOV.L       @R9,R0
    000011BA E11B                   MOV         #27,R1
    000011BC 001C                   MOV.B       @(R0,R1),R0
    000011BE 66E3                   MOV         R14,R6
    000011C0 65D3                   MOV         R13,R5
    000011C2 600C                   EXTU.B      R0,R0
    000011C4 8802                   CMP/EQ      #2,R0
    000011C6 0429                   MOVT        R4
    000011C8 4408                   SHLL2       R4
    000011CA 4408                   SHLL2       R4
    000011CC 4C0B                   JSR         @R12
    000011CE 342C                   ADD         R2,R4
    000011D0 7F08                   ADD         #8,R15
    000011D2              L1027:                            
      fonctions.   346            }
      fonctions.   347        }
      fonctions.   348        if (vehicule == 3)
    000011D2 50F1                   MOV.L       @(4,R15),R0
    000011D4 8803                   CMP/EQ      #3,R0
    000011D6 8901                   BT          L1168
    000011D8 A102                   BRA         L1035
    000011DA 0009                   NOP
    000011DC              L1168:                            
      fonctions.   349        {
      fonctions.   350            ML_filled_ellipse(x+7,60,5*y/45+2,y/45+1,ML_BLACK);
    000011DC 2F86                   MOV.L       R8,@-R15
    000011DE E53C                   MOV         #60,R5
    000011E0 D35E                   MOV.L       L1167+60,R3; _ML_filled_ellipse
    000011E2 57F6                   MOV.L       @(24,R15),R7
    000011E4 56F5                   MOV.L       @(20,R15),R6
    000011E6 7701                   ADD         #1,R7
    000011E8 7602                   ADD         #2,R6
    000011EA 430B                   JSR         @R3
    000011EC 54F3                   MOV.L       @(12,R15),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      fonctions.   351    
      fonctions.   352            if (y == 0 && direction == 1) // si on est au plafond
    000011EE 2EE8                   TST         R14,R14
    000011F0 8F45                   BF/S        L1036
    000011F2 7F04                   ADD         #4,R15
    000011F4 D35A                   MOV.L       L1167+64,R3; __$direction
    000011F6 6032                   MOV.L       @R3,R0
    000011F8 8801                   CMP/EQ      #1,R0
    000011FA 8B40                   BF          L1036
      fonctions.   353            {
      fonctions.   354                ML_bmp_and((lvl%8<4?gravitySolDown1Alpha:gravitySolDown2Alpha),x,lvl%8<4?y+1:y,16,24); // masq
                         +ue alpha au plafond
    000011FC E118                   MOV         #24,R1
    000011FE 2F16                   MOV.L       R1,@-R15
    00001200 53F1                   MOV.L       @(4,R15),R3
    00001202 33B3                   CMP/GE      R11,R3
    00001204 8D03                   BT/S        L1037
    00001206 E710                   MOV         #16,R7
    00001208 66E3                   MOV         R14,R6
    0000120A A001                   BRA         L1039
    0000120C 7601                   ADD         #1,R6
    0000120E              L1037:                            
    0000120E 66E3                   MOV         R14,R6
    00001210              L1039:                            
    00001210 52F1                   MOV.L       @(4,R15),R2
    00001212 32B3                   CMP/GE      R11,R2
    00001214 8D03                   BT/S        L1038
    00001216 65D3                   MOV         R13,R5
    00001218 D452                   MOV.L       L1167+68,R4; __$gravitySolDown1Alpha
    0000121A A001                   BRA         L1040
    0000121C 0009                   NOP
    0000121E              L1038:                            
    0000121E D452                   MOV.L       L1167+72,R4; __$gravitySolDown2Alpha
    00001220              L1040:                            
    00001220 4A0B                   JSR         @R10
    00001222 0009                   NOP
    00001224 7F04                   ADD         #4,R15
      fonctions.   355                ML_bmp_or((lvl%8<4?gravitySolDown1[sauvegarde->ameliorationNoir[2]==2]:gravitySolDown2[sauvega
                         +rde->ameliorationNoir[2]==2]),x,lvl%8<4?y-1:y,16,24); // animation un pied sur l'autre au plafond
    00001226 E218                   MOV         #24,R2
    00001228 2F26                   MOV.L       R2,@-R15
    0000122A 53F1                   MOV.L       @(4,R15),R3
    0000122C 33B3                   CMP/GE      R11,R3
    0000122E 8D02                   BT/S        L1041
    00001230 E710                   MOV         #16,R7
    00001232 A001                   BRA         L1043
    00001234 56F4                   MOV.L       @(16,R15),R6
    00001236              L1041:                            
    00001236 66E3                   MOV         R14,R6
    00001238              L1043:                            
    00001238 52F1                   MOV.L       @(4,R15),R2
    0000123A 32B3                   CMP/GE      R11,R2
    0000123C 8D0E                   BT/S        L1042
    0000123E 65D3                   MOV         R13,R5
    00001240 D34A                   MOV.L       L1167+76,R3; _sauvegarde
    00001242 E11C                   MOV         #28,R1
    00001244 6032                   MOV.L       @R3,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001246 001C                   MOV.B       @(R0,R1),R0
    00001248 600C                   EXTU.B      R0,R0
    0000124A 8802                   CMP/EQ      #2,R0
    0000124C D048                   MOV.L       L1167+80,R0; __$gravitySolDown1
    0000124E 0429                   MOVT        R4
    00001250 6243                   MOV         R4,R2
    00001252 4400                   SHLL        R4
    00001254 342C                   ADD         R2,R4
    00001256 4408                   SHLL2       R4
    00001258 A00D                   BRA         L1135
    0000125A 4408                   SHLL2       R4
    0000125C              L1042:                            
    0000125C D343                   MOV.L       L1167+76,R3; _sauvegarde
    0000125E E11C                   MOV         #28,R1
    00001260 6032                   MOV.L       @R3,R0
    00001262 001C                   MOV.B       @(R0,R1),R0
    00001264 600C                   EXTU.B      R0,R0
    00001266 8802                   CMP/EQ      #2,R0
    00001268 D042                   MOV.L       L1167+84,R0; __$gravitySolDown2
    0000126A 0429                   MOVT        R4
    0000126C 6243                   MOV         R4,R2
    0000126E 4400                   SHLL        R4
    00001270 342C                   ADD         R2,R4
    00001272 4408                   SHLL2       R4
    00001274 4408                   SHLL2       R4
    00001276              L1135:                            
    00001276 4C0B                   JSR         @R12
    00001278 340C                   ADD         R0,R4
    0000127A A0B1                   BRA         L1035
    0000127C 7F04                   ADD         #4,R15
    0000127E              L1036:                            
      fonctions.   356            }
      fonctions.   357            else if (y == 44 && direction == 0) // si on est au sol
    0000127E 60E3                   MOV         R14,R0
    00001280 882C                   CMP/EQ      #44,R0
    00001282 8B41                   BF          L1046
    00001284 D336                   MOV.L       L1167+64,R3; __$direction
    00001286 6232                   MOV.L       @R3,R2
    00001288 2228                   TST         R2,R2
    0000128A 8B3D                   BF          L1046
      fonctions.   358            {
      fonctions.   359                ML_bmp_and((lvl%8<4?gravitySolUp1Alpha:gravitySolUp2Alpha),x,lvl%8<4?y-1:y,16,24); // masque a
                         +lpha au sol
    0000128C E218                   MOV         #24,R2
    0000128E 2F26                   MOV.L       R2,@-R15
    00001290 53F1                   MOV.L       @(4,R15),R3
    00001292 33B3                   CMP/GE      R11,R3
    00001294 8D02                   BT/S        L1047
    00001296 E710                   MOV         #16,R7
    00001298 A001                   BRA         L1049
    0000129A 56F4                   MOV.L       @(16,R15),R6
    0000129C              L1047:                            
    0000129C 66E3                   MOV         R14,R6
    0000129E              L1049:                            
    0000129E 52F1                   MOV.L       @(4,R15),R2
    000012A0 32B3                   CMP/GE      R11,R2
    000012A2 8D03                   BT/S        L1048




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012A4 65D3                   MOV         R13,R5
    000012A6 D434                   MOV.L       L1167+88,R4; __$gravitySolUp1Alpha
    000012A8 A001                   BRA         L1050
    000012AA 0009                   NOP
    000012AC              L1048:                            
    000012AC D433                   MOV.L       L1167+92,R4; __$gravitySolUp2Alpha
    000012AE              L1050:                            
    000012AE 4A0B                   JSR         @R10
    000012B0 0009                   NOP
    000012B2 7F04                   ADD         #4,R15
      fonctions.   360                ML_bmp_or((lvl%8<4?gravitySolUp1[sauvegarde->ameliorationNoir[2]==2]:gravitySolUp2[sauvegarde-
                         +>ameliorationNoir[2]==2]),x,lvl%8<4?y-1:y,16,24); // animation un pied sur l'autre au sol
    000012B4 E218                   MOV         #24,R2
    000012B6 2F26                   MOV.L       R2,@-R15
    000012B8 53F1                   MOV.L       @(4,R15),R3
    000012BA 33B3                   CMP/GE      R11,R3
    000012BC 8D02                   BT/S        L1051
    000012BE E710                   MOV         #16,R7
    000012C0 A001                   BRA         L1053
    000012C2 56F4                   MOV.L       @(16,R15),R6
    000012C4              L1051:                            
    000012C4 66E3                   MOV         R14,R6
    000012C6              L1053:                            
    000012C6 52F1                   MOV.L       @(4,R15),R2
    000012C8 32B3                   CMP/GE      R11,R2
    000012CA 8D0E                   BT/S        L1052
    000012CC 65D3                   MOV         R13,R5
    000012CE E11C                   MOV         #28,R1
    000012D0 D326                   MOV.L       L1167+76,R3; _sauvegarde
    000012D2 6032                   MOV.L       @R3,R0
    000012D4 001C                   MOV.B       @(R0,R1),R0
    000012D6 600C                   EXTU.B      R0,R0
    000012D8 8802                   CMP/EQ      #2,R0
    000012DA 0429                   MOVT        R4
    000012DC D028                   MOV.L       L1167+96,R0; __$gravitySolUp1
    000012DE 6243                   MOV         R4,R2
    000012E0 4400                   SHLL        R4
    000012E2 342C                   ADD         R2,R4
    000012E4 4408                   SHLL2       R4
    000012E6 A00D                   BRA         L1136
    000012E8 4408                   SHLL2       R4
    000012EA              L1052:                            
    000012EA E11C                   MOV         #28,R1
    000012EC D31F                   MOV.L       L1167+76,R3; _sauvegarde
    000012EE 6032                   MOV.L       @R3,R0
    000012F0 001C                   MOV.B       @(R0,R1),R0
    000012F2 600C                   EXTU.B      R0,R0
    000012F4 8802                   CMP/EQ      #2,R0
    000012F6 0429                   MOVT        R4
    000012F8 D022                   MOV.L       L1167+100,R0; __$gravitySolUp2
    000012FA 6243                   MOV         R4,R2
    000012FC 4400                   SHLL        R4
    000012FE 342C                   ADD         R2,R4
    00001300 4408                   SHLL2       R4
    00001302 4408                   SHLL2       R4
    00001304              L1136:                            
    00001304 A069                   BRA         L1138




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001306 340C                   ADD         R0,R4
    00001308              L1046:                            
      fonctions.   361            }
      fonctions.   362            else // si on est en "gravitation" (dans les airs)
      fonctions.   363            {
      fonctions.   364                ML_bmp_and(direction?gravitySolDown1Alpha:gravitySolUp1Alpha,x,y,16,24); // masque alpha en l'
                         +air haut ou bas
    00001308 D115                   MOV.L       L1167+64,R1; __$direction
    0000130A E318                   MOV         #24,R3
    0000130C 2F36                   MOV.L       R3,@-R15
    0000130E E710                   MOV         #16,R7
    00001310 6212                   MOV.L       @R1,R2
    00001312 66E3                   MOV         R14,R6
    00001314 2228                   TST         R2,R2
    00001316 8D37                   BT/S        L1056
    00001318 65D3                   MOV         R13,R5
    0000131A D412                   MOV.L       L1167+68,R4; __$gravitySolDown1Alpha
    0000131C A035                   BRA         L1057
    0000131E 0009                   NOP
    00001320              L1167:                            
    00001320 3F800000               .DATA.L     H'3F800000
    00001324 <00000000>             .DATA.L     __eqs
    00001328 40000000               .DATA.L     H'40000000
    0000132C 40E00000               .DATA.L     H'40E00000
    00001330 41000000               .DATA.L     H'41000000
    00001334 <00000000>             .DATA.L     __nes
    00001338 <00000000>             .DATA.L     __$teleporteur2Alpha
    0000133C <00000000>             .DATA.L     __$teleporteur2
    00001340 <00000000>             .DATA.L     __$phase
    00001344 40400000               .DATA.L     H'40400000
    00001348 <00000000>             .DATA.L     __ges
    0000134C 40C00000               .DATA.L     H'40C00000
    00001350 <00000000>             .DATA.L     __les
    00001354 <00000000>             .DATA.L     __$teleporteur3Alpha
    00001358 <00000000>             .DATA.L     __$teleporteur3
    0000135C <00000000>             .DATA.L     _ML_filled_ellipse
    00001360 <00000000>             .DATA.L     __$direction
    00001364 <00000000>             .DATA.L     __$gravitySolDown1Alpha
    00001368 <00000000>             .DATA.L     __$gravitySolDown2Alpha
    0000136C <00000000>             .DATA.L     _sauvegarde
    00001370 <00000000>             .DATA.L     __$gravitySolDown1
    00001374 <00000000>             .DATA.L     __$gravitySolDown2
    00001378 <00000000>             .DATA.L     __$gravitySolUp1Alpha
    0000137C <00000000>             .DATA.L     __$gravitySolUp2Alpha
    00001380 <00000000>             .DATA.L     __$gravitySolUp1
    00001384 <00000000>             .DATA.L     __$gravitySolUp2
    00001388              L1056:                            
    00001388 D485                   MOV.L       L1169,R4   ; __$gravitySolUp1Alpha
    0000138A              L1057:                            
    0000138A 4A0B                   JSR         @R10
    0000138C 0009                   NOP
    0000138E 7F04                   ADD         #4,R15
      fonctions.   365                ML_bmp_or(direction?gravitySolDown1[sauvegarde->ameliorationNoir[2]==2]:gravitySolUp1[sauvegar
                         +de->ameliorationNoir[2]==2],x,y,16,24); // animation en l'air haut ou bas
    00001390 D184                   MOV.L       L1169+4,R1 ; __$direction
    00001392 E218                   MOV         #24,R2
    00001394 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001396 E710                   MOV         #16,R7
    00001398 6312                   MOV.L       @R1,R3
    0000139A 66E3                   MOV         R14,R6
    0000139C 2338                   TST         R3,R3
    0000139E 8D0E                   BT/S        L1058
    000013A0 65D3                   MOV         R13,R5
    000013A2 E21C                   MOV         #28,R2
    000013A4 D380                   MOV.L       L1169+8,R3 ; _sauvegarde
    000013A6 6032                   MOV.L       @R3,R0
    000013A8 002C                   MOV.B       @(R0,R2),R0
    000013AA 600C                   EXTU.B      R0,R0
    000013AC 8802                   CMP/EQ      #2,R0
    000013AE 0429                   MOVT        R4
    000013B0 D07E                   MOV.L       L1169+12,R0; __$gravitySolDown1
    000013B2 6343                   MOV         R4,R3
    000013B4 4400                   SHLL        R4
    000013B6 343C                   ADD         R3,R4
    000013B8 4408                   SHLL2       R4
    000013BA A00D                   BRA         L1137
    000013BC 4408                   SHLL2       R4
    000013BE              L1058:                            
    000013BE E21C                   MOV         #28,R2
    000013C0 D379                   MOV.L       L1169+8,R3 ; _sauvegarde
    000013C2 6032                   MOV.L       @R3,R0
    000013C4 002C                   MOV.B       @(R0,R2),R0
    000013C6 600C                   EXTU.B      R0,R0
    000013C8 8802                   CMP/EQ      #2,R0
    000013CA 0429                   MOVT        R4
    000013CC D078                   MOV.L       L1169+16,R0; __$gravitySolUp1
    000013CE 6343                   MOV         R4,R3
    000013D0 4400                   SHLL        R4
    000013D2 343C                   ADD         R3,R4
    000013D4 4408                   SHLL2       R4
    000013D6 4408                   SHLL2       R4
    000013D8              L1137:                            
    000013D8 340C                   ADD         R0,R4
    000013DA              L1138:                            
    000013DA 4C0B                   JSR         @R12
    000013DC 0009                   NOP
    000013DE 7F04                   ADD         #4,R15
    000013E0              L1035:                            
      fonctions.   366            }
      fonctions.   367        }
      fonctions.   368        if (vehicule == 4)
    000013E0 50F1                   MOV.L       @(4,R15),R0
    000013E2 8804                   CMP/EQ      #4,R0
    000013E4 8B74                   BF          L1060
      fonctions.   369        {
      fonctions.   370            ML_filled_ellipse(x+12,60,5*y/45+6,y/45+1,ML_BLACK);
    000013E6 E53C                   MOV         #60,R5
    000013E8 D372                   MOV.L       L1169+20,R3; _ML_filled_ellipse
    000013EA 2F86                   MOV.L       R8,@-R15
    000013EC 57F6                   MOV.L       @(24,R15),R7
    000013EE 7701                   ADD         #1,R7
    000013F0 56F5                   MOV.L       @(20,R15),R6
    000013F2 7606                   ADD         #6,R6
    000013F4 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013F6 54F9                   MOV.L       @(36,R15),R4
    000013F8 D46F                   MOV.L       L1169+24,R4; __$bird1Alpha
    000013FA 7F04                   ADD         #4,R15
    000013FC D36F                   MOV.L       L1169+28,R3; __$phase
    000013FE EB10                   MOV         #16,R11
    00001400 D26F                   MOV.L       L1169+32,R2; __nes
    00001402 6132                   MOV.L       @R3,R1
    00001404 420B                   JSR         @R2
    00001406 E000                   MOV         #0,R0
    00001408 8800                   CMP/EQ      #0,R0
    0000140A 8B19                   BF          L1061
      fonctions.   371    
      fonctions.   372            if (phase == 0) // phase normale de l'oiseau, ailes vers le haut
      fonctions.   373            {
      fonctions.   374                ML_bmp_and(bird1Alpha,x,y,24,16); // masque alpha ailes vers le haut
    0000140C 2FB6                   MOV.L       R11,@-R15
    0000140E E718                   MOV         #24,R7
    00001410 66E3                   MOV         R14,R6
    00001412 4A0B                   JSR         @R10
    00001414 65D3                   MOV         R13,R5
      fonctions.   375                ML_bmp_or(bird1[sauvegarde->ameliorationNoir[3]==2],x,y,24,16); // animation ailes vers le hau
                         +t
    00001416 E210                   MOV         #16,R2
    00001418 2F26                   MOV.L       R2,@-R15
    0000141A E718                   MOV         #24,R7
    0000141C 6092                   MOV.L       @R9,R0
    0000141E E11D                   MOV         #29,R1
    00001420 001C                   MOV.B       @(R0,R1),R0
    00001422 66E3                   MOV         R14,R6
    00001424 65D3                   MOV         R13,R5
    00001426 600C                   EXTU.B      R0,R0
    00001428 8802                   CMP/EQ      #2,R0
    0000142A 0429                   MOVT        R4
    0000142C D065                   MOV.L       L1169+36,R0; __$bird1
    0000142E 6343                   MOV         R4,R3
    00001430 4400                   SHLL        R4
    00001432 343C                   ADD         R3,R4
    00001434 4408                   SHLL2       R4
    00001436 4408                   SHLL2       R4
    00001438 4C0B                   JSR         @R12
    0000143A 340C                   ADD         R0,R4
    0000143C A048                   BRA         L1060
    0000143E 7F08                   ADD         #8,R15
    00001440              L1061:                            
      fonctions.   376            }
      fonctions.   377            else if (phase == 1 || phase == 2 || phase == 5 || phase == 6) // phase du milieu, ailes au milieu
    00001440 D061                   MOV.L       L1169+40,R0; H'3F800000
    00001442 D262                   MOV.L       L1169+44,R2; __eqs
    00001444 420B                   JSR         @R2
    00001446 6132                   MOV.L       @R3,R1
    00001448 8800                   CMP/EQ      #0,R0
    0000144A 8B11                   BF          L1064
    0000144C D060                   MOV.L       L1169+48,R0; H'40000000
    0000144E D25F                   MOV.L       L1169+44,R2; __eqs
    00001450 420B                   JSR         @R2
    00001452 6132                   MOV.L       @R3,R1
    00001454 8800                   CMP/EQ      #0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001456 8B0B                   BF          L1064
    00001458 D05E                   MOV.L       L1169+52,R0; H'40A00000
    0000145A D25C                   MOV.L       L1169+44,R2; __eqs
    0000145C 420B                   JSR         @R2
    0000145E 6132                   MOV.L       @R3,R1
    00001460 8800                   CMP/EQ      #0,R0
    00001462 8B05                   BF          L1064
    00001464 D05C                   MOV.L       L1169+56,R0; H'40C00000
    00001466 D256                   MOV.L       L1169+32,R2; __nes
    00001468 420B                   JSR         @R2
    0000146A 6132                   MOV.L       @R3,R1
    0000146C 8800                   CMP/EQ      #0,R0
    0000146E 8B16                   BF          L1063
    00001470              L1064:                            
      fonctions.   378            {
      fonctions.   379                ML_bmp_and(bird1Alpha,x,y,24,16); // masque alpha ailes au milieu
    00001470 2FB6                   MOV.L       R11,@-R15
    00001472 E718                   MOV         #24,R7
    00001474 66E3                   MOV         R14,R6
    00001476 4A0B                   JSR         @R10
    00001478 65D3                   MOV         R13,R5
      fonctions.   380                ML_bmp_or(bird2[sauvegarde->ameliorationNoir[3]==2],x,y,24,16); // animation ailes au milieu
    0000147A E310                   MOV         #16,R3
    0000147C 2F36                   MOV.L       R3,@-R15
    0000147E E718                   MOV         #24,R7
    00001480 6092                   MOV.L       @R9,R0
    00001482 E11D                   MOV         #29,R1
    00001484 001C                   MOV.B       @(R0,R1),R0
    00001486 66E3                   MOV         R14,R6
    00001488 65D3                   MOV         R13,R5
    0000148A 600C                   EXTU.B      R0,R0
    0000148C 8802                   CMP/EQ      #2,R0
    0000148E 0429                   MOVT        R4
    00001490 D052                   MOV.L       L1169+60,R0; __$bird2
    00001492 6243                   MOV         R4,R2
    00001494 4400                   SHLL        R4
    00001496 342C                   ADD         R2,R4
    00001498 4408                   SHLL2       R4
    0000149A A016                   BRA         L1139
    0000149C 4408                   SHLL2       R4
    0000149E              L1063:                            
      fonctions.   381            }
      fonctions.   382            else // derniere phase, ailes vers le bas
      fonctions.   383            {
      fonctions.   384                ML_bmp_and(bird1Alpha,x,y,24,16); // masque alpha ailes vers le bas
    0000149E E718                   MOV         #24,R7
    000014A0 2FB6                   MOV.L       R11,@-R15
    000014A2 66E3                   MOV         R14,R6
    000014A4 4A0B                   JSR         @R10
    000014A6 65D3                   MOV         R13,R5
      fonctions.   385                ML_bmp_or(bird3[sauvegarde->ameliorationNoir[3]==2],x,y,24,16); // animation ailes vers le bas
    000014A8 E210                   MOV         #16,R2
    000014AA E718                   MOV         #24,R7
    000014AC 2F26                   MOV.L       R2,@-R15
    000014AE 66E3                   MOV         R14,R6
    000014B0 6092                   MOV.L       @R9,R0
    000014B2 E11D                   MOV         #29,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014B4 001C                   MOV.B       @(R0,R1),R0
    000014B6 65D3                   MOV         R13,R5
    000014B8 600C                   EXTU.B      R0,R0
    000014BA 8802                   CMP/EQ      #2,R0
    000014BC D048                   MOV.L       L1169+64,R0; __$bird3
    000014BE 0429                   MOVT        R4
    000014C0 6343                   MOV         R4,R3
    000014C2 4400                   SHLL        R4
    000014C4 343C                   ADD         R3,R4
    000014C6 4408                   SHLL2       R4
    000014C8 4408                   SHLL2       R4
    000014CA              L1139:                            
    000014CA 4C0B                   JSR         @R12
    000014CC 340C                   ADD         R0,R4
    000014CE 7F08                   ADD         #8,R15
    000014D0              L1060:                            
      fonctions.   386            }
      fonctions.   387        }
      fonctions.   388        if (vehicule == 5)
    000014D0 50F1                   MOV.L       @(4,R15),R0
    000014D2 8805                   CMP/EQ      #5,R0
    000014D4 8901                   BT          L1170
    000014D6 A0EC                   BRA         L1066
    000014D8 0009                   NOP
    000014DA              L1170:                            
      fonctions.   389        {
      fonctions.   390            ML_filled_ellipse(x+13,60,5*y/45+6,y/45+1,ML_BLACK);
    000014DA E53C                   MOV         #60,R5
    000014DC D335                   MOV.L       L1169+20,R3; _ML_filled_ellipse
    000014DE 64D3                   MOV         R13,R4
    000014E0 2F86                   MOV.L       R8,@-R15
    000014E2 57F6                   MOV.L       @(24,R15),R7
    000014E4 56F5                   MOV.L       @(20,R15),R6
    000014E6 7701                   ADD         #1,R7
    000014E8 7606                   ADD         #6,R6
    000014EA 430B                   JSR         @R3
    000014EC 740D                   ADD         #13,R4
      fonctions.   391    
      fonctions.   392            if (y == 40) // si on est au sol
    000014EE 60E3                   MOV         R14,R0
    000014F0 8828                   CMP/EQ      #40,R0
    000014F2 8D02                   BT/S        L1171
    000014F4 7F04                   ADD         #4,R15
    000014F6 A07F                   BRA         L1067
    000014F8 0009                   NOP
    000014FA              L1171:                            
      fonctions.   393            {
      fonctions.   394                ML_bmp_and(lvl%16<8?tank1Alpha:tank2Alpha,x,lvl%24<12?y-1:y,24,24); // masque alpha au sol
    000014FA E318                   MOV         #24,R3
    000014FC D239                   MOV.L       L1169+68,R2; __modls
    000014FE 6733                   MOV         R3,R7
    00001500 2F36                   MOV.L       R3,@-R15
    00001502 51F7                   MOV.L       @(28,R15),R1
    00001504 420B                   JSR         @R2
    00001506 6033                   MOV         R3,R0
    00001508 E20C                   MOV         #12,R2
    0000150A 3023                   CMP/GE      R2,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000150C 8D02                   BT/S        L1068
    0000150E 1F08                   MOV.L       R0,@(32,R15)
    00001510 A001                   BRA         L1072
    00001512 56F4                   MOV.L       @(16,R15),R6
    00001514              L1068:                            
    00001514 66E3                   MOV         R14,R6
    00001516              L1072:                            
    00001516 50F7                   MOV.L       @(28,R15),R0
    00001518 4011                   CMP/PZ      R0
    0000151A 8F02                   BF/S        L1070
    0000151C 65D3                   MOV         R13,R5
    0000151E A005                   BRA         L1071
    00001520 C90F                   AND         #15,R0
    00001522              L1070:                            
    00001522 6007                   NOT         R0,R0
    00001524 7001                   ADD         #1,R0
    00001526 C90F                   AND         #15,R0
    00001528 6007                   NOT         R0,R0
    0000152A 7001                   ADD         #1,R0
    0000152C              L1071:                            
    0000152C E308                   MOV         #8,R3
    0000152E 3033                   CMP/GE      R3,R0
    00001530 8D03                   BT/S        L1069
    00001532 1F01                   MOV.L       R0,@(4,R15)
    00001534 D42C                   MOV.L       L1169+72,R4; __$tank1Alpha
    00001536 A001                   BRA         L1073
    00001538 0009                   NOP
    0000153A              L1069:                            
    0000153A D42C                   MOV.L       L1169+76,R4; __$tank2Alpha
    0000153C              L1073:                            
    0000153C 4A0B                   JSR         @R10
    0000153E 0009                   NOP
    00001540 7F04                   ADD         #4,R15
      fonctions.   395                ML_bmp_or(lvl%16<8?tank1[sauvegarde->ameliorationNoir[4]==2]:tank2[sauvegarde->ameliorationNoi
                         +r[4]==2],x,lvl%24<12?y-1:y,24,24); // animation de marche
    00001542 E218                   MOV         #24,R2
    00001544 2F26                   MOV.L       R2,@-R15
    00001546 E30C                   MOV         #12,R3
    00001548 51F8                   MOV.L       @(32,R15),R1
    0000154A 3133                   CMP/GE      R3,R1
    0000154C 8D02                   BT/S        L1074
    0000154E 6723                   MOV         R2,R7
    00001550 A001                   BRA         L1076
    00001552 56F4                   MOV.L       @(16,R15),R6
    00001554              L1074:                            
    00001554 66E3                   MOV         R14,R6
    00001556              L1076:                            
    00001556 E208                   MOV         #8,R2
    00001558 53F1                   MOV.L       @(4,R15),R3
    0000155A 3323                   CMP/GE      R2,R3
    0000155C 8D0F                   BT/S        L1075
    0000155E 65D3                   MOV         R13,R5
    00001560 D111                   MOV.L       L1169+8,R1 ; _sauvegarde
    00001562 E21E                   MOV         #30,R2
    00001564 6012                   MOV.L       @R1,R0
    00001566 002C                   MOV.B       @(R0,R2),R0
    00001568 D221                   MOV.L       L1169+80,R2; __$tank1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000156A 600C                   EXTU.B      R0,R0
    0000156C 8802                   CMP/EQ      #2,R0
    0000156E 0429                   MOVT        R4
    00001570 6343                   MOV         R4,R3
    00001572 4408                   SHLL2       R4
    00001574 4400                   SHLL        R4
    00001576 343C                   ADD         R3,R4
    00001578 4408                   SHLL2       R4
    0000157A A00E                   BRA         L1140
    0000157C 4400                   SHLL        R4
    0000157E              L1075:                            
    0000157E E11E                   MOV         #30,R1
    00001580 D21C                   MOV.L       L1169+84,R2; __$tank2
    00001582 D309                   MOV.L       L1169+8,R3 ; _sauvegarde
    00001584 6032                   MOV.L       @R3,R0
    00001586 001C                   MOV.B       @(R0,R1),R0
    00001588 600C                   EXTU.B      R0,R0
    0000158A 8802                   CMP/EQ      #2,R0
    0000158C 0429                   MOVT        R4
    0000158E 6343                   MOV         R4,R3
    00001590 4408                   SHLL2       R4
    00001592 4400                   SHLL        R4
    00001594 343C                   ADD         R3,R4
    00001596 4408                   SHLL2       R4
    00001598 4400                   SHLL        R4
    0000159A              L1140:                            
    0000159A 342C                   ADD         R2,R4
    0000159C A069                   BRA         L1143
    0000159E 0009                   NOP
    000015A0              L1169:                            
    000015A0 <00000000>             .DATA.L     __$gravitySolUp1Alpha
    000015A4 <00000000>             .DATA.L     __$direction
    000015A8 <00000000>             .DATA.L     _sauvegarde
    000015AC <00000000>             .DATA.L     __$gravitySolDown1
    000015B0 <00000000>             .DATA.L     __$gravitySolUp1
    000015B4 <00000000>             .DATA.L     _ML_filled_ellipse
    000015B8 <00000000>             .DATA.L     __$bird1Alpha
    000015BC <00000000>             .DATA.L     __$phase
    000015C0 <00000000>             .DATA.L     __nes
    000015C4 <00000000>             .DATA.L     __$bird1
    000015C8 3F800000               .DATA.L     H'3F800000
    000015CC <00000000>             .DATA.L     __eqs
    000015D0 40000000               .DATA.L     H'40000000
    000015D4 40A00000               .DATA.L     H'40A00000
    000015D8 40C00000               .DATA.L     H'40C00000
    000015DC <00000000>             .DATA.L     __$bird2
    000015E0 <00000000>             .DATA.L     __$bird3
    000015E4 <00000000>             .DATA.L     __modls
    000015E8 <00000000>             .DATA.L     __$tank1Alpha
    000015EC <00000000>             .DATA.L     __$tank2Alpha
    000015F0 <00000000>             .DATA.L     __$tank1
    000015F4 <00000000>             .DATA.L     __$tank2
    000015F8              L1067:                            
      fonctions.   396            }
      fonctions.   397            else if (IsKeyDown(KEY_CTRL_SHIFT)) // si est en l'air et qu'on appuie sur exe
    000015F8 9482                   MOV.W       L1172,R4   ; H'7536
    000015FA D342                   MOV.L       L1172+4,R3 ; _IsKeyDown




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015FC 430B                   JSR         @R3
    000015FE 0009                   NOP
    00001600 2008                   TST         R0,R0
    00001602 893A                   BT          L1079
      fonctions.   398            {
      fonctions.   399                ML_bmp_and(lvl%6<3?tank4Alpha:tank5Alpha,x,y,24,24); // masque alpha en l'air avec les flammes
    00001604 E318                   MOV         #24,R3
    00001606 6733                   MOV         R3,R7
    00001608 2F36                   MOV.L       R3,@-R15
    0000160A 66E3                   MOV         R14,R6
    0000160C 51F8                   MOV.L       @(32,R15),R1
    0000160E E203                   MOV         #3,R2
    00001610 3123                   CMP/GE      R2,R1
    00001612 8D03                   BT/S        L1080
    00001614 65D3                   MOV         R13,R5
    00001616 D43C                   MOV.L       L1172+8,R4 ; __$tank4Alpha
    00001618 A001                   BRA         L1081
    0000161A 0009                   NOP
    0000161C              L1080:                            
    0000161C D43B                   MOV.L       L1172+12,R4; __$tank5Alpha
    0000161E              L1081:                            
    0000161E 4A0B                   JSR         @R10
    00001620 0009                   NOP
    00001622 7F04                   ADD         #4,R15
      fonctions.   400                ML_bmp_or(lvl%6<3?tank4[sauvegarde->ameliorationNoir[4]==2]:tank5[sauvegarde->ameliorationNoir
                         +[4]==2],x,y,24,24); // animation des flames
    00001624 E218                   MOV         #24,R2
    00001626 6723                   MOV         R2,R7
    00001628 2F26                   MOV.L       R2,@-R15
    0000162A 66E3                   MOV         R14,R6
    0000162C 51F8                   MOV.L       @(32,R15),R1
    0000162E E303                   MOV         #3,R3
    00001630 3133                   CMP/GE      R3,R1
    00001632 8D0F                   BT/S        L1082
    00001634 65D3                   MOV         R13,R5
    00001636 E11E                   MOV         #30,R1
    00001638 D335                   MOV.L       L1172+16,R3; _sauvegarde
    0000163A 6032                   MOV.L       @R3,R0
    0000163C 001C                   MOV.B       @(R0,R1),R0
    0000163E 600C                   EXTU.B      R0,R0
    00001640 D134                   MOV.L       L1172+20,R1; __$tank4
    00001642 8802                   CMP/EQ      #2,R0
    00001644 0429                   MOVT        R4
    00001646 6343                   MOV         R4,R3
    00001648 4408                   SHLL2       R4
    0000164A 4400                   SHLL        R4
    0000164C 343C                   ADD         R3,R4
    0000164E 4408                   SHLL2       R4
    00001650 A00E                   BRA         L1141
    00001652 4400                   SHLL        R4
    00001654              L1082:                            
    00001654 D32E                   MOV.L       L1172+16,R3; _sauvegarde
    00001656 E11E                   MOV         #30,R1
    00001658 6032                   MOV.L       @R3,R0
    0000165A 001C                   MOV.B       @(R0,R1),R0
    0000165C D12E                   MOV.L       L1172+24,R1; __$tank5
    0000165E 600C                   EXTU.B      R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001660 8802                   CMP/EQ      #2,R0
    00001662 0429                   MOVT        R4
    00001664 6343                   MOV         R4,R3
    00001666 4408                   SHLL2       R4
    00001668 4400                   SHLL        R4
    0000166A 343C                   ADD         R3,R4
    0000166C 4408                   SHLL2       R4
    0000166E 4400                   SHLL        R4
    00001670              L1141:                            
    00001670 341C                   ADD         R1,R4
    00001672              L1143:                            
    00001672 4C0B                   JSR         @R12
    00001674 0009                   NOP
    00001676 A01C                   BRA         L1066
    00001678 7F04                   ADD         #4,R15
    0000167A              L1079:                            
      fonctions.   401            }
      fonctions.   402            else // si on est en l'air et qu'on appuie pas sur exe
      fonctions.   403            {
      fonctions.   404                ML_bmp_and(tank3Alpha,x,y,24,24); // masque alpha en l'air
    0000167A E318                   MOV         #24,R3
    0000167C D427                   MOV.L       L1172+28,R4; __$tank3Alpha
    0000167E 66E3                   MOV         R14,R6
    00001680 2F36                   MOV.L       R3,@-R15
    00001682 6733                   MOV         R3,R7
    00001684 4A0B                   JSR         @R10
    00001686 65D3                   MOV         R13,R5
      fonctions.   405                ML_bmp_or(tank3[sauvegarde->ameliorationNoir[4]==2],x,y,24,24); // animation en l'air
    00001688 E218                   MOV         #24,R2
    0000168A 6723                   MOV         R2,R7
    0000168C 2F26                   MOV.L       R2,@-R15
    0000168E 66E3                   MOV         R14,R6
    00001690 6092                   MOV.L       @R9,R0
    00001692 E11E                   MOV         #30,R1
    00001694 001C                   MOV.B       @(R0,R1),R0
    00001696 65D3                   MOV         R13,R5
    00001698 D121                   MOV.L       L1172+32,R1; __$tank3
    0000169A 600C                   EXTU.B      R0,R0
    0000169C 8802                   CMP/EQ      #2,R0
    0000169E 0429                   MOVT        R4
    000016A0 6343                   MOV         R4,R3
    000016A2 4408                   SHLL2       R4
    000016A4 4400                   SHLL        R4
    000016A6 343C                   ADD         R3,R4
    000016A8 4408                   SHLL2       R4
    000016AA 4400                   SHLL        R4
    000016AC 4C0B                   JSR         @R12
    000016AE 341C                   ADD         R1,R4
    000016B0 7F08                   ADD         #8,R15
    000016B2              L1066:                            
      fonctions.   406            }
      fonctions.   407        }
      fonctions.   408    
      fonctions.   409        if (vehicule == 6)
    000016B2 50F1                   MOV.L       @(4,R15),R0
    000016B4 8806                   CMP/EQ      #6,R0
    000016B6 8901                   BT          L1173




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016B8 A085                   BRA         L1085
    000016BA 0009                   NOP
    000016BC              L1173:                            
    000016BC D219                   MOV.L       L1172+36,R2; __$phase
    000016BE 6422                   MOV.L       @R2,R4
    000016C0 D019                   MOV.L       L1172+40,R0; H'BF800000
    000016C2 D31A                   MOV.L       L1172+44,R3; __nes
    000016C4 430B                   JSR         @R3
    000016C6 6143                   MOV         R4,R1
    000016C8 8800                   CMP/EQ      #0,R0
    000016CA 8B35                   BF          L1086
      fonctions.   410        {
      fonctions.   411            if(phase == -1)
      fonctions.   412                ML_bmp_and(dragonBasAlpha,x,y,28,16),
      fonctions.   413                ML_bmp_or(dragonBas[sauvegarde->ameliorationNoir[5]==2],x,y,28,16);
    000016CC D418                   MOV.L       L1172+48,R4; __$dragonBasAlpha
    000016CE E310                   MOV         #16,R3
    000016D0 2F36                   MOV.L       R3,@-R15
    000016D2 E71C                   MOV         #28,R7
    000016D4 66E3                   MOV         R14,R6
    000016D6 4A0B                   JSR         @R10
    000016D8 65D3                   MOV         R13,R5
    000016DA E210                   MOV         #16,R2
    000016DC 2F26                   MOV.L       R2,@-R15
    000016DE E71C                   MOV         #28,R7
    000016E0 6092                   MOV.L       @R9,R0
    000016E2 E11F                   MOV         #31,R1
    000016E4 001C                   MOV.B       @(R0,R1),R0
    000016E6 66E3                   MOV         R14,R6
    000016E8 65D3                   MOV         R13,R5
    000016EA 600C                   EXTU.B      R0,R0
    000016EC 8802                   CMP/EQ      #2,R0
    000016EE 0429                   MOVT        R4
    000016F0 D010                   MOV.L       L1172+52,R0; __$dragonBas
    000016F2 6343                   MOV         R4,R3
    000016F4 4408                   SHLL2       R4
    000016F6 4408                   SHLL2       R4
    000016F8 343C                   ADD         R3,R4
    000016FA 4408                   SHLL2       R4
    000016FC A039                   BRA         L1144
    000016FE 340C                   ADD         R0,R4
    00001700              L1172:                            
    00001700 7536                   .DATA.W     H'7536
    00001702 0000                   .DATA.W     0
    00001704 <00000000>             .DATA.L     _IsKeyDown
    00001708 <00000000>             .DATA.L     __$tank4Alpha
    0000170C <00000000>             .DATA.L     __$tank5Alpha
    00001710 <00000000>             .DATA.L     _sauvegarde
    00001714 <00000000>             .DATA.L     __$tank4
    00001718 <00000000>             .DATA.L     __$tank5
    0000171C <00000000>             .DATA.L     __$tank3Alpha
    00001720 <00000000>             .DATA.L     __$tank3
    00001724 <00000000>             .DATA.L     __$phase
    00001728 BF800000               .DATA.L     H'BF800000
    0000172C <00000000>             .DATA.L     __nes
    00001730 <00000000>             .DATA.L     __$dragonBasAlpha
    00001734 <00000000>             .DATA.L     __$dragonBas




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001738              L1086:                            
      fonctions.   414            else if(phase == 0)
    00001738 D310                   MOV.L       L1174+2,R3 ; __nes
    0000173A 6143                   MOV         R4,R1
    0000173C 430B                   JSR         @R3
    0000173E E000                   MOV         #0,R0
    00001740 8800                   CMP/EQ      #0,R0
    00001742 8B21                   BF          L1088
      fonctions.   415                ML_bmp_and(dragonMilieuAlpha,x,y,28,16),
      fonctions.   416                ML_bmp_or(dragonMilieu[sauvegarde->ameliorationNoir[5]==2],x,y,28,16);
    00001744 D40E                   MOV.L       L1174+6,R4 ; __$dragonMilieuAlpha
    00001746 E310                   MOV         #16,R3
    00001748 2F36                   MOV.L       R3,@-R15
    0000174A E71C                   MOV         #28,R7
    0000174C 66E3                   MOV         R14,R6
    0000174E 4A0B                   JSR         @R10
    00001750 65D3                   MOV         R13,R5
    00001752 E210                   MOV         #16,R2
    00001754 D30B                   MOV.L       L1174+10,R3; __$dragonMilieu
    00001756 E71C                   MOV         #28,R7
    00001758 2F26                   MOV.L       R2,@-R15
    0000175A 66E3                   MOV         R14,R6
    0000175C 6092                   MOV.L       @R9,R0
    0000175E E11F                   MOV         #31,R1
    00001760 001C                   MOV.B       @(R0,R1),R0
    00001762 65D3                   MOV         R13,R5
    00001764 600C                   EXTU.B      R0,R0
    00001766 8802                   CMP/EQ      #2,R0
    00001768 0429                   MOVT        R4
    0000176A 4408                   SHLL2       R4
    0000176C 4408                   SHLL2       R4
    0000176E 4408                   SHLL2       R4
    00001770 343C                   ADD         R3,R4
    00001772              L1144:                            
    00001772 4C0B                   JSR         @R12
    00001774 0009                   NOP
    00001776 A026                   BRA         L1085
    00001778 7F08                   ADD         #8,R15
    0000177A              L1174:                            
    0000177A 0000                   .DATA.W     0
    0000177C <00000000>             .DATA.L     __nes
    00001780 <00000000>             .DATA.L     __$dragonMilieuAlpha
    00001784 <00000000>             .DATA.L     __$dragonMilieu
    00001788              L1088:                            
      fonctions.   417            else if(phase == 1)
    00001788 D0B7                   MOV.L       L1175,R0   ; H'3F800000
    0000178A D3B8                   MOV.L       L1175+4,R3 ; __nes
    0000178C 430B                   JSR         @R3
    0000178E 6143                   MOV         R4,R1
    00001790 8800                   CMP/EQ      #0,R0
    00001792 8B18                   BF          L1085
      fonctions.   418                ML_bmp_and(dragonHautAlpha,x,y,28,16),
      fonctions.   419                ML_bmp_or(dragonHaut[sauvegarde->ameliorationNoir[5]==2],x,y,28,16);
    00001794 D4B6                   MOV.L       L1175+8,R4 ; __$dragonHautAlpha
    00001796 E310                   MOV         #16,R3
    00001798 2F36                   MOV.L       R3,@-R15
    0000179A E71C                   MOV         #28,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000179C 66E3                   MOV         R14,R6
    0000179E 4A0B                   JSR         @R10
    000017A0 65D3                   MOV         R13,R5
    000017A2 E210                   MOV         #16,R2
    000017A4 D3B3                   MOV.L       L1175+12,R3; __$dragonHaut
    000017A6 E71C                   MOV         #28,R7
    000017A8 2F26                   MOV.L       R2,@-R15
    000017AA 66E3                   MOV         R14,R6
    000017AC 6092                   MOV.L       @R9,R0
    000017AE E11F                   MOV         #31,R1
    000017B0 001C                   MOV.B       @(R0,R1),R0
    000017B2 65D3                   MOV         R13,R5
    000017B4 600C                   EXTU.B      R0,R0
    000017B6 8802                   CMP/EQ      #2,R0
    000017B8 0429                   MOVT        R4
    000017BA 4408                   SHLL2       R4
    000017BC 4408                   SHLL2       R4
    000017BE 4408                   SHLL2       R4
    000017C0 4C0B                   JSR         @R12
    000017C2 343C                   ADD         R3,R4
    000017C4 7F08                   ADD         #8,R15
    000017C6              L1085:                            
      fonctions.   420        }
      fonctions.   421    
      fonctions.   422        if (vehicule == 7)
    000017C6 50F1                   MOV.L       @(4,R15),R0
    000017C8 8807                   CMP/EQ      #7,R0
    000017CA 8901                   BT          L1176
    000017CC A0E5                   BRA         L1091
    000017CE 0009                   NOP
    000017D0              L1176:                            
      fonctions.   423        {
      fonctions.   424            ML_filled_ellipse(x+8,60,5*y/45+6,y/45+1,ML_BLACK);
    000017D0 2F86                   MOV.L       R8,@-R15
    000017D2 E53C                   MOV         #60,R5
    000017D4 D3A8                   MOV.L       L1175+16,R3; _ML_filled_ellipse
    000017D6 64D3                   MOV         R13,R4
    000017D8 57F6                   MOV.L       @(24,R15),R7
    000017DA 7701                   ADD         #1,R7
    000017DC 56F5                   MOV.L       @(20,R15),R6
    000017DE 7606                   ADD         #6,R6
    000017E0 430B                   JSR         @R3
    000017E2 7408                   ADD         #8,R4
      fonctions.   425    
      fonctions.   426            ML_filled_circle(x+9,y+9,9,ML_WHITE);
    000017E4 D3A5                   MOV.L       L1175+20,R3; _ML_filled_circle
    000017E6 7F04                   ADD         #4,R15
    000017E8 E700                   MOV         #0,R7
    000017EA E609                   MOV         #9,R6
    000017EC 65E3                   MOV         R14,R5
    000017EE 7509                   ADD         #9,R5
    000017F0 2F52                   MOV.L       R5,@R15
    000017F2 6BD3                   MOV         R13,R11
    000017F4 7B09                   ADD         #9,R11
    000017F6 430B                   JSR         @R3
    000017F8 64B3                   MOV         R11,R4
      fonctions.   427            ML_circle(x+9,y+9,9,ML_BLACK);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017FA E701                   MOV         #1,R7
    000017FC 65F2                   MOV.L       @R15,R5
    000017FE E609                   MOV         #9,R6
    00001800 D39F                   MOV.L       L1175+24,R3; _ML_circle
    00001802 430B                   JSR         @R3
    00001804 64B3                   MOV         R11,R4
      fonctions.   428            ML_line(x+9-cos(angle*180/3.14)*8,y+9-sin(angle*180/3.14)*8,x+9+cos(angle*180/3.14)*9,y+9+sin(angl
                         +e*180/3.14)*9,ML_BLACK);
    00001806 DA9F                   MOV.L       L1175+28,R10; __$angle
    00001808 2F86                   MOV.L       R8,@-R15
    0000180A 7FF8                   ADD         #-8,R15
    0000180C D29E                   MOV.L       L1175+32,R2; __itod
    0000180E 50F3                   MOV.L       @(12,R15),R0
    00001810 7FF8                   ADD         #-8,R15
    00001812 420B                   JSR         @R2
    00001814 2FF6                   MOV.L       R15,@-R15
    00001816 7FE8                   ADD         #-24,R15
    00001818 D09C                   MOV.L       L1175+36,R0; H'43340000
    0000181A D39D                   MOV.L       L1175+40,R3; __muls
    0000181C 430B                   JSR         @R3
    0000181E 61A2                   MOV.L       @R10,R1
    00001820 D29C                   MOV.L       L1175+44,R2; __stod
    00001822 7FF8                   ADD         #-8,R15
    00001824 420B                   JSR         @R2
    00001826 2FF6                   MOV.L       R15,@-R15
    00001828 D39B                   MOV.L       L1175+48,R3; H'51EB851F
    0000182A 2F36                   MOV.L       R3,@-R15
    0000182C D39B                   MOV.L       L1175+52,R3; H'40091EB8
    0000182E 2F36                   MOV.L       R3,@-R15
    00001830 D19B                   MOV.L       L1175+56,R1; __divdr
    00001832 62F3                   MOV         R15,R2
    00001834 7210                   ADD         #16,R2
    00001836 410B                   JSR         @R1
    00001838 2F26                   MOV.L       R2,@-R15
    0000183A E308                   MOV         #8,R3
    0000183C 33FC                   ADD         R15,R3
    0000183E 2F36                   MOV.L       R3,@-R15
    00001840 D398                   MOV.L       L1175+60,R3; _sin
    00001842 430B                   JSR         @R3
    00001844 0009                   NOP
    00001846 7F0C                   ADD         #12,R15
    00001848 D298                   MOV.L       L1175+68,R2; __muld
    0000184A E000                   MOV         #0,R0
    0000184C 2F06                   MOV.L       R0,@-R15
    0000184E D096                   MOV.L       L1175+64,R0; H'40220000
    00001850 2F06                   MOV.L       R0,@-R15
    00001852 63F3                   MOV         R15,R3
    00001854 7310                   ADD         #16,R3
    00001856 420B                   JSR         @R2
    00001858 2F36                   MOV.L       R3,@-R15
    0000185A 61F3                   MOV         R15,R1
    0000185C D094                   MOV.L       L1175+72,R0; __addd
    0000185E 7110                   ADD         #16,R1
    00001860 400B                   JSR         @R0
    00001862 2F16                   MOV.L       R1,@-R15
    00001864 D393                   MOV.L       L1175+76,R3; __dtoi
    00001866 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001868 0009                   NOP
    0000186A 2F06                   MOV.L       R0,@-R15
    0000186C D286                   MOV.L       L1175+32,R2; __itod
    0000186E 60B3                   MOV         R11,R0
    00001870 7FF0                   ADD         #-16,R15
    00001872 420B                   JSR         @R2
    00001874 2FF6                   MOV.L       R15,@-R15
    00001876 7FE8                   ADD         #-24,R15
    00001878 D084                   MOV.L       L1175+36,R0; H'43340000
    0000187A D385                   MOV.L       L1175+40,R3; __muls
    0000187C 430B                   JSR         @R3
    0000187E 61A2                   MOV.L       @R10,R1
    00001880 D284                   MOV.L       L1175+44,R2; __stod
    00001882 7FF8                   ADD         #-8,R15
    00001884 420B                   JSR         @R2
    00001886 2FF6                   MOV.L       R15,@-R15
    00001888 D383                   MOV.L       L1175+48,R3; H'51EB851F
    0000188A 2F36                   MOV.L       R3,@-R15
    0000188C D383                   MOV.L       L1175+52,R3; H'40091EB8
    0000188E 2F36                   MOV.L       R3,@-R15
    00001890 D183                   MOV.L       L1175+56,R1; __divdr
    00001892 62F3                   MOV         R15,R2
    00001894 7210                   ADD         #16,R2
    00001896 410B                   JSR         @R1
    00001898 2F26                   MOV.L       R2,@-R15
    0000189A E308                   MOV         #8,R3
    0000189C 33FC                   ADD         R15,R3
    0000189E 2F36                   MOV.L       R3,@-R15
    000018A0 D385                   MOV.L       L1175+80,R3; _cos
    000018A2 430B                   JSR         @R3
    000018A4 0009                   NOP
    000018A6 7F0C                   ADD         #12,R15
    000018A8 D280                   MOV.L       L1175+68,R2; __muld
    000018AA E000                   MOV         #0,R0
    000018AC 2F06                   MOV.L       R0,@-R15
    000018AE D07E                   MOV.L       L1175+64,R0; H'40220000
    000018B0 2F06                   MOV.L       R0,@-R15
    000018B2 63F3                   MOV         R15,R3
    000018B4 7310                   ADD         #16,R3
    000018B6 420B                   JSR         @R2
    000018B8 2F36                   MOV.L       R3,@-R15
    000018BA 61F3                   MOV         R15,R1
    000018BC D07C                   MOV.L       L1175+72,R0; __addd
    000018BE 7110                   ADD         #16,R1
    000018C0 400B                   JSR         @R0
    000018C2 2F16                   MOV.L       R1,@-R15
    000018C4 D37B                   MOV.L       L1175+76,R3; __dtoi
    000018C6 430B                   JSR         @R3
    000018C8 0009                   NOP
    000018CA 2F06                   MOV.L       R0,@-R15
    000018CC D26E                   MOV.L       L1175+32,R2; __itod
    000018CE 7FF8                   ADD         #-8,R15
    000018D0 50F5                   MOV.L       @(20,R15),R0
    000018D2 7FF8                   ADD         #-8,R15
    000018D4 420B                   JSR         @R2
    000018D6 2FF6                   MOV.L       R15,@-R15
    000018D8 D06C                   MOV.L       L1175+36,R0; H'43340000




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000018DA 7FE8                   ADD         #-24,R15
    000018DC D36C                   MOV.L       L1175+40,R3; __muls
    000018DE 430B                   JSR         @R3
    000018E0 61A2                   MOV.L       @R10,R1
    000018E2 7FF8                   ADD         #-8,R15
    000018E4 D26B                   MOV.L       L1175+44,R2; __stod
    000018E6 420B                   JSR         @R2
    000018E8 2FF6                   MOV.L       R15,@-R15
    000018EA D36B                   MOV.L       L1175+48,R3; H'51EB851F
    000018EC D16C                   MOV.L       L1175+56,R1; __divdr
    000018EE 2F36                   MOV.L       R3,@-R15
    000018F0 D36A                   MOV.L       L1175+52,R3; H'40091EB8
    000018F2 2F36                   MOV.L       R3,@-R15
    000018F4 62F3                   MOV         R15,R2
    000018F6 7210                   ADD         #16,R2
    000018F8 410B                   JSR         @R1
    000018FA 2F26                   MOV.L       R2,@-R15
    000018FC E308                   MOV         #8,R3
    000018FE 33FC                   ADD         R15,R3
    00001900 2F36                   MOV.L       R3,@-R15
    00001902 D368                   MOV.L       L1175+60,R3; _sin
    00001904 430B                   JSR         @R3
    00001906 0009                   NOP
    00001908 D268                   MOV.L       L1175+68,R2; __muld
    0000190A 7F0C                   ADD         #12,R15
    0000190C E000                   MOV         #0,R0
    0000190E 2F06                   MOV.L       R0,@-R15
    00001910 D06A                   MOV.L       L1175+84,R0; H'40200000
    00001912 2F06                   MOV.L       R0,@-R15
    00001914 63F3                   MOV         R15,R3
    00001916 7310                   ADD         #16,R3
    00001918 420B                   JSR         @R2
    0000191A 2F36                   MOV.L       R3,@-R15
    0000191C D068                   MOV.L       L1175+88,R0; __subdr
    0000191E 61F3                   MOV         R15,R1
    00001920 7110                   ADD         #16,R1
    00001922 400B                   JSR         @R0
    00001924 2F16                   MOV.L       R1,@-R15
    00001926 D363                   MOV.L       L1175+76,R3; __dtoi
    00001928 430B                   JSR         @R3
    0000192A 0009                   NOP
    0000192C 2F06                   MOV.L       R0,@-R15
    0000192E 60B3                   MOV         R11,R0
    00001930 D255                   MOV.L       L1175+32,R2; __itod
    00001932 7FF0                   ADD         #-16,R15
    00001934 420B                   JSR         @R2
    00001936 2FF6                   MOV.L       R15,@-R15
    00001938 D054                   MOV.L       L1175+36,R0; H'43340000
    0000193A 7FE8                   ADD         #-24,R15
    0000193C D354                   MOV.L       L1175+40,R3; __muls
    0000193E 430B                   JSR         @R3
    00001940 61A2                   MOV.L       @R10,R1
    00001942 7FF8                   ADD         #-8,R15
    00001944 D253                   MOV.L       L1175+44,R2; __stod
    00001946 420B                   JSR         @R2
    00001948 2FF6                   MOV.L       R15,@-R15
    0000194A D353                   MOV.L       L1175+48,R3; H'51EB851F




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000194C D154                   MOV.L       L1175+56,R1; __divdr
    0000194E 2F36                   MOV.L       R3,@-R15
    00001950 D352                   MOV.L       L1175+52,R3; H'40091EB8
    00001952 2F36                   MOV.L       R3,@-R15
    00001954 62F3                   MOV         R15,R2
    00001956 7210                   ADD         #16,R2
    00001958 410B                   JSR         @R1
    0000195A 2F26                   MOV.L       R2,@-R15
    0000195C E308                   MOV         #8,R3
    0000195E 33FC                   ADD         R15,R3
    00001960 2F36                   MOV.L       R3,@-R15
    00001962 D355                   MOV.L       L1175+80,R3; _cos
    00001964 430B                   JSR         @R3
    00001966 0009                   NOP
    00001968 D250                   MOV.L       L1175+68,R2; __muld
    0000196A 7F0C                   ADD         #12,R15
    0000196C E000                   MOV         #0,R0
    0000196E 2F06                   MOV.L       R0,@-R15
    00001970 D052                   MOV.L       L1175+84,R0; H'40200000
    00001972 2F06                   MOV.L       R0,@-R15
    00001974 63F3                   MOV         R15,R3
    00001976 7310                   ADD         #16,R3
    00001978 420B                   JSR         @R2
    0000197A 2F36                   MOV.L       R3,@-R15
    0000197C D050                   MOV.L       L1175+88,R0; __subdr
    0000197E 61F3                   MOV         R15,R1
    00001980 7110                   ADD         #16,R1
    00001982 400B                   JSR         @R0
    00001984 2F16                   MOV.L       R1,@-R15
    00001986 D34B                   MOV.L       L1175+76,R3; __dtoi
    00001988 430B                   JSR         @R3
    0000198A 0009                   NOP
    0000198C 65F6                   MOV.L       @R15+,R5
    0000198E 6403                   MOV         R0,R4
    00001990 D24C                   MOV.L       L1175+92,R2; _ML_line
    00001992 66F6                   MOV.L       @R15+,R6
    00001994 420B                   JSR         @R2
    00001996 67F6                   MOV.L       @R15+,R7
    00001998 7F04                   ADD         #4,R15
    0000199A              L1091:                            
      fonctions.   429        }
      fonctions.   430    
      fonctions.   431        if (vehicule == 8)
    0000199A 50F1                   MOV.L       @(4,R15),R0
    0000199C 8808                   CMP/EQ      #8,R0
    0000199E 8B2C                   BF          L1092
      fonctions.   432        {
      fonctions.   433            ML_filled_ellipse(x+7,60,5*y/45+1,y/45,ML_BLACK);
    000019A0 2F86                   MOV.L       R8,@-R15
    000019A2 E53C                   MOV         #60,R5
    000019A4 D334                   MOV.L       L1175+16,R3; _ML_filled_ellipse
    000019A6 57F6                   MOV.L       @(24,R15),R7
    000019A8 56F5                   MOV.L       @(20,R15),R6
    000019AA 7601                   ADD         #1,R6
    000019AC 430B                   JSR         @R3
    000019AE 54F3                   MOV.L       @(12,R15),R4
      fonctions.   434    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      fonctions.   435            ML_bmp_16_and(glaceAlpha[(int)(phase/30)],x,y);
    000019B0 D345                   MOV.L       L1175+96,R3; __$phase
    000019B2 7F04                   ADD         #4,R15
    000019B4 D045                   MOV.L       L1175+100,R0; H'41F00000
    000019B6 66E3                   MOV         R14,R6
    000019B8 D245                   MOV.L       L1175+104,R2; __divs
    000019BA 65D3                   MOV         R13,R5
    000019BC 420B                   JSR         @R2
    000019BE 6132                   MOV.L       @R3,R1
    000019C0 D144                   MOV.L       L1175+108,R1; __stoi
    000019C2 410B                   JSR         @R1
    000019C4 0009                   NOP
    000019C6 6403                   MOV         R0,R4
    000019C8 D243                   MOV.L       L1175+112,R2; __$glaceAlpha
    000019CA 4408                   SHLL2       R4
    000019CC D143                   MOV.L       L1175+116,R1; _ML_bmp_16_and
    000019CE 4408                   SHLL2       R4
    000019D0 4400                   SHLL        R4
    000019D2 410B                   JSR         @R1
    000019D4 342C                   ADD         R2,R4
      fonctions.   436            ML_bmp_16_or(glace[(int)(phase/30)],x,y);
    000019D6 66E3                   MOV         R14,R6
    000019D8 D23B                   MOV.L       L1175+96,R2; __$phase
    000019DA 65D3                   MOV         R13,R5
    000019DC D03B                   MOV.L       L1175+100,R0; H'41F00000
    000019DE D33C                   MOV.L       L1175+104,R3; __divs
    000019E0 430B                   JSR         @R3
    000019E2 6122                   MOV.L       @R2,R1
    000019E4 D13B                   MOV.L       L1175+108,R1; __stoi
    000019E6 410B                   JSR         @R1
    000019E8 0009                   NOP
    000019EA 6403                   MOV         R0,R4
    000019EC D33C                   MOV.L       L1175+120,R3; __$glace
    000019EE 4408                   SHLL2       R4
    000019F0 D13C                   MOV.L       L1175+124,R1; _ML_bmp_16_or
    000019F2 4408                   SHLL2       R4
    000019F4 4400                   SHLL        R4
    000019F6 410B                   JSR         @R1
    000019F8 343C                   ADD         R3,R4
    000019FA              L1092:                            
      fonctions.   437        }
      fonctions.   438    
      fonctions.   439        if (vehicule == 9)
    000019FA 50F1                   MOV.L       @(4,R15),R0
    000019FC 8809                   CMP/EQ      #9,R0
    000019FE 8901                   BT          L1177
    00001A00 A098                   BRA         L1093
    00001A02 0009                   NOP
    00001A04              L1177:                            
      fonctions.   440        {
      fonctions.   441            ML_filled_ellipse(x+10,60,5*y/45+2,y/45+1,ML_BLACK); // dessin de l'ombre
    00001A04 2F86                   MOV.L       R8,@-R15
    00001A06 E53C                   MOV         #60,R5
    00001A08 D31B                   MOV.L       L1175+16,R3; _ML_filled_ellipse
    00001A0A 57F6                   MOV.L       @(24,R15),R7
    00001A0C 56F5                   MOV.L       @(20,R15),R6
    00001A0E 7701                   ADD         #1,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A10 7602                   ADD         #2,R6
    00001A12 430B                   JSR         @R3
    00001A14 54FA                   MOV.L       @(40,R15),R4
    00001A16 7F04                   ADD         #4,R15
    00001A18 DD33                   MOV.L       L1175+128,R13; __$barryAlpha
    00001A1A 6B92                   MOV.L       @R9,R11
    00001A1C D32A                   MOV.L       L1175+96,R3; __$phase
    00001A1E 6132                   MOV.L       @R3,R1
    00001A20 D212                   MOV.L       L1175+4,R2 ; __nes
    00001A22 420B                   JSR         @R2
    00001A24 E000                   MOV         #0,R0
    00001A26 8800                   CMP/EQ      #0,R0
    00001A28 8B64                   BF          L1094
      fonctions.   442    
      fonctions.   443            if (phase == 0)
      fonctions.   444            {
      fonctions.   445                ML_bmp_and_cl(barryAlpha[sauvegarde->tenueEquipe],x+7,y,10,16); // masque alpha de barry en l'
                         +air
    00001A2A E210                   MOV         #16,R2
    00001A2C D32F                   MOV.L       L1175+132,R3; _ML_bmp_and_cl
    00001A2E E70A                   MOV         #10,R7
    00001A30 2F26                   MOV.L       R2,@-R15
    00001A32 66E3                   MOV         R14,R6
    00001A34 55F3                   MOV.L       @(12,R15),R5
    00001A36 E014                   MOV         #20,R0
    00001A38 04BC                   MOV.B       @(R0,R11),R4
    00001A3A 644C                   EXTU.B      R4,R4
    00001A3C 4408                   SHLL2       R4
    00001A3E 4408                   SHLL2       R4
    00001A40 4400                   SHLL        R4
    00001A42 430B                   JSR         @R3
    00001A44 34DC                   ADD         R13,R4
      fonctions.   446                ML_bmp_or(barryUp[sauvegarde->tenueEquipe],x+7,y,10,16); // affichage de barry en l'air
    00001A46 E210                   MOV         #16,R2
    00001A48 D329                   MOV.L       L1175+136,R3; __$barryUp
    00001A4A E70A                   MOV         #10,R7
    00001A4C 2F26                   MOV.L       R2,@-R15
    00001A4E 66E3                   MOV         R14,R6
    00001A50 55F4                   MOV.L       @(16,R15),R5
    00001A52 E014                   MOV         #20,R0
    00001A54 6492                   MOV.L       @R9,R4
    00001A56 044C                   MOV.B       @(R0,R4),R4
    00001A58 644C                   EXTU.B      R4,R4
    00001A5A 4408                   SHLL2       R4
    00001A5C 4408                   SHLL2       R4
    00001A5E 4400                   SHLL        R4
    00001A60 4C0B                   JSR         @R12
    00001A62 343C                   ADD         R3,R4
    00001A64 A066                   BRA         L1093
    00001A66 7F08                   ADD         #8,R15
    00001A68              L1175:                            
    00001A68 3F800000               .DATA.L     H'3F800000
    00001A6C <00000000>             .DATA.L     __nes
    00001A70 <00000000>             .DATA.L     __$dragonHautAlpha
    00001A74 <00000000>             .DATA.L     __$dragonHaut
    00001A78 <00000000>             .DATA.L     _ML_filled_ellipse
    00001A7C <00000000>             .DATA.L     _ML_filled_circle




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A80 <00000000>             .DATA.L     _ML_circle
    00001A84 <00000000>             .DATA.L     __$angle
    00001A88 <00000000>             .DATA.L     __itod
    00001A8C 43340000               .DATA.L     H'43340000
    00001A90 <00000000>             .DATA.L     __muls
    00001A94 <00000000>             .DATA.L     __stod
    00001A98 51EB851F               .DATA.L     H'51EB851F
    00001A9C 40091EB8               .DATA.L     H'40091EB8
    00001AA0 <00000000>             .DATA.L     __divdr
    00001AA4 <00000000>             .DATA.L     _sin
    00001AA8 40220000               .DATA.L     H'40220000
    00001AAC <00000000>             .DATA.L     __muld
    00001AB0 <00000000>             .DATA.L     __addd
    00001AB4 <00000000>             .DATA.L     __dtoi
    00001AB8 <00000000>             .DATA.L     _cos
    00001ABC 40200000               .DATA.L     H'40200000
    00001AC0 <00000000>             .DATA.L     __subdr
    00001AC4 <00000000>             .DATA.L     _ML_line
    00001AC8 <00000000>             .DATA.L     __$phase
    00001ACC 41F00000               .DATA.L     H'41F00000
    00001AD0 <00000000>             .DATA.L     __divs
    00001AD4 <00000000>             .DATA.L     __stoi
    00001AD8 <00000000>             .DATA.L     __$glaceAlpha
    00001ADC <00000000>             .DATA.L     _ML_bmp_16_and
    00001AE0 <00000000>             .DATA.L     __$glace
    00001AE4 <00000000>             .DATA.L     _ML_bmp_16_or
    00001AE8 <00000000>             .DATA.L     __$barryAlpha
    00001AEC <00000000>             .DATA.L     _ML_bmp_and_cl
    00001AF0 <00000000>             .DATA.L     __$barryUp
    00001AF4              L1094:                            
      fonctions.   447            }
      fonctions.   448            else
      fonctions.   449            {
      fonctions.   450                Disp_Bitmap(barryAlpha[sauvegarde->tenueEquipe],x+7,y,10,16,0);
    00001AF4 E100                   MOV         #0,R1
    00001AF6 E210                   MOV         #16,R2
    00001AF8 2F16                   MOV.L       R1,@-R15
    00001AFA E70A                   MOV         #10,R7
    00001AFC 2F26                   MOV.L       R2,@-R15
    00001AFE 66E3                   MOV         R14,R6
    00001B00 55F4                   MOV.L       @(16,R15),R5
    00001B02 E014                   MOV         #20,R0
    00001B04 04BC                   MOV.B       @(R0,R11),R4
    00001B06 644C                   EXTU.B      R4,R4
    00001B08 4408                   SHLL2       R4
    00001B0A 4408                   SHLL2       R4
    00001B0C 4400                   SHLL        R4
    00001B0E B133                   BSR         _Disp_Bitmap
    00001B10 34DC                   ADD         R13,R4
      fonctions.   451                Disp_Bitmap(barryUp[sauvegarde->tenueEquipe],x+7,y,10,16,1);
    00001B12 E210                   MOV         #16,R2
    00001B14 D33E                   MOV.L       L1178+2,R3 ; __$barryUp
    00001B16 E70A                   MOV         #10,R7
    00001B18 2F86                   MOV.L       R8,@-R15
    00001B1A 66E3                   MOV         R14,R6
    00001B1C 2F26                   MOV.L       R2,@-R15
    00001B1E E014                   MOV         #20,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B20 55F6                   MOV.L       @(24,R15),R5
    00001B22 6492                   MOV.L       @R9,R4
    00001B24 044C                   MOV.B       @(R0,R4),R4
    00001B26 644C                   EXTU.B      R4,R4
    00001B28 4408                   SHLL2       R4
    00001B2A 4408                   SHLL2       R4
    00001B2C 4400                   SHLL        R4
    00001B2E B123                   BSR         _Disp_Bitmap
    00001B30 343C                   ADD         R3,R4
    00001B32 7F10                   ADD         #16,R15
    00001B34              L1093:                            
      fonctions.   452            }
      fonctions.   453        }
      fonctions.   454    }
    00001B34 7F2C                   ADD         #44,R15
    00001B36 4F26                   LDS.L       @R15+,PR
    00001B38 68F6                   MOV.L       @R15+,R8
    00001B3A 69F6                   MOV.L       @R15+,R9
    00001B3C 6AF6                   MOV.L       @R15+,R10
    00001B3E 6BF6                   MOV.L       @R15+,R11
    00001B40 6CF6                   MOV.L       @R15+,R12
    00001B42 6DF6                   MOV.L       @R15+,R13
    00001B44 000B                   RTS
    00001B46 6EF6                   MOV.L       @R15+,R14
      fonctions.   455    
      fonctions.   456    int animationSucces(int time)
    00001B48              _animationSucces:                ; function: animationSucces
                                                           ; frame size=28
                                                           ; used runtime library name:
                                                           ; __divls
    00001B48 2FE6                   MOV.L       R14,@-R15
    00001B4A 6E43                   MOV         R4,R14
    00001B4C 2FD6                   MOV.L       R13,@-R15
      fonctions.   457    {
      fonctions.   458        static unsigned char frame = -1;
      fonctions.   459    
      fonctions.   460        if (time == -1) frame = -1, time = 1;
    00001B4E 60E3                   MOV         R14,R0
    00001B50 2FC6                   MOV.L       R12,@-R15
    00001B52 88FF                   CMP/EQ      #-1,R0
    00001B54 DD2F                   MOV.L       L1178+6,R13; __$frame$670
    00001B56 4F22                   STS.L       PR,@-R15
    00001B58 4F12                   STS.L       MACL,@-R15
    00001B5A 7FFC                   ADD         #-4,R15
    00001B5C 8F03                   BF/S        L1096
    00001B5E E401                   MOV         #1,R4
    00001B60 9255                   MOV.W       L1178,R2   ; H'00FF
    00001B62 6E43                   MOV         R4,R14
    00001B64 2D20                   MOV.B       R2,@R13
    00001B66              L1096:                            
      fonctions.   461        frame += (time == 9?2:1);
    00001B66 60E3                   MOV         R14,R0
    00001B68 8809                   CMP/EQ      #9,R0
    00001B6A 8B01                   BF          L1097
    00001B6C A001                   BRA         L1098
    00001B6E E302                   MOV         #2,R3
    00001B70              L1097:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B70 E301                   MOV         #1,R3
    00001B72              L1098:                            
      fonctions.   462        if (time == 9) time = 1;
    00001B72 60E3                   MOV         R14,R0
    00001B74 62D0                   MOV.B       @R13,R2
    00001B76 8809                   CMP/EQ      #9,R0
    00001B78 323C                   ADD         R3,R2
    00001B7A 8F01                   BF/S        L1099
    00001B7C 2D20                   MOV.B       R2,@R13
    00001B7E 6E43                   MOV         R4,R14
    00001B80              L1099:                            
      fonctions.   463    
      fonctions.   464        ML_bmp_and_cl(succesAlpha,11,frame<=20*time?frame/time-20:frame<80*time?0:(80*time-frame)/time,105,20)
                         +;
    00001B80 E214                   MOV         #20,R2
    00001B82 66E3                   MOV         R14,R6
    00001B84 2F26                   MOV.L       R2,@-R15
    00001B86 63E3                   MOV         R14,R3
    00001B88 6CD0                   MOV.B       @R13,R12
    00001B8A 4608                   SHLL2       R6
    00001B8C 6CCC                   EXTU.B      R12,R12
    00001B8E 363C                   ADD         R3,R6
    00001B90 4608                   SHLL2       R6
    00001B92 3C67                   CMP/GT      R6,R12
    00001B94 1F61                   MOV.L       R6,@(4,R15)
    00001B96 8D07                   BT/S        L1100
    00001B98 E769                   MOV         #105,R7
    00001B9A 61C3                   MOV         R12,R1
    00001B9C D31E                   MOV.L       L1178+10,R3; __divls
    00001B9E 430B                   JSR         @R3
    00001BA0 60E3                   MOV         R14,R0
    00001BA2 6603                   MOV         R0,R6
    00001BA4 A015                   BRA         L1102
    00001BA6 76EC                   ADD         #-20,R6
    00001BA8              L1100:                            
    00001BA8 66E3                   MOV         R14,R6
    00001BAA 63E3                   MOV         R14,R3
    00001BAC 4608                   SHLL2       R6
    00001BAE 363C                   ADD         R3,R6
    00001BB0 4608                   SHLL2       R6
    00001BB2 4608                   SHLL2       R6
    00001BB4 3C63                   CMP/GE      R6,R12
    00001BB6 8901                   BT          L1101
    00001BB8 A00B                   BRA         L1102
    00001BBA E600                   MOV         #0,R6
    00001BBC              L1101:                            
    00001BBC 61E3                   MOV         R14,R1
    00001BBE 63E3                   MOV         R14,R3
    00001BC0 4108                   SHLL2       R1
    00001BC2 313C                   ADD         R3,R1
    00001BC4 D314                   MOV.L       L1178+10,R3; __divls
    00001BC6 4108                   SHLL2       R1
    00001BC8 4108                   SHLL2       R1
    00001BCA 31C8                   SUB         R12,R1
    00001BCC 430B                   JSR         @R3
    00001BCE 60E3                   MOV         R14,R0
    00001BD0 6603                   MOV         R0,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001BD2              L1102:                            
    00001BD2 D412                   MOV.L       L1178+14,R4; __$succesAlpha
    00001BD4 D212                   MOV.L       L1178+18,R2; _ML_bmp_and_cl
    00001BD6 420B                   JSR         @R2
    00001BD8 E50B                   MOV         #11,R5
    00001BDA 7F04                   ADD         #4,R15
      fonctions.   465        ML_bmp_or_cl(succes,11,frame<=20*time?frame/time-20:frame<80*time?0:(80*time-frame)/time,105,20);
    00001BDC E314                   MOV         #20,R3
    00001BDE 2F36                   MOV.L       R3,@-R15
    00001BE0 6CD0                   MOV.B       @R13,R12
    00001BE2 6CCC                   EXTU.B      R12,R12
    00001BE4 52F1                   MOV.L       @(4,R15),R2
    00001BE6 3C27                   CMP/GT      R2,R12
    00001BE8 8D07                   BT/S        L1104
    00001BEA E769                   MOV         #105,R7
    00001BEC D20A                   MOV.L       L1178+10,R2; __divls
    00001BEE 61C3                   MOV         R12,R1
    00001BF0 420B                   JSR         @R2
    00001BF2 60E3                   MOV         R14,R0
    00001BF4 6603                   MOV         R0,R6
    00001BF6 A020                   BRA         L1106
    00001BF8 76EC                   ADD         #-20,R6
    00001BFA              L1104:                            
    00001BFA 66E3                   MOV         R14,R6
    00001BFC 62E3                   MOV         R14,R2
    00001BFE 4608                   SHLL2       R6
    00001C00 362C                   ADD         R2,R6
    00001C02 4608                   SHLL2       R6
    00001C04 4608                   SHLL2       R6
    00001C06 3C63                   CMP/GE      R6,R12
    00001C08 890C                   BT          L1105
    00001C0A A016                   BRA         L1106
    00001C0C E600                   MOV         #0,R6
    00001C0E              L1178:                            
    00001C0E 00FF                   .DATA.W     H'00FF
    00001C10 <00000000>             .DATA.L     __$barryUp
    00001C14 <00000000>             .DATA.L     __$frame$670
    00001C18 <00000000>             .DATA.L     __divls
    00001C1C <00000000>             .DATA.L     __$succesAlpha
    00001C20 <00000000>             .DATA.L     _ML_bmp_and_cl
    00001C24              L1105:                            
    00001C24 61E3                   MOV         R14,R1
    00001C26 62E3                   MOV         R14,R2
    00001C28 4108                   SHLL2       R1
    00001C2A 312C                   ADD         R2,R1
    00001C2C D241                   MOV.L       L1179,R2   ; __divls
    00001C2E 4108                   SHLL2       R1
    00001C30 4108                   SHLL2       R1
    00001C32 31C8                   SUB         R12,R1
    00001C34 420B                   JSR         @R2
    00001C36 60E3                   MOV         R14,R0
    00001C38 6603                   MOV         R0,R6
    00001C3A              L1106:                            
    00001C3A D43F                   MOV.L       L1179+4,R4 ; __$succes
    00001C3C D33F                   MOV.L       L1179+8,R3 ; _ML_bmp_or_cl
    00001C3E 430B                   JSR         @R3
    00001C40 E50B                   MOV         #11,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      fonctions.   466    
      fonctions.   467        if (frame > 100*time)
    00001C42 E364                   MOV         #100,R3
    00001C44 62D0                   MOV.B       @R13,R2
    00001C46 622C                   EXTU.B      R2,R2
    00001C48 0E37                   MUL.L       R3,R14
    00001C4A 0E1A                   STS         MACL,R14
    00001C4C 32E7                   CMP/GT      R14,R2
    00001C4E 8F04                   BF/S        L1108
    00001C50 7F04                   ADD         #4,R15
      fonctions.   468        {
      fonctions.   469            frame = 0;
    00001C52 E100                   MOV         #0,R1
    00001C54 2D10                   MOV.B       R1,@R13
      fonctions.   470            return 1;
    00001C56 A001                   BRA         L1109
    00001C58 E001                   MOV         #1,R0
    00001C5A              L1108:                            
      fonctions.   471        }
      fonctions.   472        else return 0;
    00001C5A E000                   MOV         #0,R0
      fonctions.   473    }
    00001C5C              L1109:                            
    00001C5C 7F04                   ADD         #4,R15
    00001C5E 4F16                   LDS.L       @R15+,MACL
    00001C60 4F26                   LDS.L       @R15+,PR
    00001C62 6CF6                   MOV.L       @R15+,R12
    00001C64 6DF6                   MOV.L       @R15+,R13
    00001C66 000B                   RTS
    00001C68 6EF6                   MOV.L       @R15+,R14
      fonctions.   474    
      fonctions.   475    int choixHitbox(int y, int vehic)
    00001C6A              _choixHitbox:                    ; function: choixHitbox
                                                           ; frame size=0
      fonctions.   476    {
      fonctions.   477        switch (vehic)
    00001C6A 6053                   MOV         R5,R0
    00001C6C 88FF                   CMP/EQ      #-1,R0
    00001C6E 8915                   BT          L701
    00001C70 8800                   CMP/EQ      #0,R0
    00001C72 8913                   BT          L701
    00001C74 8801                   CMP/EQ      #1,R0
    00001C76 8913                   BT          L821
    00001C78 8802                   CMP/EQ      #2,R0
    00001C7A 8918                   BT          L822
    00001C7C 8803                   CMP/EQ      #3,R0
    00001C7E 8918                   BT          L823
    00001C80 8804                   CMP/EQ      #4,R0
    00001C82 8918                   BT          L824
    00001C84 8805                   CMP/EQ      #5,R0
    00001C86 8918                   BT          L825
    00001C88 8806                   CMP/EQ      #6,R0
    00001C8A 891D                   BT          L826
    00001C8C 8807                   CMP/EQ      #7,R0
    00001C8E 891D                   BT          L827
    00001C90 8808                   CMP/EQ      #8,R0
    00001C92 891D                   BT          L828




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C94 8809                   CMP/EQ      #9,R0
    00001C96 891D                   BT          L829
    00001C98 A01D                   BRA         L1112
    00001C9A 0009                   NOP
    00001C9C              L701:
      fonctions.   478        {
      fonctions.   479            case -1: return 0; break;
      fonctions.   480            case 0: return 0; break;
    00001C9C 000B                   RTS
    00001C9E E000                   MOV         #0,R0
    00001CA0              L821:                            ; case label 
      fonctions.   481            case 1:
      fonctions.   482                if (y == 44) return 1;
    00001CA0 6043                   MOV         R4,R0
    00001CA2 882C                   CMP/EQ      #44,R0
    00001CA4 8B01                   BF          L1113
    00001CA6 000B                   RTS
    00001CA8 E001                   MOV         #1,R0
    00001CAA              L1113:                            
      fonctions.   483                else return 2;
    00001CAA 000B                   RTS
    00001CAC E002                   MOV         #2,R0
    00001CAE              L822:                            ; case label 
      fonctions.   484                break;
      fonctions.   485            case 2: return 3; break;
    00001CAE 000B                   RTS
    00001CB0 E003                   MOV         #3,R0
    00001CB2              L823:                            ; case label 
      fonctions.   486            case 3: return 4; break;
    00001CB2 000B                   RTS
    00001CB4 E004                   MOV         #4,R0
    00001CB6              L824:                            ; case label 
      fonctions.   487            case 4: return 5; break;
    00001CB6 000B                   RTS
    00001CB8 E005                   MOV         #5,R0
    00001CBA              L825:                            ; case label 
      fonctions.   488            case 5:
      fonctions.   489                if (y == 40) return 6;
    00001CBA 6043                   MOV         R4,R0
    00001CBC 8828                   CMP/EQ      #40,R0
    00001CBE 8B01                   BF          L1115
    00001CC0 000B                   RTS
    00001CC2 E006                   MOV         #6,R0
    00001CC4              L1115:                            
      fonctions.   490                else return 7;
    00001CC4 000B                   RTS
    00001CC6 E007                   MOV         #7,R0
    00001CC8              L826:                            ; case label 
      fonctions.   491                break;
      fonctions.   492            case 6: return 8; break;
    00001CC8 000B                   RTS
    00001CCA E008                   MOV         #8,R0
    00001CCC              L827:                            ; case label 
      fonctions.   493            case 7: return 9; break;
    00001CCC 000B                   RTS
    00001CCE E009                   MOV         #9,R0
    00001CD0              L828:                            ; case label 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      fonctions.   494            case 8: return 10; break;
    00001CD0 000B                   RTS
    00001CD2 E00A                   MOV         #10,R0
    00001CD4              L829:                            ; case label 
      fonctions.   495            case 9: return 11; break;
    00001CD4 E00B                   MOV         #11,R0
      fonctions.   496        }
      fonctions.   497    }
    00001CD6              L1112:                            
    00001CD6 000B                   RTS
    00001CD8 0009                   NOP
      fonctions.   498    
      fonctions.   499    void dsInt(int x, int y, int nb)
    00001CDA              _dsInt:                          ; function: dsInt
                                                           ; frame size=36
      fonctions.   500    {
      fonctions.   501        char text[10];
      fonctions.   502        sprintf(text,"%d",nb);
    00001CDA 6363                   MOV         R6,R3
    00001CDC D218                   MOV.L       L1179+12,R2; L681
    00001CDE 4F22                   STS.L       PR,@-R15
    00001CE0 D318                   MOV.L       L1179+16,R3; _sprintf
    00001CE2 7FE8                   ADD         #-24,R15
    00001CE4 1F41                   MOV.L       R4,@(4,R15)
    00001CE6 2F52                   MOV.L       R5,@R15
    00001CE8 1F62                   MOV.L       R6,@(8,R15)
    00001CEA 2F66                   MOV.L       R6,@-R15
    00001CEC 2F26                   MOV.L       R2,@-R15
    00001CEE 64F3                   MOV         R15,R4
    00001CF0 430B                   JSR         @R3
    00001CF2 7414                   ADD         #20,R4
      fonctions.   503        PrintXY(x,y,text,1);
    00001CF4 55F2                   MOV.L       @(8,R15),R5
    00001CF6 E701                   MOV         #1,R7
    00001CF8 D313                   MOV.L       L1179+20,R3; _PrintXY
    00001CFA 66F3                   MOV         R15,R6
    00001CFC 7614                   ADD         #20,R6
    00001CFE 430B                   JSR         @R3
    00001D00 54F3                   MOV.L       @(12,R15),R4
      fonctions.   504    }
    00001D02 7F20                   ADD         #32,R15
    00001D04 4F26                   LDS.L       @R15+,PR
    00001D06 000B                   RTS
    00001D08 0009                   NOP
      fonctions.   505    
      fonctions.   506    unsigned char get_default_contrast() // Function from Eiyeron
    00001D0A              _get_default_contrast:           ; function: get_default_contrast
                                                           ; frame size=0
      fonctions.   507    {
      fonctions.   508            int model = *(int*)0x80000300;
    00001D0A D310                   MOV.L       L1179+24,R3; H'80000300
    00001D0C 6032                   MOV.L       @R3,R0
      fonctions.   509    
      fonctions.   510            switch(model) {
    00001D0E 8800                   CMP/EQ      #0,R0
    00001D10 8D0E                   BT/S        L831
    00001D12 6403                   MOV         R0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D14 D10E                   MOV.L       L1179+28,R1; H'33363246
    00001D16 3010                   CMP/EQ      R1,R0
    00001D18 8922                   BT          L832
    00001D1A D10E                   MOV.L       L1179+32,R1; H'34393542
    00001D1C 3010                   CMP/EQ      R1,R0
    00001D1E 8925                   BT          L702
    00001D20 D10D                   MOV.L       L1179+36,R1; H'80005D7C
    00001D22 3010                   CMP/EQ      R1,R0
    00001D24 891F                   BT          L834
    00001D26 D10D                   MOV.L       L1179+40,R1; H'34393342
    00001D28 3010                   CMP/EQ      R1,R0
    00001D2A 891F                   BT          L702
    00001D2C A021                   BRA         L836
    00001D2E 0009                   NOP
    00001D30              L831:                            ; case label 
      fonctions.   511                    case 0 :
      fonctions.   512                            return 0; // EMULATOR
    00001D30 000B                   RTS
    00001D32 E000                   MOV         #0,R0
    00001D34              L1179:                            
    00001D34 <00000000>             .DATA.L     __divls
    00001D38 <00000000>             .DATA.L     __$succes
    00001D3C <00000000>             .DATA.L     _ML_bmp_or_cl
    00001D40 <00000000>             .DATA.L     L681
    00001D44 <00000000>             .DATA.L     _sprintf
    00001D48 <00000000>             .DATA.L     _PrintXY
    00001D4C 80000300               .DATA.L     H'80000300
    00001D50 33363246               .DATA.L     H'33363246
    00001D54 34393542               .DATA.L     H'34393542
    00001D58 80005D7C               .DATA.L     H'80005D7C
    00001D5C 34393342               .DATA.L     H'34393342
    00001D60              L832:                            ; case label 
      fonctions.   513                    break;
      fonctions.   514    
      fonctions.   515                    case 0x33363246:
      fonctions.   516                            return 162; // G35
    00001D60 9089                   MOV.W       L1180,R0   ; H'00A2
    00001D62 000B                   RTS
    00001D64 0009                   NOP
    00001D66              L834:                            ; case label 
      fonctions.   517                    break;
      fonctions.   518    
      fonctions.   519                    case 0x34393542:
      fonctions.   520                            return 168; // G75
      fonctions.   521                    break;
      fonctions.   522    
      fonctions.   523                    case 0x80005D7C :
      fonctions.   524                            return 170; // G85
    00001D66 9087                   MOV.W       L1180+2,R0 ; H'00AA
    00001D68 000B                   RTS
    00001D6A 0009                   NOP
    00001D6C              L702:
      fonctions.   525                    break;
      fonctions.   526    
      fonctions.   527                    case 0x34393342 :
      fonctions.   528                            return 168; // G95
    00001D6C 9085                   MOV.W       L1180+4,R0 ; H'00A8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D6E 000B                   RTS
    00001D70 0009                   NOP
    00001D72              L836:                            ; default label 
      fonctions.   529                    break;
      fonctions.   530    
      fonctions.   531                    default :
      fonctions.   532                            return 165; // UNDEFINED
    00001D72 9083                   MOV.W       L1180+6,R0 ; H'00A5
      fonctions.   533                    break;
      fonctions.   534            }
      fonctions.   535    }
    00001D74              L1118:                            
    00001D74 000B                   RTS
    00001D76 0009                   NOP
      fonctions.   536    
      fonctions.   537    void Disp_Bitmap(const unsigned char *b, int x, int y, int w, int h, int m) // function from Lephenixnoir
    00001D78              _Disp_Bitmap:                    ; function: Disp_Bitmap
                                                           ; frame size=68
    00001D78 2FE6                   MOV.L       R14,@-R15
    00001D7A 6373                   MOV         R7,R3
    00001D7C 2FD6                   MOV.L       R13,@-R15
    00001D7E 73FF                   ADD         #-1,R3
    00001D80 2FC6                   MOV.L       R12,@-R15
    00001D82 4321                   SHAR        R3
    00001D84 2FB6                   MOV.L       R11,@-R15
    00001D86 4321                   SHAR        R3
    00001D88 DC3D                   MOV.L       L1180+10,R12; _Bdisp_SetPoint_VRAM
    00001D8A 6B63                   MOV         R6,R11
    00001D8C 2FA6                   MOV.L       R10,@-R15
    00001D8E 4321                   SHAR        R3
    00001D90 2F96                   MOV.L       R9,@-R15
    00001D92 6A73                   MOV         R7,R10
    00001D94 2F86                   MOV.L       R8,@-R15
    00001D96 7301                   ADD         #1,R3
    00001D98 4F22                   STS.L       PR,@-R15
      fonctions.   538    {
      fonctions.   539      unsigned char v;
      fonctions.   540      int i,j;
      fonctions.   541    
      fonctions.   542      for(i=0;i<h;i++) for(j=0;j<w;j++)
    00001D9A E800                   MOV         #0,R8
    00001D9C 4F12                   STS.L       MACL,@-R15
    00001D9E 6D83                   MOV         R8,R13
    00001DA0 7FE0                   ADD         #-32,R15
    00001DA2 1F41                   MOV.L       R4,@(4,R15)
    00001DA4 2F52                   MOV.L       R5,@R15
    00001DA6 1F37                   MOV.L       R3,@(28,R15)
    00001DA8 69F2                   MOV.L       @R15,R9
    00001DAA A055                   BRA         L1119
    00001DAC 39AC                   ADD         R10,R9
    00001DAE              L1120:                            
    00001DAE 6E83                   MOV         R8,R14
    00001DB0 53F7                   MOV.L       @(28,R15),R3
    00001DB2 6293                   MOV         R9,R2
    00001DB4 03D7                   MUL.L       R13,R3
    00001DB6 6193                   MOV         R9,R1
    00001DB8 031A                   STS         MACL,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001DBA 32D8                   SUB         R13,R2
    00001DBC 1F36                   MOV.L       R3,@(24,R15)
    00001DBE 31D8                   SUB         R13,R1
    00001DC0 72FF                   ADD         #-1,R2
    00001DC2 71FF                   ADD         #-1,R1
    00001DC4 1F23                   MOV.L       R2,@(12,R15)
    00001DC6 63B3                   MOV         R11,R3
    00001DC8 1F12                   MOV.L       R1,@(8,R15)
    00001DCA 6293                   MOV         R9,R2
    00001DCC 33DC                   ADD         R13,R3
    00001DCE 32D8                   SUB         R13,R2
    00001DD0 1F35                   MOV.L       R3,@(20,R15)
    00001DD2 4A15                   CMP/PL      R10
    00001DD4 72FF                   ADD         #-1,R2
    00001DD6 8F3E                   BF/S        L1121
    00001DD8 1F24                   MOV.L       R2,@(16,R15)
    00001DDA              L1122:                            
      fonctions.   543      {
      fonctions.   544        v = (*(b+i*(((w-1)>>3)+1)+(j>>3))>>(~j&7))&1;
    00001DDA 60E3                   MOV         R14,R0
    00001DDC 52F6                   MOV.L       @(24,R15),R2
    00001DDE E401                   MOV         #1,R4
    00001DE0 53F1                   MOV.L       @(4,R15),R3
    00001DE2 4021                   SHAR        R0
    00001DE4 4021                   SHAR        R0
    00001DE6 4021                   SHAR        R0
    00001DE8 302C                   ADD         R2,R0
    00001DEA 003C                   MOV.B       @(R0,R3),R0
    00001DEC 610C                   EXTU.B      R0,R1
    00001DEE 60E7                   NOT         R14,R0
    00001DF0 C907                   AND         #7,R0
    00001DF2 600B                   NEG         R0,R0
    00001DF4 410D                   SHLD        R0,R1
    00001DF6 2419                   AND         R1,R4
      fonctions.   545    
      fonctions.   546        switch(m)
    00001DF8 E048                   MOV         #72,R0
    00001DFA 00FE                   MOV.L       @(R0,R15),R0
    00001DFC 8800                   CMP/EQ      #0,R0
    00001DFE 8905                   BT          L837
    00001E00 8801                   CMP/EQ      #1,R0
    00001E02 890D                   BT          L838
    00001E04 8802                   CMP/EQ      #2,R0
    00001E06 8915                   BT          L839
    00001E08 A022                   BRA         L1123
    00001E0A 0009                   NOP
    00001E0C              L837:                            ; case label 
      fonctions.   547        {
      fonctions.   548    /* Sprite normal
      fonctions.   549          case 0: if(!v) Bdisp_SetPoint_VRAM(x+j,y+i,0); break;
      fonctions.   550          case 1: if(v)  Bdisp_SetPoint_VRAM(x+j,y+i,1); break;
      fonctions.   551          case 2: if(v)  Bdisp_SetPoint_VRAM(x+j,y+i,!Bdisp_GetPoint_VRAM(x+j,y+i)); break;
      fonctions.   552    */
      fonctions.   553    /* Sprite a 90° */
      fonctions.   554          case 0: if(!v) Bdisp_SetPoint_VRAM(x+w-1-i,y+j,0); break;
    00001E0C 644C                   EXTU.B      R4,R4
    00001E0E 2448                   TST         R4,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E10 8B1E                   BF          L1123
    00001E12 E600                   MOV         #0,R6
    00001E14 65B3                   MOV         R11,R5
    00001E16 35EC                   ADD         R14,R5
    00001E18 4C0B                   JSR         @R12
    00001E1A 54F3                   MOV.L       @(12,R15),R4
    00001E1C A018                   BRA         L1123
    00001E1E 0009                   NOP
    00001E20              L838:                            ; case label 
      fonctions.   555          case 1: if(v)  Bdisp_SetPoint_VRAM(x+w-1-i,y+j,1); break;
    00001E20 644C                   EXTU.B      R4,R4
    00001E22 2448                   TST         R4,R4
    00001E24 8914                   BT          L1123
    00001E26 E601                   MOV         #1,R6
    00001E28 65B3                   MOV         R11,R5
    00001E2A 35EC                   ADD         R14,R5
    00001E2C 4C0B                   JSR         @R12
    00001E2E 54F2                   MOV.L       @(8,R15),R4
    00001E30 A00E                   BRA         L1123
    00001E32 0009                   NOP
    00001E34              L839:                            ; case label 
      fonctions.   556          case 2: if(v)  Bdisp_SetPoint_VRAM(x+w-1-i,y+j,!Bdisp_GetPoint_VRAM(x+j,y+i)); break;
    00001E34 644C                   EXTU.B      R4,R4
    00001E36 2448                   TST         R4,R4
    00001E38 890A                   BT          L1123
    00001E3A 55F5                   MOV.L       @(20,R15),R5
    00001E3C 64F2                   MOV.L       @R15,R4
    00001E3E D111                   MOV.L       L1180+14,R1; _Bdisp_GetPoint_VRAM
    00001E40 410B                   JSR         @R1
    00001E42 34EC                   ADD         R14,R4
    00001E44 2008                   TST         R0,R0
    00001E46 0629                   MOVT        R6
    00001E48 65B3                   MOV         R11,R5
    00001E4A 35EC                   ADD         R14,R5
    00001E4C 4C0B                   JSR         @R12
    00001E4E 54F4                   MOV.L       @(16,R15),R4
    00001E50              L1123:                            
    00001E50 7E01                   ADD         #1,R14
    00001E52 3EA3                   CMP/GE      R10,R14
    00001E54 8BC1                   BF          L1122
    00001E56              L1121:                            
    00001E56 7D01                   ADD         #1,R13
    00001E58              L1119:                            
    00001E58 E044                   MOV         #68,R0
    00001E5A 03FE                   MOV.L       @(R0,R15),R3
    00001E5C 3D33                   CMP/GE      R3,R13
    00001E5E 8BA6                   BF          L1120
      fonctions.   557        }
      fonctions.   558      }
      fonctions.   559    }
    00001E60 7F20                   ADD         #32,R15
    00001E62 4F16                   LDS.L       @R15+,MACL
    00001E64 4F26                   LDS.L       @R15+,PR
    00001E66 68F6                   MOV.L       @R15+,R8
    00001E68 69F6                   MOV.L       @R15+,R9
    00001E6A 6AF6                   MOV.L       @R15+,R10
    00001E6C 6BF6                   MOV.L       @R15+,R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E6E 6CF6                   MOV.L       @R15+,R12
    00001E70 6DF6                   MOV.L       @R15+,R13
    00001E72 000B                   RTS
    00001E74 6EF6                   MOV.L       @R15+,R14
    00001E76              L1180:                            
    00001E76 00A2                   .DATA.W     H'00A2
    00001E78 00AA                   .DATA.W     H'00AA
    00001E7A 00A8                   .DATA.W     H'00A8
    00001E7C 00A5                   .DATA.W     H'00A5
    00001E7E 0000                   .DATA.W     0
    00001E80 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    00001E84 <00000000>             .DATA.L     _Bdisp_GetPoint_VRAM
C   00000000              __$barryUp:                      ; static: barryUp
    00000000 08803F807F             .DATA.B     H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             80FF80F900 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'48,H'00,H'70,H'00,
             F880CA80CA +                       H'3E,H'00,H'3E,H'00,H'3E,H'00,H'FF,H'80,H'79,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             4068805080 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3D,H'00,H'78,H'00,H'70,H'00,
             AF0050802E +                       H'1C,H'00,H'22,H'00,H'22,H'00,H'7F,H'C0,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             8025004800 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'48,H'00,H'70,H'00,
             70003E003E +                       H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'FA,H'40,
             003E00FF80 +                       H'7F,H'80,H'5F,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3D,H'00,H'78,H'00,H'70,H'00,
             7900F880CA +                       H'00,H'00,H'3F,H'00,H'41,H'80,H'80,H'80,H'80,H'80,H'8F,H'80,H'8E,H'80,H'CF,H'40,
             80CA406880 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3D,H'00,H'48,H'00,H'70,H'00,
             5080AF0050 +                       H'08,H'00,H'14,H'00,H'22,H'00,H'41,H'00,H'80,H'80,H'FF,H'80,H'D8,H'80,H'AB,H'40,
             803E803D00 +                       H'58,H'80,H'70,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'48,H'00,H'70,H'00
             780070001C   
             0022002200   
             7FC0F900F8   
             80CA80CA40   
             68805080AF   
             0050802E80   
             2500480070   
             0008803F80   
             7F80FF80F9   
             00F880CA80   
             FA407F805F   
             80AF005080   
             3E803D0078   
             0070000000   
             3F00418080   
             8080808F80   
             8E80CF4068   
             805080AF00   
             50803E803D   
             0048007000   
             0800140022   
             0041008080   
             FF80D880AB   
             4058807080   
             AF0050802E   
             8025004800   
             7000         
    000000C0              __$barryDown1:                   ; static: barryDown1
    000000C0 08803F807F             .DATA.B     H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             80FF80F900 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'49,H'00,H'77,H'00,
             F880CA80CA +                       H'3E,H'00,H'3E,H'00,H'3E,H'00,H'FF,H'80,H'79,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             4068805080 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'7F,H'00,H'77,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             AF0050802E +                       H'1C,H'00,H'22,H'00,H'22,H'00,H'7F,H'C0,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             8025004900 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'49,H'00,H'77,H'00,
             77003E003E +                       H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'FA,H'40,
             003E00FF80 +                       H'7F,H'80,H'5F,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'7F,H'00,H'77,H'00,
             7900F880CA +                       H'00,H'00,H'3F,H'00,H'41,H'80,H'80,H'80,H'80,H'80,H'8F,H'80,H'8E,H'80,H'CF,H'40,
             80CA406880 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'49,H'00,H'77,H'00,
             5080AF0050 +                       H'08,H'00,H'14,H'00,H'22,H'00,H'41,H'00,H'80,H'80,H'FF,H'80,H'D8,H'80,H'AB,H'40,
             803E803F00 +                       H'58,H'80,H'70,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'25,H'00,H'49,H'00,H'77,H'00
             7F0077001C   
             0022002200   
             7FC0F900F8   
             80CA80CA40   
             68805080AF   
             0050802E80   
             2500490077   
             0008803F80   
             7F80FF80F9   
             00F880CA80   
             FA407F805F   
             80AF005080   
             3E803F007F   
             0077000000   
             3F00418080   
             8080808F80   
             8E80CF4068   
             805080AF00   
             50803E803F   
             0049007700   
             0800140022   
             0041008080   
             FF80D880AB   
             4058807080   
             AF0050802E   
             8025004900   
             7700         
    00000180              __$barryDown2:                   ; static: barryDown2
    00000180 08803F807F             .DATA.B     H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             80FF80F900 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'23,H'00,H'1A,H'00,H'0E,H'00,
             F880CA80CA +                       H'3E,H'00,H'3E,H'00,H'3E,H'00,H'FF,H'80,H'79,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             4068805080 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'1E,H'00,H'0E,H'00,
             AF0050802E +                       H'1C,H'00,H'22,H'00,H'22,H'00,H'7F,H'C0,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'CA,H'40,
             8023001A00 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'23,H'00,H'1A,H'00,H'0E,H'00,
             0E003E003E +                       H'08,H'80,H'3F,H'80,H'7F,H'80,H'FF,H'80,H'F9,H'00,H'F8,H'80,H'CA,H'80,H'FA,H'40,
             003E00FF80 +                       H'7F,H'80,H'5F,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'1E,H'00,H'0E,H'00,
             7900F880CA +                       H'00,H'00,H'3F,H'00,H'41,H'80,H'80,H'80,H'80,H'80,H'8F,H'80,H'8E,H'80,H'CF,H'40,
             80CA406880 +                       H'68,H'80,H'50,H'80,H'AF,H'00,H'50,H'80,H'3E,H'80,H'3F,H'00,H'12,H'00,H'0E,H'00,
             5080AF0050 +                       H'08,H'00,H'14,H'00,H'22,H'00,H'41,H'00,H'80,H'80,H'FF,H'80,H'D8,H'80,H'AB,H'40,
             803E803F00 +                       H'58,H'80,H'70,H'80,H'AF,H'00,H'50,H'80,H'2E,H'80,H'23,H'00,H'1A,H'00,H'0E,H'00
             1E000E001C   
             0022002200   
             7FC0F900F8   
             80CA80CA40   
             68805080AF   
             0050802E80   
             23001A000E   
             0008803F80   
             7F80FF80F9   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             00F880CA80   
             FA407F805F   
             80AF005080   
             3E803F001E   
             000E000000   
             3F00418080   
             8080808F80   
             8E80CF4068   
             805080AF00   
             50803E803F   
             0012000E00   
             0800140022   
             0041008080   
             FF80D880AB   
             4058807080   
             AF0050802E   
             8023001A00   
             0E00         
    00000240              __$barryAlpha:                   ; static: barryAlpha
    00000240 F77FC07F80             .DATA.B     H'F7,H'7F,H'C0,H'7F,H'80,H'7F,H'00,H'7F,H'00,H'FF,H'00,H'7F,H'00,H'7F,H'00,H'3F,
             7F007F00FF +                       H'80,H'7F,H'80,H'7F,H'40,H'FF,H'A0,H'7F,H'C0,H'7F,H'C2,H'FF,H'87,H'FF,H'8F,H'FF,
             007F007F00 +                       H'C1,H'FF,H'C1,H'FF,H'C1,H'FF,H'00,H'7F,H'80,H'FF,H'00,H'7F,H'00,H'7F,H'00,H'3F,
             3F807F807F +                       H'80,H'7F,H'80,H'7F,H'00,H'FF,H'80,H'7F,H'C0,H'7F,H'C2,H'FF,H'87,H'FF,H'8F,H'FF,
             40FFA07FC0 +                       H'E3,H'C0,H'C1,H'C0,H'C1,H'C0,H'80,H'00,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             7FC2FF87FF +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C2,H'C0,H'87,H'C0,H'8F,H'C0,
             8FFFC1FFC1 +                       H'F7,H'40,H'C0,H'40,H'80,H'40,H'00,H'40,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             FFC1FF007F +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C2,H'C0,H'87,H'C0,H'8F,H'C0,
             80FF007F00 +                       H'FF,H'C0,H'C0,H'C0,H'80,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             7F003F807F +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C2,H'C0,H'87,H'C0,H'8F,H'C0,
             807F00FF80 +                       H'F7,H'C0,H'E3,H'C0,H'C1,H'C0,H'80,H'C0,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             7FC07FC2FF +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C2,H'C0,H'87,H'C0,H'8F,H'C0
             87FF8FFFE3   
             C0C1C0C1C0   
             800000C000   
             4000400000   
             8040804000   
             C08040C040   
             C2C087C08F   
             C0F740C040   
             8040004000   
             C000400040   
             0000804080   
             4000C08040   
             C040C2C087   
             C08FC0FFC0   
             C0C0804000   
             4000400040   
             0040000080   
             40804000C0   
             8040C040C2   
             C087C08FC0   
             F7C0E3C0C1   
             C080C00040   
             0040004000   
             0080408040   
             00C08040C0   
             40C2C087C0   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             8FC0         
    00000300              __$barryDown1Alpha:              ; static: barryDown1Alpha
    00000300 F77FC07F80             .DATA.B     H'F7,H'7F,H'C0,H'7F,H'80,H'7F,H'00,H'7F,H'00,H'FF,H'00,H'7F,H'00,H'7F,H'00,H'3F,
             7F007F00FF +                       H'80,H'7F,H'80,H'7F,H'40,H'FF,H'A0,H'7F,H'C0,H'7F,H'C0,H'FF,H'80,H'FF,H'88,H'FF,
             007F007F00 +                       H'C1,H'C0,H'C1,H'C0,H'C1,H'C0,H'00,H'40,H'80,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             3F807F807F +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'80,H'C0,H'88,H'C0,
             40FFA07FC0 +                       H'E3,H'C0,H'C1,H'C0,H'C1,H'C0,H'80,H'00,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             7FC0FF80FF +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'80,H'C0,H'88,H'C0,
             88FFC1C0C1 +                       H'F7,H'40,H'C0,H'40,H'80,H'40,H'00,H'40,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             C0C1C00040 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'80,H'C0,H'88,H'C0,
             80C0004000 +                       H'FF,H'C0,H'C0,H'C0,H'80,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             4000008040 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'80,H'C0,H'88,H'C0,
             804000C080 +                       H'F7,H'C0,H'E3,H'C0,H'C1,H'C0,H'80,H'C0,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             40C040C0C0 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'80,H'C0,H'88,H'C0
             80C088C0E3   
             C0C1C0C1C0   
             800000C000   
             4000400000   
             8040804000   
             C08040C040   
             C0C080C088   
             C0F740C040   
             8040004000   
             C000400040   
             0000804080   
             4000C08040   
             C040C0C080   
             C088C0FFC0   
             C0C0804000   
             4000400040   
             0040000080   
             40804000C0   
             8040C040C0   
             C080C088C0   
             F7C0E3C0C1   
             C080C00040   
             0040004000   
             0080408040   
             00C08040C0   
             40C0C080C0   
             88C0         
    000003C0              __$barryDown2Alpha:              ; static: barryDown2Alpha
    000003C0 F77FC07F80             .DATA.B     H'F7,H'7F,H'C0,H'7F,H'80,H'7F,H'00,H'7F,H'00,H'FF,H'00,H'7F,H'00,H'7F,H'00,H'3F,
             7F007F00FF +                       H'80,H'7F,H'80,H'7F,H'40,H'FF,H'A0,H'7F,H'C0,H'7F,H'C0,H'FF,H'E1,H'FF,H'F1,H'FF,
             007F007F00 +                       H'C1,H'C0,H'C1,H'C0,H'C1,H'C0,H'00,H'40,H'80,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             3F807F807F +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'E1,H'C0,H'F1,H'C0,
             40FFA07FC0 +                       H'E3,H'C0,H'C1,H'C0,H'C1,H'C0,H'80,H'00,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             7FC0FFE1FF +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'E1,H'C0,H'F1,H'C0,
             F1FFC1C0C1 +                       H'F7,H'40,H'C0,H'40,H'80,H'40,H'00,H'40,H'00,H'C0,H'00,H'40,H'00,H'40,H'00,H'00,
             C0C1C00040 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'E1,H'C0,H'F1,H'C0,
             80C0004000 +                       H'FF,H'C0,H'C0,H'C0,H'80,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             4000008040 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'E1,H'C0,H'F1,H'C0,
             804000C080 +                       H'F7,H'C0,H'E3,H'C0,H'C1,H'C0,H'80,H'C0,H'00,H'40,H'00,H'40,H'00,H'40,H'00,H'00,
             40C040C0C0 +                       H'80,H'40,H'80,H'40,H'00,H'C0,H'80,H'40,H'C0,H'40,H'C0,H'C0,H'E1,H'C0,H'F1,H'C0
             E1C0F1C0E3   
             C0C1C0C1C0   
             800000C000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             4000400000   
             8040804000   
             C08040C040   
             C0C0E1C0F1   
             C0F740C040   
             8040004000   
             C000400040   
             0000804080   
             4000C08040   
             C040C0C0E1   
             C0F1C0FFC0   
             C0C0804000   
             4000400040   
             0040000080   
             40804000C0   
             8040C040C0   
             C0E1C0F1C0   
             F7C0E3C0C1   
             C080C00040   
             0040004000   
             0080408040   
             00C08040C0   
             40C0C0E1C0   
             F1C0         
    00000480              __$jetpack1:                     ; static: jetpack1
    00000480 0E11111E12             .DATA.B     H'0E,H'11,H'11,H'1E,H'12,H'14,H'0A,H'1B,H'15,H'1B,H'15,H'1F,H'15,H'15,H'1F,H'00,
             140A1B151B +                       H'0E,H'11,H'11,H'1E,H'12,H'14,H'0A,H'1B,H'1B,H'11,H'1B,H'1F,H'0A,H'0A,H'1F,H'00
             151F15151F   
             000E11111E   
             12140A1B1B   
             111B1F0A0A   
             1F00         
    000004A0              __$jetpack1Alpha:                ; static: jetpack1Alpha
    000004A0 F1E0E0E1E1             .DATA.B     H'F1,H'E0,H'E0,H'E1,H'E1,H'E3,H'F1,H'E0,H'E0,H'E0,H'E0,H'E0,H'E0,H'E0,H'E0,H'FF
             E3F1E0E0E0   
             E0E0E0E0E0   
             FF           
    000004B0              __$jetpack2:                     ; static: jetpack2
    000004B0 001C224141             .DATA.B     H'00,H'1C,H'22,H'41,H'41,H'5D,H'41,H'5D,H'41,H'5D,H'41,H'41,H'7F,H'3E,H'1C,H'00
             5D415D415D   
             41417F3E1C   
             00           
    000004C0              __$jetpack2Alpha:                ; static: jetpack2Alpha
    000004C0 FFE3C18080             .DATA.B     H'FF,H'E3,H'C1,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'C1,H'E3,H'FF
             8080808080   
             808080C1E3   
             FF           
    000004D0              __$jetpack3:                     ; static: jetpack3
    000004D0 001C22417F             .DATA.B     H'00,H'1C,H'22,H'41,H'7F,H'41,H'7F,H'49,H'49,H'41,H'3E,H'1C,H'00,H'00,H'00,H'00,
             417F494941 +                       H'00,H'1C,H'22,H'41,H'7F,H'41,H'7F,H'49,H'49,H'41,H'7F,H'5D,H'49,H'22,H'14,H'08,
             3E1C000000 +                       H'00,H'1C,H'22,H'41,H'7F,H'41,H'7F,H'49,H'49,H'41,H'3E,H'2A,H'14,H'14,H'08,H'08
             00001C2241   
             7F417F4949   
             417F5D4922   
             1408001C22   
             417F417F49   
             49413E2A14   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             140808       
    00000500              __$jetpack3Alpha:                ; static: jetpack3Alpha
    00000500 FFE3C18080             .DATA.B     H'FF,H'E3,H'C1,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'C1,H'E3,H'FF,H'FF,H'FF,H'FF,
             8080808080 +                       H'FF,H'E3,H'C1,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'C1,H'E3,H'F7,
             C1E3FFFFFF +                       H'FF,H'E3,H'C1,H'80,H'80,H'80,H'80,H'80,H'80,H'80,H'C1,H'C1,H'E3,H'E3,H'F7,H'F7
             FFFFE3C180   
             8080808080   
             80808080C1   
             E3F7FFE3C1   
             8080808080   
             8080C1C1E3   
             E3F7F7       
    00000530              __$jetpack4:                     ; static: jetpack4
    00000530 C3A599665A             .DATA.B     H'C3,H'A5,H'99,H'66,H'5A,H'24,H'18,H'18,H'1F,H'18,H'1F,H'18,H'34,H'2C,H'14,H'08
             2418181F18   
             1F18342C14   
             08           
    00000540              __$jetpack4Alpha:                ; static: jetpack4Alpha
    00000540 3C18008181             .DATA.B     H'3C,H'18,H'00,H'81,H'81,H'C3,H'E7,H'E7,H'E0,H'E0,H'E0,H'E7,H'C3,H'C3,H'E3,H'F7
             C3E7E7E0E0   
             E0E7C3C3E3   
             F7           
    00000550              __$gadgetOK:                     ; static: gadgetOK
    00000550 030509D2A4             .DATA.B     H'03,H'05,H'09,H'D2,H'A4,H'88,H'50,H'20
             885020       
    00000558              __$gadgetOKAlpha:                ; static: gadgetOKAlpha
    00000558 FCF8F02103             .DATA.B     H'FC,H'F8,H'F0,H'21,H'03,H'07,H'8F,H'DF
             078FDF       
    00000560              __$money:                        ; static: money
    00000560 7884948484             .DATA.B     H'78,H'84,H'94,H'84,H'84,H'78,H'00,H'00
             780000       
    00000568              __$money2:                       ; static: money2
    00000568 7884B4B484             .DATA.B     H'78,H'84,H'B4,H'B4,H'84,H'78,H'00,H'00
             780000       
    00000570              __$moneyAlpha:                   ; static: moneyAlpha
    00000570 8703030303             .DATA.B     H'87,H'03,H'03,H'03,H'03,H'87,H'FF,H'FF
             87FFFF       
    00000578              __$zap:                          ; static: zap
    00000578 0A0035005E             .DATA.B     H'0A,H'00,H'35,H'00,H'5E,H'80,H'A1,H'80,H'69,H'40,H'A5,H'80,H'61,H'40,H'5E,H'80,
             80A1806940 +                       H'2B,H'00,H'14,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             A58061405E   
             802B001400   
             0000000000   
             0000000000   
             0000         
    00000598              __$zapAlpha:                     ; static: zapAlpha
    00000598 F1FFC0FF80             .DATA.B     H'F1,H'FF,H'C0,H'FF,H'80,H'7F,H'00,H'7F,H'00,H'3F,H'00,H'3F,H'80,H'3F,H'80,H'7F,
             7F007F003F +                       H'C0,H'FF,H'E3,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             003F803F80   
             7FC0FFE3FF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    000005B8              __$laserGauche:                  ; static: laserGauche
    000005B8 7C8EADADAD             .DATA.B     H'7C,H'8E,H'AD,H'AD,H'AD,H'8E,H'7C,H'00
             8E7C00       
    000005C0              __$laserDroite:                  ; static: laserDroite




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005C0 3E71B5B5B5             .DATA.B     H'3E,H'71,H'B5,H'B5,H'B5,H'71,H'3E,H'00
             713E00       
    000005C8              __$laserGaucheAlpha:             ; static: laserGaucheAlpha
    000005C8 8301000000             .DATA.B     H'83,H'01,H'00,H'00,H'00,H'01,H'83,H'FF
             0183FF       
    000005D0              __$laserDroiteAlpha:             ; static: laserDroiteAlpha
    000005D0 C180000000             .DATA.B     H'C1,H'80,H'00,H'00,H'00,H'80,H'C1,H'FF
             80C1FF       
    000005D8              __$missile1:                     ; static: missile1
    000005D8 03003F8070             .DATA.B     H'03,H'00,H'3F,H'80,H'70,H'78,H'D0,H'46,H'93,H'71,H'D0,H'46,H'70,H'78,H'3F,H'80,
             78D0469371 +                       H'03,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             D04670783F   
             8003000000   
             0000000000   
             0000000000   
             0000         
    000005F8              __$missile2:                     ; static: missile2
    000005F8 03003FB070             .DATA.B     H'03,H'00,H'3F,H'B0,H'70,H'4C,H'D0,H'62,H'93,H'71,H'D0,H'62,H'70,H'4C,H'3F,H'B0,
             4CD0629371 +                       H'03,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             D062704C3F   
             B003000000   
             0000000000   
             0000000000   
             0000         
    00000618              __$missile1Alpha:                ; static: missile1Alpha
    00000618 FCFFC07F80             .DATA.B     H'FC,H'FF,H'C0,H'7F,H'80,H'07,H'00,H'01,H'00,H'00,H'00,H'01,H'80,H'07,H'C0,H'7F,
             0700010000 +                       H'FC,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             00018007C0   
             7FFCFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    00000638              __$missile2Alpha:                ; static: missile2Alpha
    00000638 FCFFC04F80             .DATA.B     H'FC,H'FF,H'C0,H'4F,H'80,H'03,H'00,H'01,H'00,H'00,H'00,H'01,H'80,H'03,H'C0,H'4F,
             0300010000 +                       H'FC,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             00018003C0   
             4FFCFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    00000658              __$warning1:                     ; static: warning1
    00000658 1818181818             .DATA.B     H'18,H'18,H'18,H'18,H'18,H'00,H'18,H'18
             001818       
    00000660              __$warning2:                     ; static: warning2
    00000660 3C24242424             .DATA.B     H'3C,H'24,H'24,H'24,H'24,H'24,H'3C,H'24,H'24,H'3C
             243C24243C   
    0000066A              __$box:                          ; static: box
    0000066A 3FF04008BC             .DATA.B     H'3F,H'F0,H'40,H'08,H'BC,H'E4,H'E6,H'04,H'CA,H'74,H'C2,H'DC,H'E6,H'8C,H'BC,H'DC,
             E4E604CA74 +                       H'87,H'74,H'AD,H'84,H'A8,H'B4,H'8D,H'A4,H'47,H'08,H'3F,H'F0,H'00,H'00,H'00,H'00
             C2DCE68CBC   
             DC8774AD84   
             A8B48DA447   
             083FF00000   
             0000         
    0000068A              __$jetonSP:                      ; static: jetonSP
    0000068A 070018C030             .DATA.B     H'07,H'00,H'18,H'C0,H'30,H'60,H'78,H'F0,H'5D,H'D0,H'8F,H'88,H'87,H'08,H'8F,H'88,
             6078F05DD0 +                       H'5D,H'D0,H'78,H'F0,H'30,H'60,H'18,H'C0,H'07,H'00,H'00,H'00,H'00,H'00,H'00,H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             8F8887088F   
             885DD078F0   
             306018C007   
             0000000000   
             0000         
    000006AA              __$jetonSPAlpha:                 ; static: jetonSPAlpha
    000006AA F8FFE03FC0             .DATA.B     H'F8,H'FF,H'E0,H'3F,H'C0,H'1F,H'80,H'0F,H'80,H'0F,H'00,H'07,H'00,H'07,H'00,H'07,
             1F800F800F +                       H'80,H'0F,H'80,H'0F,H'C0,H'1F,H'E0,H'3F,H'F8,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0007000700   
             07800F800F   
             C01FE03FF8   
             FFFFFFFFFF   
             FFFF         
    000006CA              __$fond:                         ; static: fond
    000006CA 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'F8,H'00,H'FF,H'FF,H'FC,H'00,H'7F,H'FF,H'FC,H'00,H'7F,H'FF,H'FF,H'80,H'0F,H'FF,
             0000000000 +                       H'04,H'01,H'00,H'00,H'02,H'00,H'80,H'00,H'02,H'00,H'80,H'00,H'00,H'40,H'10,H'00,
             0000000000 +                       H'02,H'02,H'00,H'00,H'01,H'01,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'20,H'20,H'00,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'FE,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'1F,H'C0,H'00,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,
             00000000F8 +                       H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,
             00FFFFFC00 +                       H'01,H'04,H'00,H'00
             7FFFFC007F   
             FFFF800FFF   
             0401000002   
             0080000200   
             8000004010   
             0002020000   
             0101000001   
             0100000020   
             2000010400   
             0000FE0000   
             0082000000   
             1FC0000104   
             0000000000   
             0000820000   
             0000000001   
             0400000000   
             0000008200   
             0000000000   
             0104000000   
             0000000082   
             0000000000   
             0001040000   
             0000000000   
             8200000000   
             0000010400   
             0000000000   
             0082000000   
             0000000104   
             0000         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000079E 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,
             8200000000 +                       H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'01,
             0000010400 +                       H'FF,H'FF,H'FE,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'02,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'04,
             0082000000 +                       H'FF,H'FF,H'FC,H'80,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'09,
             0000000104 +                       H'FF,H'FF,H'FE,H'40,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'13,
             0001FFFFFE +                       H'FF,H'FF,H'FF,H'20,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'27,
             0000820000 +                       H'FF,H'FF,H'FF,H'90,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'4F,
             0000000001 +                       H'FF,H'FF,H'FF,H'C8,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'07,H'FF,H'9F,
             0400020000 +                       H'FF,H'FF,H'FF,H'E7,H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'01,H'04,H'00,H'3F,
             0100008200 +                       H'C0,H'00,H'0F,H'F0,H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'07,H'FF,H'FF,
             0000000000 +                       H'80,H'00,H'07,H'FF,H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'07,H'FF,H'FF,
             01040004FF +                       H'00,H'00,H'03,H'FF,H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'07,H'FF,H'FE,
             FFFC800082 +                       H'00,H'00,H'01,H'FF
             0000000000   
             0001040009   
             FFFFFE4000   
             8200000000   
             0000010400   
             13FFFFFF20   
             0082000000   
             0000000104   
             0027FFFFFF   
             9000820000   
             0000000001   
             04004FFFFF   
             FFC8008200   
             0000000000   
             FF07FF9FFF   
             FFFFE7FF83   
             FFFFFFFFFF   
             FF0104003F   
             C0000FF000   
             8200000000   
             0000FF07FF   
             FF800007FF   
             FF83FFFFFF   
             FFFFFFFF07   
             FFFF000003   
             FFFF83FFFF   
             FFFFFFFFFF   
             07FFFE0000   
             01FF         
    00000872 FF83FFFFFF             .DATA.B     H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'07,H'FF,H'FC,H'00,H'00,H'00,H'FF,
             FFFFFFFF07 +                       H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'07,H'FF,H'F8,H'00,H'00,H'00,H'7F,
             FFFC000000 +                       H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'07,H'FF,H'F0,H'00,H'00,H'00,H'3F,
             FFFF83FFFF +                       H'FF,H'83,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             07FFF80000 +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             007FFF83FF +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             FF07FFF000 +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             00003FFF83 +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             FF01040000 +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'82,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,
             8200000000 +                       H'00,H'82,H'00,H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000010400   
             0000000000   
             0082000000   
             0000000104   
             0000000000   
             0000820000   
             0000000001   
             0400000000   
             0000008200   
             0000000000   
             0104000000   
             0000000082   
             0000000000   
             0001040000   
             0000000000   
             8200000000   
             0000010400   
             0000000000   
             0082000000   
             0000000104   
             0000000000   
             0000820000   
             0000000001   
             0400000000   
             0000008200   
             0000000000   
             0104000000   
             0000000082   
             0000         
    00000946 0000000001             .DATA.B     H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,
             0400000000 +                       H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,
             0000008200 +                       H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'82,H'00,H'00,
             0104000000 +                       H'00,H'00,H'00,H'00,H'01,H'04,H'00,H'00,H'00,H'FE,H'00,H'00,H'00,H'82,H'00,H'00,
             0000000082 +                       H'00,H'1F,H'C0,H'00,H'02,H'02,H'00,H'00,H'01,H'01,H'00,H'00,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'20,H'20,H'00,H'04,H'01,H'00,H'00,H'02,H'00,H'80,H'00,H'02,H'00,H'80,H'00,
             0001040000 +                       H'00,H'40,H'10,H'00,H'F8,H'00,H'FF,H'FF,H'FC,H'00,H'7F,H'FF,H'FC,H'00,H'7F,H'FF,
             0000000000 +                       H'FF,H'80,H'0F,H'FF,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             8200000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010400 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0082000000   
             0000000104   
             000000FE00   
             0000820000   
             001FC00002   
             0200000101   
             0000010100   
             0000202000   
             0401000002   
             0080000200   
             8000004010   
             00F800FFFF   
             FC007FFFFC   
             007FFFFF80   
             0FFF000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
    000009FA              __$sol:                          ; static: sol
    000009FA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,
             FFFFFFFFFF +                       H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,H'C0,H'20,
             FFFFFFFFFF +                       H'60,H'10,H'60,H'10,H'60,H'10,H'60,H'10,H'60,H'10,H'60,H'10,H'60,H'10,H'60,H'10,
             FFFFFFFFFF +                       H'30,H'08,H'30,H'08,H'30,H'08,H'30,H'08,H'30,H'08,H'30,H'08,H'30,H'08,H'30,H'08,
             FFFFC020C0 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             20C020C020 +                       H'18,H'08,H'18,H'08,H'18,H'08,H'18,H'08,H'18,H'08,H'18,H'08,H'18,H'08,H'18,H'08,
             C020C020C0 +                       H'0C,H'04,H'0C,H'04,H'0C,H'04,H'0C,H'04,H'0C,H'04,H'0C,H'04,H'0C,H'04,H'0C,H'04,
             20C020C020 +                       H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,
             C020C020C0 +                       H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,H'06,H'02,
             20C020C020 +                       H'03,H'01,H'03,H'01,H'03,H'01,H'03,H'01,H'03,H'01,H'03,H'01,H'03,H'01,H'03,H'01
             C020C02060   
             1060106010   
             6010601060   
             1060106010   
             3008300830   
             0830083008   
             3008300830   
             08FFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF180818   
             0818081808   
             1808180818   
             0818080C04   
             0C040C040C   
             040C040C04   
             0C040C0406   
             0206020602   
             0602060206   
             0206020602   
             0602060206   
             0206020602   
             0602060206   
             0203010301   
             0301030103   
             0103010301   
             0301         
    00000ABA              __$jetpackJoyride:               ; static: jetpackJoyride
    00000ABA FE7DFFDFFF             .DATA.B     H'FE,H'7D,H'FF,H'DF,H'FF,H'7E,H'07,H'E0,H'FE,H'0F,H'FE,H'7F,H'FC,H'7F,H'C1,H'F8,
             7E07E0FE0F +                       H'FC,H'FF,H'FF,H'FF,H'FF,H'FF,H'0F,H'F1,H'FF,H'1F,H'FF,H'3F,H'F9,H'FF,H'FC,H'0F,
             FE7FFC7FC1 +                       H'F9,H'FF,H'FF,H'FF,H'FF,H'FF,H'9F,H'FB,H'FF,H'BF,H'FF,H'BF,H'F3,H'FF,H'FF,H'E3,
             F8FCFFFFFF +                       H'FB,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'BF,H'E7,H'FF,H'FF,H'F9,
             FFFF0FF1FF +                       H'FA,H'1E,H'01,H'80,H'07,H'83,H'FC,H'3F,H'83,H'E1,H'8F,H'BF,H'EF,H'FF,H'FF,H'FC,
             1FFF3FF9FF +                       H'FA,H'1C,H'01,H'80,H'07,H'01,H'F8,H'1F,H'01,H'E1,H'87,H'BF,H'CF,H'FF,H'FF,H'FE,
             FC0FF9FFFF +                       H'FA,H'18,H'01,H'80,H'06,H'00,H'F0,H'0E,H'00,H'E1,H'87,H'BF,H'DF,H'FF,H'FF,H'FE,
             FFFFFF9FFB +                       H'FA,H'18,H'01,H'80,H'06,H'00,H'60,H'06,H'00,H'E1,H'87,H'BF,H'DF,H'FF,H'FF,H'FE,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFBFFFBFF3 +                       H'FA,H'18,H'7F,H'F8,H'7E,H'18,H'61,H'86,H'1F,H'E1,H'87,H'BF,H'9F,H'FF,H'FF,H'FE,
             FFFFE3FBFF +                       H'FA,H'18,H'7F,H'88,H'7A,H'18,H'61,H'86,H'18,H'21,H'8F,H'BF,H'BF,H'FF,H'FF,H'FE,
             FFFFFFFFFF +                       H'FA,H'18,H'07,H'88,H'7A,H'00,H'61,H'86,H'18,H'20,H'1F,H'3F,H'3F,H'E0,H'7F,H'FE,
             FFFFFFFFBF +                       H'C2,H'18,H'07,H'88,H'7A,H'00,H'E1,H'86,H'18,H'20,H'1E,H'7F,H'7F,H'80,H'0F,H'FE,
             E7FFFFF9FA +                       H'9E,H'18,H'07,H'88,H'7A,H'01,H'E0,H'06,H'18,H'20,H'1E,H'7C,H'7F,H'00,H'01,H'FC,
             1E01800783 +                       H'3E,H'18,H'07,H'88
             FC3F83E18F   
             BFEFFFFFFC   
             FA1C018007   
             01F81F01E1   
             87BFCFFFFF   
             FEFA180180   
             0600F00E00   
             E187BFDFFF   
             FFFEFA1801   
             8006006006   
             00E187BFDF   
             FFFFFEFA18   
             7FF87E1861   
             861FE187BF   
             9FFFFFFEFA   
             187F887A18   
             618618218F   
             BFBFFFFFFE   
             FA1807887A   
             0061861820   
             1F3F3FE07F   
             FEC2180788   
             7A00E18618   
             201E7F7F80   
             0FFE9E1807   
             887A01E006   
             18201E7C7F   
             0001FC3E18   
             0788         
    00000B8E 7A03E00618             .DATA.B     H'7A,H'03,H'E0,H'06,H'18,H'20,H'1F,H'31,H'FF,H'00,H'00,H'7D,H'7E,H'18,H'7F,H'88,
             201F31FF00 +                       H'7A,H'1F,H'A0,H'06,H'18,H'21,H'8F,H'A7,H'3F,H'07,H'80,H'05,H'FE,H'18,H'7F,H'E8,
             007D7E187F +                       H'7A,H'1E,H'20,H'06,H'1F,H'E1,H'87,H'8D,H'BF,H'80,H'E0,H'05,H'80,H'18,H'01,H'E8,
             887A1FA006 +                       H'7A,H'1E,H'21,H'86,H'00,H'E1,H'87,H'B7,H'3F,H'0F,H'30,H'F5,H'80,H'18,H'01,H'E8,
             18218FA73F +                       H'7A,H'1E,H'21,H'86,H'00,H'E1,H'87,H'FC,H'3E,H'17,H'91,H'05,H'C0,H'3C,H'01,H'E8,
             078005FE18 +                       H'7A,H'1E,H'21,H'87,H'01,H'E1,H'87,H'F0,H'FE,H'13,H'40,H'7D,H'60,H'76,H'01,H'C8,
             7FE87A1E20 +                       H'72,H'1C,H'21,H'87,H'83,H'E1,H'8F,H'01,H'FE,H'13,H'40,H'E9,H'3F,H'E3,H'FF,H'8F,
             061FE1878D +                       H'E3,H'F8,H'3F,H'FE,H'FF,H'BF,H'FE,H'01,H'1E,H'15,H'40,H'6B,H'80,H'00,H'00,H'00,
             BF80E00580 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'0A,H'01,H'0E,H'17,H'44,H'AB,H'FC,H'FD,H'FC,H'3C,
             1801E87A1E +                       H'3E,H'7F,H'0F,H'FF,H'C1,H'FF,H'8F,H'03,H'6E,H'0F,H'82,H'EB,H'F9,H'FF,H'FE,H'7E,
             218600E187 +                       H'7F,H'FF,H'9F,H'FF,H'E3,H'FF,H'CD,H'87,H'26,H'00,H'02,H'7B,H'FB,H'FF,H'FF,H'FF,
             B73F0F30F5 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'ED,H'C7,H'20,H'00,H'0C,H'0B,H'FB,H'FF,H'FF,H'FF,
             801801E87A +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'ED,H'7F,H'84,H'03,H'00,H'0B,H'FA,H'1E,H'07,H'87,
             1E218600E1 +                       H'87,H'81,H'E1,H'80
             87FC3E1791   
             05C03C01E8   
             7A1E218701   
             E187F0FE13   
             407D607601   
             C8721C2187   
             83E18F01FE   
             1340E93FE3   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FF8FE3F83F   
             FEFFBFFE01   
             1E15406B80   
             0000000000   
             000000000A   
             010E1744AB   
             FCFDFC3C3E   
             7F0FFFC1FF   
             8F036E0F82   
             EBF9FFFE7E   
             7FFF9FFFE3   
             FFCD872600   
             027BFBFFFF   
             FFFFFFFFFF   
             FFFFEDC720   
             000C0BFBFF   
             FFFFFFFFFF   
             FFFFFFED7F   
             8403000BFA   
             1E07878781   
             E180         
    00000C62 7E01ED5FE4             .DATA.B     H'7E,H'01,H'ED,H'5F,H'E4,H'02,H'FF,H'0B,H'FA,H'1C,H'03,H'87,H'87,H'00,H'E1,H'80,
             02FF0BFA1C +                       H'3C,H'01,H'E5,H'5F,H'FC,H'02,H'00,H'8B,H'FA,H'18,H'01,H'87,H'86,H'00,H'61,H'80,
             03878700E1 +                       H'18,H'01,H'E3,H'5F,H'F6,H'03,H'FF,H'8B,H'FA,H'18,H'01,H'83,H'06,H'00,H'61,H'80,
             803C01E55F +                       H'18,H'01,H'C9,H'DF,H'EE,H'02,H'00,H'93,H'FA,H'18,H'61,H'80,H'06,H'18,H'61,H'86,
             FC02008BFA +                       H'18,H'7F,H'9C,H'7F,H'DF,H'81,H'FF,H'27,H'FA,H'18,H'61,H'C0,H'0E,H'18,H'61,H'86,
             1801878600 +                       H'18,H'7F,H'BF,H'3F,H'BF,H'E0,H'00,H'4F,H'FA,H'18,H'61,H'E0,H'1A,H'00,H'61,H'86,
             61801801E3 +                       H'18,H'07,H'BF,H'BF,H'7F,H'F8,H'00,H'DF,H'82,H'18,H'61,H'F0,H'3A,H'00,H'61,H'86,
             5FF603FF8B +                       H'18,H'07,H'BF,H'BF,H'CF,H'FF,H'FF,H'DF,H'3E,H'18,H'61,H'F8,H'7A,H'01,H'E1,H'86,
             FA18018306 +                       H'18,H'07,H'BF,H'3E,H'47,H'FA,H'1F,H'DF,H'7E,H'18,H'61,H'E8,H'7A,H'00,H'E1,H'86,
             0061801801 +                       H'18,H'07,H'BF,H'7E,H'47,H'F9,H'FF,H'DF,H'FE,H'18,H'61,H'E8,H'7A,H'00,H'61,H'86,
             C9DFEE0200 +                       H'18,H'7F,H'8F,H'7F,H'47,H'F9,H'5F,H'DF,H'FE,H'18,H'61,H'E8,H'7A,H'00,H'61,H'86,
             93FA186180 +                       H'18,H'7F,H'EE,H'7F,H'47,H'FE,H'9E,H'5F,H'80,H'18,H'01,H'E8,H'7A,H'18,H'61,H'80,
             0618618618 +                       H'18,H'01,H'EE,H'FF,H'43,H'F8,H'9E,H'4F,H'80,H'18,H'01,H'E8,H'7A,H'18,H'61,H'80,
             7F9C7FDF81 +                       H'18,H'01,H'EE,H'FF
             FF27FA1861   
             C00E186186   
             187FBF3FBF   
             E0004FFA18   
             61E01A0061   
             861807BFBF   
             7FF800DF82   
             1861F03A00   
             61861807BF   
             BFCFFFFFDF   
             3E1861F87A   
             01E1861807   
             BF3E47FA1F   
             DF7E1861E8   
             7A00E18618   
             07BF7E47F9   
             FFDFFE1861   
             E87A006186   
             187F8F7F47   
             F95FDFFE18   
             61E87A0061   
             86187FEE7F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             47FE9E5F80   
             1801E87A18   
             61801801EE   
             FF43F89E4F   
             801801E87A   
             1861801801   
             EEFF         
    00000D36 43F99E6FC0             .DATA.B     H'43,H'F9,H'9E,H'6F,H'C0,H'3C,H'03,H'C8,H'7A,H'18,H'61,H'80,H'3C,H'01,H'EE,H'FF,
             3C03C87A18 +                       H'44,H'F9,H'1C,H'27,H'60,H'76,H'07,H'88,H'72,H'18,H'61,H'80,H'76,H'01,H'CE,H'FF,
             61803C01EE +                       H'46,H'FB,H'1C,H'F7,H'3F,H'E3,H'FF,H'0F,H'E3,H'FF,H'FF,H'FF,H'E3,H'FF,H'9C,H'FF,
             FF44F91C27 +                       H'42,H'FE,H'FE,H'97,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'08,H'00,H'3D,H'FF,
             6076078872 +                       H'D3,H'F9,H'FE,H'F7,H'FF,H'FF,H'FF,H'FE,H'7D,H'F7,H'CF,H'FF,H'FF,H'FF,H'FD,H'FF,
             1861807601 +                       H'D3,H'FF,H'FA,H'17,H'FF,H'FF,H'FF,H'FE,H'C7,H'1C,H'6F,H'FF,H'FF,H'FF,H'FD,H'7F,
             CEFF46FB1C +                       H'F7,H'FF,H'E2,H'D7,H'FF,H'FF,H'FF,H'FE,H'82,H'08,H'2F,H'FF,H'FF,H'FF,H'FD,H'3F,
             F73FE3FF0F +                       H'DF,H'FF,H'F3,H'37,H'FF,H'FF,H'FF,H'FE,H'92,H'49,H'2F,H'FF,H'FF,H'FF,H'FD,H'2F,
             E3FFFFFFE3 +                       H'C7,H'FF,H'E1,H'E7,H'FF,H'FF,H'FF,H'FE,H'82,H'48,H'2F,H'FF,H'FF,H'FF,H'FD,H'28,
             FF9CFF42FE +                       H'47,H'AE,H'E4,H'0F,H'FF,H'FF,H'FF,H'FE,H'86,H'08,H'6F,H'FF,H'FF,H'FF,H'FC,H'EB,
             FE97000000 +                       H'50,H'2A,H'CF,H'FF,H'FF,H'FF,H'FF,H'FE,H'9E,H'08,H'2F,H'FF,H'FF,H'FF,H'FC,H'7D,
             0000000000 +                       H'DF,H'AA,H'CF,H'FF,H'FF,H'FF,H'FF,H'FE,H'9E,H'49,H'2F,H'FF,H'FF,H'FF,H'FC,H'47,
             08003DFFD3 +                       H'DF,H'BF,H'CF,H'FF,H'FF,H'FF,H'FF,H'FE,H'9E,H'49,H'2F,H'FF,H'FF,H'FF,H'FD,H'54,
             F9FEF7FFFF +                       H'9F,H'85,H'4F,H'FF
             FFFE7DF7CF   
             FFFFFFFDFF   
             D3FFFA17FF   
             FFFFFEC71C   
             6FFFFFFFFD   
             7FF7FFE2D7   
             FFFFFFFE82   
             082FFFFFFF   
             FD3FDFFFF3   
             37FFFFFFFE   
             92492FFFFF   
             FFFD2FC7FF   
             E1E7FFFFFF   
             FE82482FFF   
             FFFFFD2847   
             AEE40FFFFF   
             FFFE86086F   
             FFFFFFFCEB   
             502ACFFFFF   
             FFFFFE9E08   
             2FFFFFFFFC   
             7DDFAACFFF   
             FFFFFFFE9E   
             492FFFFFFF   
             FC47DFBFCF   
             FFFFFFFFFE   
             9E492FFFFF   
             FFFD549F85   
             4FFF         
    00000E0A FFC00000FF             .DATA.B     H'FF,H'C0,H'00,H'00,H'FF,H'FF,H'E0,H'00,H'00,H'07,H'FD,H'10,H'BF,H'85,H'0F,H'FF,
             FFE0000007 +                       H'FF,H'9F,H'7D,H'F6,H'FF,H'FF,H'F6,H'DF,H'7D,H'F3,H'FD,H'14,H'3F,H'A0,H'0F,H'FF,
             FD10BF850F +                       H'FF,H'A1,H'C7,H'19,H'31,H'9F,H'09,H'20,H'82,H'0B,H'FD,H'14,H'3F,H'A8,H'2F,H'FF,
             FFFF9F7DF6 +                       H'FF,H'A0,H'82,H'09,H'20,H'9E,H'09,H'20,H'82,H'0B,H'FC,H'44,H'3F,H'A0,H'2F,H'FF,
             FFFFF6DF7D +                       H'FF,H'A4,H'92,H'49,H'24,H'9E,H'78,H'24,H'93,H'CB,H'FC,H'05,H'3F,H'AA,H'4F,H'FF,
             F3FD143FA0 +                       H'FF,H'A4,H'82,H'48,H'64,H'9E,H'1C,H'64,H'93,H'CB,H'FC,H'05,H'3F,H'8A,H'0F,H'FF,
             0FFFFFA1C7 +                       H'FF,H'A4,H'86,H'08,H'60,H'9E,H'1C,H'64,H'93,H'CB,H'FC,H'85,H'3F,H'8A,H'4F,H'FF,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             19319F0920 +                       H'FF,H'A4,H'82,H'09,H'20,H'9E,H'78,H'24,H'93,H'CB,H'FC,H'91,H'3F,H'88,H'0F,H'FF,
             820BFD143F +                       H'FF,H'A0,H'92,H'49,H'24,H'82,H'09,H'20,H'83,H'CB,H'FC,H'20,H'3F,H'84,H'0F,H'FF,
             A82FFFFFA0 +                       H'FF,H'A1,H'92,H'49,H'24,H'C3,H'09,H'20,H'83,H'CB,H'FC,H'20,H'3F,H'89,H'0F,H'FF,
             8209209E09 +                       H'FF,H'9F,H'6D,H'B6,H'DB,H'7D,H'F6,H'DF,H'7D,H'B3,H'FC,H'00,H'3F,H'88,H'AF,H'FF
             20820BFC44   
             3FA02FFFFF   
             A49249249E   
             782493CBFC   
             053FAA4FFF   
             FFA4824864   
             9E1C6493CB   
             FC053F8A0F   
             FFFFA48608   
             609E1C6493   
             CBFC853F8A   
             4FFFFFA482   
             09209E7824   
             93CBFC913F   
             880FFFFFA0   
             9249248209   
             2083CBFC20   
             3F840FFFFF   
             A1924924C3   
             092083CBFC   
             203F890FFF   
             FF9F6DB6DB   
             7DF6DF7DB3   
             FC003F88AF   
             FF           
    00000EBA              __$menu:                         ; static: menu
    00000EBA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'E3,H'E3,H'3E,H'3F,H'31,H'93,H'1F,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'C1,H'C1,H'3C,H'13,H'20,H'92,H'1F,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'C9,H'C9,H'3C,H'91,H'20,H'92,H'7F,H'FF,H'FF,H'FF,H'FF,
             3FFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'C9,H'C1,H'3C,H'90,H'24,H'92,H'3F,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'C1,H'C3,H'3C,H'10,H'24,H'92,H'3F,H'FF,H'FF,H'FF,H'FF,
             FFF3E3E33E +                       H'FF,H'FF,H'FF,H'FF,H'F3,H'C1,H'CF,H'3C,H'12,H'20,H'92,H'7F,H'FF,H'FF,H'FF,H'FF,
             3F31931FFF +                       H'00,H'00,H'00,H'03,H'F0,H'49,H'CF,H'04,H'93,H'20,H'82,H'1F,H'C0,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'01,H'F8,H'49,H'CF,H'84,H'93,H'F0,H'C7,H'1F,H'80,H'00,H'00,H'00,
             FFFFF3C1C1 +                       H'00,H'00,H'00,H'00,H'FF,H'FF,H'FF,H'FF,H'F3,H'FC,H'7F,H'FF,H'00,H'00,H'00,H'00,
             3C1320921F +                       H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFF3C9 +                       H'00,H'00,H'00,H'00
             C93C912092   
             7FFFFFFFFF   
             FFFFFFFFF3   
             C9C13C9024   
             923FFFFFFF   
             FFFFFFFFFF   
             F3C1C33C10   
             24923FFFFF   
             FFFFFFFFFF   
             FFF3C1CF3C   
             1220927FFF   
             FFFFFF0000   
             0003F049CF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             049320821F   
             C000000000   
             000001F849   
             CF8493F0C7   
             1F80000000   
             00000000FF   
             FFFFFFF3FC   
             7FFF000000   
             0000000000   
             7FFFFFFFFF   
             FFFFFE0000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00000F8E 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'F8,
             0000000000 +                       H'01,H'FF,H'FF,H'E0,H'07,H'FF,H'FF,H'80,H'1F,H'FF,H'FE,H'00,H'00,H'40,H'00,H'08,
             0000000000 +                       H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,H'10,H'00,H'02,H'00,H'00,H'40,H'00,H'08,
             0000000000 +                       H'01,H'0C,H'0C,H'20,H'04,H'38,H'70,H'80,H'10,H'00,H'02,H'00,H'00,H'47,H'87,H'88,
             0000000000 +                       H'01,H'12,H'12,H'20,H'04,H'44,H'88,H'80,H'10,H'00,H'02,H'00,H'00,H'4C,H'CC,H'C8,
             0000000000 +                       H'01,H'21,H'21,H'20,H'04,H'48,H'48,H'80,H'10,H'00,H'02,H'00,H'00,H'50,H'78,H'28,
             0000000000 +                       H'01,H'21,H'21,H'20,H'04,H'48,H'48,H'80,H'10,H'10,H'02,H'00,H'00,H'50,H'00,H'28,
             0000000000 +                       H'01,H'21,H'21,H'20,H'04,H'44,H'88,H'80,H'13,H'FF,H'F2,H'00,H'00,H'4F,H'03,H'C8,
             0000000000 +                       H'01,H'21,H'E1,H'20,H'04,H'23,H'10,H'80,H'10,H'10,H'02,H'00,H'00,H'41,H'02,H'08,
             007FFFF801 +                       H'01,H'21,H'21,H'20,H'04,H'18,H'60,H'80,H'10,H'00,H'02,H'00,H'00,H'41,H'02,H'08,
             FFFFE007FF +                       H'01,H'21,H'21,H'20
             FF801FFFFE   
             0000400008   
             0100002004   
             0000801000   
             0200004000   
             08010C0C20   
             0438708010   
             0002000047   
             8788011212   
             2004448880   
             1000020000   
             4CCCC80121   
             2120044848   
             8010000200   
             0050782801   
             2121200448   
             4880101002   
             0000500028   
             0121212004   
             44888013FF   
             F200004F03   
             C80121E120   
             0423108010   
             1002000041   
             0208012121   
             2004186080   
             1000020000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             4102080121   
             2120         
    00001062 0404808010             .DATA.B     H'04,H'04,H'80,H'80,H'10,H'00,H'42,H'00,H'00,H'41,H'02,H'08,H'01,H'21,H'21,H'20,
             0042000041 +                       H'04,H'04,H'80,H'80,H'13,H'FF,H'F2,H'00,H'00,H'41,H'02,H'08,H'01,H'21,H'21,H'20,
             0208012121 +                       H'04,H'04,H'80,H'80,H'10,H'00,H'42,H'00,H'00,H'41,H'02,H'08,H'01,H'21,H'21,H'20,
             2004048080 +                       H'04,H'04,H'80,H'80,H'10,H'00,H'02,H'00,H'00,H'41,H'02,H'08,H'01,H'3F,H'3F,H'20,
             13FFF20000 +                       H'04,H'04,H'80,H'80,H'11,H'00,H'02,H'00,H'00,H'41,H'02,H'08,H'01,H'1E,H'1E,H'20,
             4102080121 +                       H'04,H'04,H'80,H'80,H'13,H'FF,H'F2,H'00,H'00,H'41,H'86,H'08,H'01,H'0C,H'0C,H'20,
             2120040480 +                       H'04,H'04,H'80,H'80,H'11,H'00,H'02,H'00,H'00,H'40,H'FC,H'08,H'01,H'0C,H'0C,H'20,
             8010004200 +                       H'04,H'04,H'80,H'80,H'10,H'00,H'02,H'00,H'00,H'40,H'00,H'08,H'01,H'0C,H'0C,H'20,
             0041020801 +                       H'04,H'03,H'00,H'80,H'10,H'00,H'02,H'00,H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,
             2121200404 +                       H'04,H'00,H'00,H'80,H'10,H'00,H'02,H'00,H'00,H'7F,H'FF,H'F8,H'01,H'FF,H'FF,H'E0,
             8080100002 +                       H'07,H'FF,H'FF,H'80,H'1F,H'FF,H'FE,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000410208 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             013F3F2004 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0480801100 +                       H'00,H'00,H'00,H'00
             0200004102   
             08011E1E20   
             0404808013   
             FFF2000041   
             8608010C0C   
             2004048080   
             1100020000   
             40FC08010C   
             0C20040480   
             8010000200   
             0040000801   
             0C0C200403   
             0080100002   
             0000400008   
             0100002004   
             0000801000   
             0200007FFF   
             F801FFFFE0   
             07FFFF801F   
             FFFE000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001136 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'F8,H'01,H'FF,H'FF,H'E0,H'07,H'FF,H'FF,H'80,
             0000000000 +                       H'1F,H'FF,H'FE,H'00,H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,
             0000000000 +                       H'10,H'00,H'02,H'00,H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,
             007FFFF801 +                       H'17,H'54,H'AA,H'00,H'00,H'40,H'04,H'08,H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,
             FFFFE007FF +                       H'15,H'56,H'AA,H'00,H'00,H'40,H'04,H'08,H'01,H'00,H'00,H'20,H'04,H'FF,H'FC,H'80,
             FF801FFFFE +                       H'17,H'55,H'AA,H'00,H'00,H'41,H'C4,H'08,H'01,H'00,H'18,H'20,H'04,H'9F,H'E4,H'80,
             0000400008 +                       H'16,H'54,H'82,H'00,H'00,H'43,H'FF,H'08,H'01,H'00,H'18,H'20,H'04,H'5F,H'E8,H'80,
             0100002004 +                       H'15,H'74,H'AA,H'00,H'00,H'42,H'01,H'08,H'01,H'00,H'18,H'20,H'04,H'3F,H'F0,H'80,
             0000801000 +                       H'10,H'00,H'02,H'00,H'00,H'42,H'31,H'08,H'01,H'06,H'18,H'20,H'04,H'0F,H'C0,H'80,
             0200004000 +                       H'10,H'00,H'02,H'00,H'00,H'42,H'49,H'08,H'01,H'06,H'18,H'20,H'04,H'07,H'80,H'80,
             0801000020 +                       H'10,H'03,H'02,H'00,H'00,H'42,H'85,H'08,H'01,H'06,H'1B,H'20,H'04,H'03,H'00,H'80,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   97


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0400008017 +                       H'10,H'03,H'82,H'00,H'00,H'42,H'85,H'08,H'01,H'06,H'1B,H'20,H'04,H'03,H'00,H'80,
             54AA000040 +                       H'11,H'FF,H'C2,H'00
             0408010000   
             2004000080   
             1556AA0000   
             4004080100   
             002004FFFC   
             801755AA00   
             0041C40801   
             001820049F   
             E480165482   
             000043FF08   
             0100182004   
             5FE8801574   
             AA00004201   
             0801001820   
             043FF08010   
             0002000042   
             3108010618   
             20040FC080   
             1000020000   
             4249080106   
             1820040780   
             8010030200   
             0042850801   
             061B200403   
             0080100382   
             0000428508   
             01061B2004   
             03008011FF   
             C200         
    0000120A 0042490801             .DATA.B     H'00,H'42,H'49,H'08,H'01,H'36,H'1B,H'20,H'04,H'03,H'00,H'80,H'11,H'FF,H'E2,H'00,
             361B200403 +                       H'00,H'42,H'31,H'08,H'01,H'36,H'1B,H'20,H'04,H'03,H'00,H'80,H'11,H'FF,H'E2,H'00,
             008011FFE2 +                       H'00,H'42,H'01,H'08,H'01,H'36,H'DB,H'20,H'04,H'0F,H'C0,H'80,H'11,H'FF,H'C2,H'00,
             0000423108 +                       H'00,H'43,H'FF,H'08,H'01,H'3F,H'FF,H'20,H'04,H'38,H'70,H'80,H'10,H'03,H'82,H'00,
             01361B2004 +                       H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,H'04,H'3F,H'F0,H'80,H'10,H'03,H'02,H'00,
             03008011FF +                       H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,H'10,H'00,H'02,H'00,
             E200004201 +                       H'00,H'40,H'00,H'08,H'01,H'00,H'00,H'20,H'04,H'00,H'00,H'80,H'10,H'00,H'02,H'00,
             080136DB20 +                       H'00,H'7F,H'FF,H'F8,H'01,H'FF,H'FF,H'E0,H'07,H'FF,H'FF,H'80,H'1F,H'FF,H'FE,H'00,
             040FC08011 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFC2000043 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FF08013FFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             2004387080   
             1003820000   
             4000080100   
             0020043FF0   
             8010030200   
             0040000801   
             0000200400   
             0080100002   
             0000400008   
             0100002004   
             0000801000   
             0200007FFF   
             F801FFFFE0   
             07FFFF801F   
             FFFE000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   98


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00           
    000012BA              __$menuMort:                     ; static: menuMort
    000012BA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,
             FFFFFFFFFF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'3F,H'FC,H'03,H'FF,H'C0,H'00,H'07,
             FFFFFFFFFF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'40,H'02,H'04,H'00,H'20,H'00,H'07,
             FFFFFFFFFF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             FFFFFFFFFF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             FFFFFFFFFF +                       H'E0,H'03,H'8E,H'38,H'E3,H'C0,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             FFFFFFE000 +                       H'E0,H'07,H'DF,H'7D,H'F7,H'C0,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             0000000000 +                       H'E0,H'06,H'18,H'7D,H'B6,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             0000000000 +                       H'E0,H'07,H'98,H'6D,H'F7,H'98,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             00000007E0 +                       H'E0,H'03,H'D8,H'6D,H'E7,H'98,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,
             0000000000 +                       H'E0,H'00,H'D8,H'7D
             0000003FFC   
             03FFC00007   
             E000000000   
             0000000040   
             0204002000   
             07E0000000   
             0000000000   
             8001080010   
             0007E00000   
             0000000000   
             0080010800   
             100007E003   
             8E38E3C000   
             0000800108   
             00100007E0   
             07DF7DF7C0   
             0000008001   
             0800100007   
             E006187DB6   
             0000000080   
             0108001000   
             07E007986D   
             F798000000   
             8001080010   
             0007E003D8   
             6DE7980000   
             0080010800   
             100007E000   
             D87D         
    0000138E F600000000             .DATA.B     H'F6,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,H'E0,H'07,H'DF,H'7D,
             8001080010 +                       H'B7,H'D8,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,H'E0,H'03,H'8E,H'39,
             0007E007DF +                       H'B3,H'D8,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,H'E0,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE   99


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             7DB7D80000 +                       H'00,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,H'E0,H'00,H'00,H'00,
             0080010800 +                       H'00,H'00,H'00,H'00,H'00,H'80,H'01,H'08,H'00,H'10,H'00,H'07,H'E0,H'00,H'00,H'00,
             100007E003 +                       H'00,H'00,H'00,H'00,H'00,H'40,H'02,H'04,H'00,H'20,H'00,H'07,H'E0,H'00,H'00,H'00,
             8E39B3D800 +                       H'00,H'00,H'00,H'00,H'00,H'3F,H'FC,H'03,H'FF,H'C0,H'00,H'07,H'E0,H'00,H'00,H'00,
             0000800108 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,
             00100007E0 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'1C,H'CE,H'3B,H'FE,H'E0,H'00,H'07,H'E0,H'00,H'00,H'00,
             0000008001 +                       H'00,H'00,H'00,H'00,H'00,H'21,H'29,H'42,H'09,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,
             0800100007 +                       H'00,H'00,H'00,H'00,H'00,H'21,H'E9,H'43,H'88,H'C0,H'00,H'07,H'E0,H'00,H'00,H'00,
             E000000000 +                       H'00,H'00,H'00,H'00,H'00,H'25,H'29,H'4A,H'08,H'20,H'00,H'07,H'E0,H'00,H'00,H'00,
             0000000080 +                       H'00,H'00,H'00,H'00
             0108001000   
             07E0000000   
             0000000000   
             4002040020   
             0007E00000   
             0000000000   
             003FFC03FF   
             C00007E000   
             0000000000   
             0000000000   
             00000007E0   
             0000000000   
             0000000000   
             0000000007   
             E000000000   
             000000001C   
             CE3BFEE000   
             07E0000000   
             0000000000   
             2129420900   
             0007E00000   
             0000000000   
             0021E94388   
             C00007E000   
             0000000000   
             000025294A   
             08200007E0   
             0000000000   
             0000         
    00001462 001D2E3BC9             .DATA.B     H'00,H'1D,H'2E,H'3B,H'C9,H'C0,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             C00007E000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,
             0000000000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,
             00000007E0 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             0000000000 +                       H'07,H'07,H'30,H'73,H'33,H'9B,H'3C,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             0000000007 +                       H'0F,H'8F,H'B0,H'FB,H'37,H'DB,H'7C,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             E000000000 +                       H'0D,H'8D,H'B0,H'DB,H'B7,H'DB,H'60,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             00001FFFFF +                       H'0D,H'8F,H'B0,H'DB,H'F6,H'DB,H'78,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             FFFFFFFFFF +                       H'0F,H'8F,H'30,H'FB,H'F6,H'DB,H'78,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             87E0000000 +                       H'0F,H'8C,H'30,H'FB,H'77,H'DB,H'60,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'13,
             0000001000 +                       H'ED,H'8C,H'3E,H'DB,H'37,H'DF,H'7C,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'11,
             0000000000 +                       H'ED,H'8C,H'1E,H'DB
             0087E00000   
             0000000010   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  100


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             000087E000   
             0000000000   
             1307073073   
             339B3C87E0   
             0000000000   
             00130F8FB0   
             FB37DB7C87   
             E000000000   
             0000130D8D   
             B0DBB7DB60   
             87E0000000   
             000000130D   
             8FB0DBF6DB   
             7887E00000   
             0000000013   
             0F8F30FBF6   
             DB7887E000   
             0000000000   
             130F8C30FB   
             77DB6087E0   
             0000000000   
             0013ED8C3E   
             DB37DF7C87   
             E000000000   
             000011ED8C   
             1EDB         
    00001536 33CE3C87E0             .DATA.B     H'33,H'CE,H'3C,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'E0,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,
             0010000000 +                       H'00,H'00,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FF,H'FF,H'FF,
             0000E00087 +                       H'FF,H'FF,H'FF,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             E000000000 +                       H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000100000 +                       H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'07,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FF,H'FF,H'FF,
             87E0000000 +                       H'FF,H'FF,H'FF,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,
             0000001FFF +                       H'00,H'00,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'01,H'C7,H'86,H'73,
             FF87E00000 +                       H'67,H'9C,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'EF,H'86,H'FB,
             0000000000 +                       H'6F,H'BE,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'6C,H'06,H'FB,
             0000000000 +                       H'6C,H'36,H'00,H'87,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'EF,H'06,H'DB,
             000007E000 +                       H'6F,H'3E,H'00,H'87
             0000000000   
             0000000000   
             00000007E0   
             0000000000   
             0000000000   
             0000000007   
             E000000000   
             00001FFFFF   
             FFFFFFFFFF   
             87E0000000   
             0000001000   
             0000000000   
             0087E00000   
             0000000010   
             0000000000   
             000087E000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  101


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             1001C78673   
             679C0087E0   
             0000000000   
             001003EF86   
             FB6FBE0087   
             E000000000   
             000010036C   
             06FB6C3600   
             87E0000000   
             0000001003   
             EF06DB6F3E   
             0087         
    0000160A E000000000             .DATA.B     H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'CF,H'06,H'DB,H'6F,H'3C,H'00,H'87,
             00001003CF +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'EC,H'06,H'FB,H'6C,H'3E,H'00,H'87,
             06DB6F3C00 +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'6F,H'BE,H'FB,H'EF,H'B6,H'00,H'87,
             87E0000000 +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'03,H'67,H'9C,H'71,H'C7,H'B6,H'00,H'87,
             0000001003 +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'87,
             EC06FB6C3E +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'87,
             0087E00000 +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'87,
             0000000010 +                       H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'07,
             036FBEFBEF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             B60087E000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             0000000000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             1003679C71   
             C7B60087E0   
             0000000000   
             0010000000   
             0000000087   
             E000000000   
             0000100000   
             0000000000   
             87E0000000   
             0000001FFF   
             FFFFFFFFFF   
             FF87E00000   
             0000000000   
             0000000000   
             000007FFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FF           
    000016BA              __$gadgetTop:                    ; static: gadgetTop
    000016BA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'1C,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'F1,H'C6,H'1C,H'70,H'81,H'8C,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFFFFFFFFE +                       H'FF,H'FF,H'FF,H'E0,H'82,H'08,H'20,H'81,H'04,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             001C003FFF +                       H'FF,H'FF,H'FF,H'E7,H'92,H'49,H'E7,H'E7,H'3C,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'E7,H'92,H'49,H'E1,H'E7,H'0C,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'E4,H'82,H'49,H'21,H'E7,H'84,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  102


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FC0008001F +                       H'FF,H'FF,H'FF,H'E4,H'82,H'49,H'27,H'E7,H'E4,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'E0,H'92,H'08,H'20,H'E7,H'04,H'00,H'08,H'00,H'1F,H'FF,H'FF,H'FF,
             FFF1C61C70 +                       H'00,H'00,H'00,H'F1,H'92,H'1C,H'70,H'E7,H'8C,H'00,H'08,H'00,H'1F,H'00,H'00,H'00,
             818C000800 +                       H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'08,H'00,H'1E,H'00,H'00,H'00,
             1FFFFFFFFF +                       H'00,H'00,H'00,H'3F,H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'08,H'00,H'1C,H'00,H'00,H'00,
             FFFFE08208 +                       H'00,H'00,H'00,H'1F
             2081040008   
             001FFFFFFF   
             FFFFFFE792   
             49E7E73C00   
             08001FFFFF   
             FFFFFFFFE7   
             9249E1E70C   
             0008001FFF   
             FFFFFFFFFF   
             E4824921E7   
             840008001F   
             FFFFFFFFFF   
             FFE4824927   
             E7E4000800   
             1FFFFFFFFF   
             FFFFE09208   
             20E7040008   
             001FFFFFFF   
             000000F192   
             1C70E78C00   
             08001F0000   
             000000007F   
             FFFFFFFFFC   
             0008001E00   
             0000000000   
             3FFFFFFFFF   
             FC0008001C   
             0000000000   
             001F         
    0000178E FFFFFFFFFC             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'08,H'00,H'18,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0008001800 +                       H'00,H'00,H'00,H'00,H'02,H'00,H'14,H'00,H'20,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'FF,H'E3,H'FF,H'C0,H'00,H'00,H'00
             0000000000   
             0200140020   
             0000000000   
             0000000000   
             0001FFE3FF   
             C0000000     
    000017BA              __$tenuesTop:                    ; static: tenuesTop
    000017BA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'00,H'0F,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'81,H'84,H'C9,H'30,H'C7,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'81,H'04,H'C9,H'20,H'83,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FF000FFFFF +                       H'FF,H'FF,H'FF,H'FF,H'E7,H'3C,H'49,H'27,H'9F,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'E7,H'0C,H'09,H'21,H'87,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'E7,H'0C,H'09,H'21,H'C3,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFE0007FF +                       H'FF,H'FF,H'FF,H'FF,H'E7,H'3C,H'89,H'27,H'F3,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'E7,H'04,H'C8,H'20,H'83,H'FE,H'00,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFF8184C9 +                       H'00,H'00,H'00,H'FF,H'E7,H'84,H'CC,H'70,H'C7,H'FE,H'00,H'07,H'FF,H'00,H'00,H'00,
             30C7FE0007 +                       H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'07,H'FE,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  103


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFFFFFF +                       H'00,H'00,H'00,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'07,H'FC,H'00,H'00,H'00,
             FFFFFF8104 +                       H'00,H'00,H'00,H'1F
             C92083FE00   
             07FFFFFFFF   
             FFFFFFFFE7   
             3C49279FFE   
             0007FFFFFF   
             FFFFFFFFFF   
             E70C092187   
             FE0007FFFF   
             FFFFFFFFFF   
             FFE70C0921   
             C3FE0007FF   
             FFFFFFFFFF   
             FFFFE73C89   
             27F3FE0007   
             FFFFFFFFFF   
             FFFFFFE704   
             C82083FE00   
             07FFFFFFFF   
             000000FFE7   
             84CC70C7FE   
             0007FF0000   
             000000007F   
             FFFFFFFFFF   
             FE0007FE00   
             0000000000   
             3FFFFFFFFF   
             FFFE0007FC   
             0000000000   
             001F         
    0000188E FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'07,H'F8,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FE0007F800 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'08,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'F0,H'00,H'00,H'00,H'00
             0000000000   
             0001000800   
             0000000000   
             0000000000   
             000000FFF0   
             00000000     
    000018BA              __$jetpacksTop:                  ; static: jetpacksTop
    000018BA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F8,H'00,H'7F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'98,H'40,H'C7,H'1C,H'64,H'C7,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'90,H'40,H'82,H'08,H'24,H'83,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFF8007FFF +                       H'FF,H'FF,H'FF,H'FF,H'93,H'F3,H'92,H'49,H'E4,H'9F,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'90,H'F3,H'82,H'49,H'E1,H'87,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'90,H'F3,H'86,H'09,H'E1,H'C3,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFF0003F +                       H'FF,H'FF,H'FF,H'FF,H'93,H'F3,H'9E,H'09,H'E4,H'F3,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FC,H'10,H'73,H'9E,H'48,H'24,H'83,H'F0,H'00,H'3F,H'FF,H'FF,H'FF,
             FFFF9840C7 +                       H'00,H'00,H'00,H'FE,H'38,H'73,H'9E,H'4C,H'64,H'C7,H'F0,H'00,H'3F,H'00,H'00,H'00,
             1C64C7F000 +                       H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'00,H'3E,H'00,H'00,H'00,
             3FFFFFFFFF +                       H'00,H'00,H'00,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'00,H'3C,H'00,H'00,H'00,
             FFFFFF9040 +                       H'00,H'00,H'00,H'1F
             82082483F0   
             003FFFFFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  104


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFFFF93   
             F39249E49F   
             F0003FFFFF   
             FFFFFFFFFF   
             90F38249E1   
             87F0003FFF   
             FFFFFFFFFF   
             FF90F38609   
             E1C3F0003F   
             FFFFFFFFFF   
             FFFF93F39E   
             09E4F3F000   
             3FFFFFFFFF   
             FFFFFC1073   
             9E482483F0   
             003FFFFFFF   
             000000FE38   
             739E4C64C7   
             F0003F0000   
             000000007F   
             FFFFFFFFFF   
             FFF0003E00   
             0000000000   
             3FFFFFFFFF   
             FFFFF0003C   
             0000000000   
             001F         
    0000198E FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'00,H'38,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFF0003800 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'08,H'00,H'40,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'07,H'FF,H'80,H'00,H'00,H'00
             0000000000   
             0000080040   
             0000000000   
             0000000000   
             00000007FF   
             80000000     
    000019BA              __$ameliorationsTop:             ; static: ameliorationsTop
    000019BA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'E3,H'93,H'84,H'F3,H'1C,H'71,H'81,H'31,H'99,H'8F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C1,H'01,H'04,H'F2,H'08,H'20,H'81,H'20,H'99,H'07,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C9,H'29,H'3C,H'F2,H'49,H'24,H'E7,H'24,H'89,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C9,H'29,H'0C,H'F2,H'48,H'24,H'E7,H'24,H'81,H'0F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C1,H'29,H'0C,H'F2,H'48,H'60,H'E7,H'24,H'81,H'87,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C1,H'39,H'3C,H'F2,H'48,H'20,H'E7,H'24,H'91,H'E7,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'C9,H'39,H'04,H'12,H'09,H'24,H'E7,H'20,H'99,H'07,H'FF,H'FF,H'FF,
             FFE39384F3 +                       H'00,H'00,H'03,H'C9,H'39,H'86,H'13,H'19,H'24,H'E7,H'31,H'99,H'8F,H'80,H'00,H'00,
             1C71813199 +                       H'00,H'00,H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'00,H'00,H'00,
             8FFFFFFFFF +                       H'00,H'00,H'00,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'00,H'00,
             FFFFC10104 +                       H'00,H'00,H'00,H'7F
             F208208120   
             9907FFFFFF   
             FFFFFFC929   
             3CF24924E7   
             24893FFFFF   
             FFFFFFFFC9   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  105


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             290CF24824   
             E724810FFF   
             FFFFFFFFFF   
             C1290CF248   
             60E7248187   
             FFFFFFFFFF   
             FFC1393CF2   
             4820E72491   
             E7FFFFFFFF   
             FFFFC93904   
             120924E720   
             9907FFFFFF   
             000003C939   
             86131924E7   
             31998F8000   
             00000001FF   
             FFFFFFFFFF   
             FFFFFFFF00   
             0000000000   
             FFFFFFFFFF   
             FFFFFFFFFE   
             0000000000   
             007F         
    00001A8E FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFFC00 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00000000     
    00001ABA              __$statistiquesTop:              ; static: statistiquesTop
    00001ABA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FC,H'60,H'63,H'02,H'63,H'02,H'63,H'93,H'0C,H'7F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'F8,H'20,H'41,H'02,H'41,H'02,H'41,H'92,H'08,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'F9,H'F9,H'C9,H'CE,H'4F,H'CE,H'41,H'92,H'79,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'F8,H'79,H'C9,H'CE,H'43,H'CE,H'49,H'92,H'18,H'7F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FC,H'39,H'C1,H'CE,H'61,H'CE,H'49,H'92,H'1C,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'39,H'C1,H'CE,H'79,H'CE,H'41,H'92,H'7F,H'3F,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'F8,H'39,H'C9,H'CE,H'41,H'CE,H'41,H'82,H'08,H'3F,H'FF,H'FF,H'FF,
             FFFC606302 +                       H'00,H'00,H'03,H'FC,H'79,H'C9,H'CE,H'63,H'CE,H'61,H'C7,H'0C,H'7F,H'80,H'00,H'00,
             630263930C +                       H'00,H'00,H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F8,H'FF,H'FF,H'FF,H'00,H'00,H'00,
             7FFFFFFFFF +                       H'00,H'00,H'00,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'00,H'00,H'00,
             FFFFF82041 +                       H'00,H'00,H'00,H'7F
             0241024192   
             083FFFFFFF   
             FFFFFFF9F9   
             C9CE4FCE41   
             9279FFFFFF   
             FFFFFFFFF8   
             79C9CE43CE   
             4992187FFF   
             FFFFFFFFFF   
             FC39C1CE61   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  106


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             CE49921C3F   
             FFFFFFFFFF   
             FFFF39C1CE   
             79CE41927F   
             3FFFFFFFFF   
             FFFFF839C9   
             CE41CE4182   
             083FFFFFFF   
             000003FC79   
             C9CE63CE61   
             C70C7F8000   
             00000001FF   
             FFFFFFFFFF   
             F8FFFFFF00   
             0000000000   
             FFFFFFFFFF   
             FFFFFFFFFE   
             0000000000   
             007F         
    00001B8E FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFFFC00 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00000000     
    00001BBA              __$succesTop:                    ; static: succesTop
    00001BBA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'19,H'31,H'C7,H'0C,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'09,H'20,H'82,H'08,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'79,H'27,H'9E,H'79,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'19,H'27,H'9E,H'18,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'09,H'27,H'9E,H'1C,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'C9,H'27,H'9E,H'7F,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'08,H'20,H'82,H'08,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFF19 +                       H'00,H'00,H'00,H'00,H'0F,H'FF,H'1C,H'71,H'C7,H'0C,H'7F,H'F0,H'00,H'00,H'00,H'00,
             31C70C7FFF +                       H'00,H'00,H'00,H'00,H'07,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'E0,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'00,H'03,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'C0,H'00,H'00,H'00,H'00,
             FFFFFFFFFE +                       H'00,H'00,H'00,H'00
             092082083F   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FE79279E79   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFE19279E   
             187FFFFFFF   
             FFFFFFFFFF   
             FFFFFF0927   
             9E1C3FFFFF   
             FFFFFFFFFF   
             FFFFFFFFC9   
             279E7F3FFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  107


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFFFFFF   
             FFFFFFFFFE   
             082082083F   
             FFFFFFFFFF   
             000000000F   
             FF1C71C70C   
             7FF0000000   
             0000000000   
             07FFFFFFFF   
             FFFFE00000   
             0000000000   
             0003FFFFFF   
             FFFFFFC000   
             0000000000   
             0000         
    00001C8E 01FFFFFFFF             .DATA.B     H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFF800000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00000000     
    00001CBA              __$optionsTop:                   ; static: optionsTop
    00001CBA FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F8,H'E3,H'02,H'63,H'33,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'41,H'02,H'41,H'32,H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'49,H'CE,H'41,H'12,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F2,H'41,H'CE,H'49,H'02,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F2,H'43,H'CE,H'49,H'03,H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'4F,H'CE,H'41,H'23,H'CF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'4F,H'CE,H'41,H'32,H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFF8E3 +                       H'00,H'00,H'00,H'00,H'0F,H'F8,H'CF,H'CE,H'63,H'33,H'1F,H'F0,H'00,H'00,H'00,H'00,
             0263331FFF +                       H'00,H'00,H'00,H'00,H'07,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'E0,H'00,H'00,H'00,H'00,
             FFFFFFFFFF +                       H'00,H'00,H'00,H'00,H'03,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'C0,H'00,H'00,H'00,H'00,
             FFFFFFFFF0 +                       H'00,H'00,H'00,H'00
             410241320F   
             FFFFFFFFFF   
             FFFFFFFFFF   
             F049CE4112   
             7FFFFFFFFF   
             FFFFFFFFFF   
             FFF241CE49   
             021FFFFFFF   
             FFFFFFFFFF   
             FFFFF243CE   
             49030FFFFF   
             FFFFFFFFFF   
             FFFFFFF04F   
             CE4123CFFF   
             FFFFFFFFFF   
             FFFFFFFFF0   
             4FCE41320F   
             FFFFFFFFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  108


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             000000000F   
             F8CFCE6333   
             1FF0000000   
             0000000000   
             07FFFFFFFF   
             FFFFE00000   
             0000000000   
             0003FFFFFF   
             FFFFFFC000   
             0000000000   
             0000         
    00001D8E 01FFFFFFFF             .DATA.B     H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFF800000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00000000     
    00001DBA              __$trophee:                      ; static: trophee
    00001DBA F00FFFFFFF             .DATA.B     H'F0,H'0F,H'FF,H'FF,H'FF,H'FF,H'CF,H'F3,H'6F,H'F6,H'3F,H'FC,H'1F,H'F8,H'07,H'E0,
             FFCFF36FF6 +                       H'03,H'C0,H'03,H'C0,H'03,H'C0,H'07,H'E0,H'1F,H'F8,H'3F,H'FC,H'3F,H'FC,H'3F,H'FC,
             3FFC1FF807 +                       H'F0,H'0F,H'8F,H'F1,H'80,H'01,H'B0,H'0D,H'50,H'0A,H'20,H'04,H'18,H'18,H'04,H'20,
             E003C003C0 +                       H'02,H'40,H'02,H'40,H'02,H'40,H'06,H'60,H'18,H'18,H'23,H'C4,H'20,H'04,H'3F,H'FC
             03C007E01F   
             F83FFC3FFC   
             3FFCF00F8F   
             F18001B00D   
             500A200418   
             1804200240   
             0240024006   
             60181823C4   
             20043FFC     
    00001DFA              __$expand:                       ; static: expand
    00001DFA F870200000             .DATA.B     H'F8,H'70,H'20,H'00,H'00,H'00,H'00,H'00,H'20,H'70,H'F8,H'00,H'00,H'00,H'00,H'00
             0000002070   
             F800000000   
             00           
    00001E0A              __$succes:                       ; static: succes
    00001E0A 8000000000             .DATA.B     H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'BC,H'03,
             0000000000 +                       H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'A3,H'FC,H'40,H'00,
             00000080BC +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'A0,H'00,H'4C,H'CE,H'6D,H'B3,
             03C0000000 +                       H'CE,H'6C,H'0E,H'6C,H'E3,H'8F,H'38,H'80,H'AC,H'03,H'4C,H'DF,H'6D,H'B7,H'DF,H'6C,
             0000000000 +                       H'1F,H'6D,H'F7,H'DF,H'7C,H'80,H'94,H'02,H'8E,H'DB,H'6D,H'B6,H'1B,H'6C,H'18,H'6D,
             000080A3FC +                       H'86,H'18,H'60,H'80,H'88,H'01,H'0F,H'DB,H'6D,H'B7,H'9B,H'6C,H'1E,H'6D,H'86,H'1E,
             4000000000 +                       H'78,H'80,H'86,H'06,H'0F,H'DB,H'6D,H'B7,H'9F,H'6C,H'0F,H'6D,H'86,H'1E,H'3C,H'80,
             0000000000 +                       H'81,H'08,H'0D,H'DB,H'6D,H'B6,H'1F,H'6C,H'03,H'6D,H'86,H'18,H'0C,H'80,H'80,H'90,
             0080A0004C +                       H'0C,H'DF,H'7C,H'E7,H'DB,H'7C,H'1F,H'7D,H'F7,H'DF,H'7C,H'80,H'80,H'90,H'0C,H'CE,
             CE6DB3CE6C +                       H'38,H'43,H'DB,H'38,H'0E,H'38,H'E3,H'8F,H'38,H'80,H'80,H'90,H'00,H'00,H'00,H'00,
             0E6CE38F38 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'81,H'98,H'00,H'00,H'00,H'00,H'00,H'00,
             80AC034CDF +                       H'00,H'00,H'00,H'00,H'01,H'00,H'86,H'06,H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             6DB7DF6C1F +                       H'FF,H'FF,H'FE,H'00,H'88,H'F1,H'10,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             6DF7DF7C80 +                       H'00,H'00,H'88,H'01
             94028EDB6D   
             B61B6C186D   
             8618608088   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  109


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             010FDB6DB7   
             9B6C1E6D86   
             1E78808606   
             0FDB6DB79F   
             6C0F6D861E   
             3C8081080D   
             DB6DB61F6C   
             036D86180C   
             8080900CDF   
             7CE7DB7C1F   
             7DF7DF7C80   
             80900CCE38   
             43DB380E38   
             E38F388080   
             9000000000   
             0000000000   
             0000808198   
             0000000000   
             0000000000   
             010086060F   
             FFFFFFFFFF   
             FFFFFFFFFE   
             0088F11000   
             0000000000   
             0000000000   
             8801         
    00001EDE 1000000000             .DATA.B     H'10,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'8F,H'FF,H'10,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'80,H'00,H'10,H'00,H'00,H'00,
             00008FFF10 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'40,H'00,H'20,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'3F,H'FF,H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0080001000   
             0000000000   
             0000000000   
             4000200000   
             0000000000   
             000000003F   
             FFC0000000   
             0000000000   
             000000       
    00001F22              __$succesAlpha:                  ; static: succesAlpha
    00001F22 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'80,H'00,H'00,H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             0000000000 +                       H'FF,H'80,H'00,H'00
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  110


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0080000000   
             0000000000   
             0000000001   
             8000000FFF   
             FFFFFFFFFF   
             FFFFFFFF80   
             0000         
    00001FF6 0FFFFFFFFF             .DATA.B     H'0F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'00,H'00,H'0F,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'00,H'00,H'0F,H'FF,H'FF,H'FF,
             FF8000000F +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'80,H'00,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'80,H'C0,H'00,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'80
             8000000FFF   
             FFFFFFFFFF   
             FFFFFFFF80   
             80001FFFFF   
             FFFFFFFFFF   
             FFFFFF80C0   
             003FFFFFFF   
             FFFFFFFFFF   
             FFFF80       
    0000203A              __$sixtyNine:                    ; static: sixtyNine
    0000203A 7C3EFE7FC6             .DATA.B     H'7C,H'3E,H'FE,H'7F,H'C6,H'63,H'C6,H'63,H'C0,H'63,H'C0,H'7F,H'FC,H'3F,H'FE,H'03,
             63C663C063 +                       H'C6,H'03,H'C6,H'63,H'C6,H'63,H'FE,H'7F,H'7C,H'3E,H'00,H'00,H'00,H'00,H'00,H'00
             C07FFC3FFE   
             03C603C663   
             C663FE7F7C   
             3E00000000   
             0000         
    0000205A              __$record:                       ; static: record
    0000205A 71E71C73C6             .DATA.B     H'71,H'E7,H'1C,H'73,H'C6,H'C0,H'FB,H'EF,H'BE,H'FB,H'E6,H'C0,H'DB,H'0C,H'3E,H'DB,
             C0FBEFBEFB +                       H'66,H'C0,H'FB,H'CC,H'36,H'FB,H'66,H'C0,H'F3,H'CC,H'36,H'F3,H'66,H'C0,H'FB,H'0C,
             E6C0DB0C3E +                       H'3E,H'FB,H'60,H'00,H'DB,H'EF,H'BE,H'DB,H'E6,H'C0,H'D9,H'E7,H'1C,H'DB,H'C6,H'C0
             DB66C0FBCC   
             36FB66C0F3   
             CC36F366C0   
             FB0C3EFB60   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  111


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             00DBEFBEDB   
             E6C0D9E71C   
             DBC6C0       
    0000208A              __$tirageFinal:                  ; static: tirageFinal
    0000208A FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'FF,H'00,H'00,H'00,H'00,H'01,H'FF,
             FFFFFFFFFF +                       H'BF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'FF,H'7F,H'FF,H'FF,H'FF,H'FD,H'FF,
             FF80000000 +                       H'A0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'02,H'FF,H'41,H'C0,H'00,H'00,H'05,H'FF,
             0000000000 +                       H'A0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'02,H'FF,H'46,H'30,H'00,H'00,H'05,H'FF,
             FF00000000 +                       H'A0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'02,H'FF,H'4C,H'18,H'00,H'00,H'05,H'FF,
             01FFBFFFFF +                       H'AF,H'D9,H'C7,H'1C,H'78,H'3D,H'B3,H'39,H'82,H'FF,H'5E,H'3C,H'00,H'00,H'05,H'FF,
             FFFFFFFFFF +                       H'AF,H'DB,H'EF,H'BE,H'F8,H'7D,H'B3,H'7D,H'82,H'FF,H'57,H'74,H'00,H'00,H'05,H'FF,
             FEFF7FFFFF +                       H'A3,H'1B,H'6D,H'B0,H'C0,H'61,H'BB,H'6D,H'82,H'FF,H'63,H'E2,H'00,H'00,H'05,H'FF,
             FFFDFFA000 +                       H'A3,H'1B,H'ED,H'B0,H'F0,H'79,H'BF,H'6D,H'82,H'FF,H'61,H'C2,H'00,H'00,H'05,H'FF,
             0000000000 +                       H'A3,H'1B,H'CF,H'B6,H'F0,H'79,H'BF,H'7D,H'82,H'FF,H'63,H'E2,H'00,H'00,H'05,H'FF,
             0002FF41C0 +                       H'A3,H'1B,H'EF,H'B6,H'C0,H'61,H'B7,H'7D,H'82,H'FF,H'57,H'74,H'00,H'00,H'05,H'FF,
             000005FFA0 +                       H'A3,H'1B,H'6D,H'BE,H'F8,H'61,H'B3,H'6D,H'F2,H'FF,H'5E,H'3C,H'00,H'00,H'05,H'FF,
             0000000000 +                       H'A3,H'1B,H'6D,H'9C
             000002FF46   
             30000005FF   
             A000000000   
             00000002FF   
             4C18000005   
             FFAFD9C71C   
             783DB33982   
             FF5E3C0000   
             05FFAFDBEF   
             BEF87DB37D   
             82FF577400   
             0005FFA31B   
             6DB0C061BB   
             6D82FF63E2   
             000005FFA3   
             1BEDB0F079   
             BF6D82FF61   
             C2000005FF   
             A31BCFB6F0   
             79BF7D82FF   
             63E2000005   
             FFA31BEFB6   
             C061B77D82   
             FF57740000   
             05FFA31B6D   
             BEF861B36D   
             F2FF5E3C00   
             0005FFA31B   
             6D9C         
    0000215E 7861B36CF2             .DATA.B     H'78,H'61,H'B3,H'6C,H'F2,H'FF,H'4C,H'18,H'00,H'00,H'05,H'FF,H'A0,H'00,H'00,H'00,
             FF4C180000 +                       H'00,H'00,H'00,H'00,H'02,H'FF,H'46,H'30,H'00,H'00,H'05,H'FF,H'A0,H'00,H'00,H'00,
             05FFA00000 +                       H'00,H'00,H'00,H'00,H'02,H'FF,H'41,H'C0,H'00,H'00,H'05,H'FF,H'BF,H'FF,H'FF,H'FF,
             0000000000 +                       H'FF,H'FF,H'FF,H'FF,H'FE,H'FF,H'7F,H'FF,H'FF,H'FF,H'FD,H'FF,H'80,H'00,H'00,H'00,
             02FF463000 +                       H'00,H'00,H'00,H'00,H'00,H'FF,H'00,H'00,H'00,H'00,H'01,H'FF,H'FF,H'FF,H'FF,H'FF,
             0005FFA000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             0000000000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'E0,H'00,H'00,H'00,H'07,H'FF,H'80,H'00,H'00,H'80,
             0002FF41C0 +                       H'00,H'00,H'80,H'00,H'00,H'FF,H'EF,H'FF,H'FF,H'FF,H'F7,H'FF,H'BF,H'FF,H'FE,H'BF,
             000005FFBF +                       H'FF,H'FE,H'BF,H'FF,H'FE,H'FF,H'E8,H'00,H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,
             FFFFFFFFFF +                       H'00,H'02,H'A0,H'00,H'02,H'EC,H'E8,H'00,H'00,H'00,H'16,H'07,H'A0,H'00,H'02,H'A0,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  112


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFEFF7F +                       H'00,H'02,H'A0,H'00,H'02,H'DB,H'68,H'00,H'00,H'00,H'14,H'03,H'A0,H'00,H'02,H'A0,
             FFFFFFFDFF +                       H'00,H'02,H'A0,H'00,H'02,H'80,H'28,H'00,H'00,H'00,H'14,H'93,H'A0,H'00,H'02,H'A0,
             8000000000 +                       H'00,H'02,H'A0,H'00,H'02,H'DB,H'68,H'00,H'00,H'00,H'14,H'93,H'A0,H'00,H'02,H'A0,
             00000000FF +                       H'00,H'02,H'A0,H'00
             0000000001   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFE00000   
             0007FF8000   
             0080000080   
             0000FFEFFF   
             FFFFF7FFBF   
             FFFEBFFFFE   
             BFFFFEFFE8   
             00000017FF   
             A00002A000   
             02A00002EC   
             E800000016   
             07A00002A0   
             0002A00002   
             DB68000000   
             1403A00002   
             A00002A000   
             0280280000   
             001493A000   
             02A00002A0   
             0002DB6800   
             00001493A0   
             0002A00002   
             A000         
    00002232 02E6E80000             .DATA.B     H'02,H'E6,H'E8,H'00,H'00,H'00,H'14,H'F3,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             0014F3A000 +                       H'02,H'FF,H'E8,H'00,H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             02A00002A0 +                       H'02,H'FF,H'E8,H'00,H'00,H'00,H'14,H'63,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             0002FFE800 +                       H'02,H'F2,H'6B,H'E0,H'00,H'07,H'D4,H'03,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             000017FFA0 +                       H'02,H'F2,H'69,H'C0,H'00,H'03,H'97,H'9F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             0002A00002 +                       H'02,H'FF,H'E8,H'80,H'00,H'01,H'14,H'03,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             A00002FFE8 +                       H'02,H'CF,H'E8,H'00,H'00,H'00,H'14,H'63,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             0000001463 +                       H'02,H'CF,H'E8,H'00,H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             A00002A000 +                       H'02,H'C0,H'28,H'00,H'00,H'00,H'16,H'07,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             02A00002F2 +                       H'02,H'C0,H'28,H'00,H'00,H'00,H'14,H'03,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             6BE00007D4 +                       H'02,H'CF,H'EB,H'E0,H'00,H'07,H'D4,H'93,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             03A00002A0 +                       H'02,H'CF,H'E9,H'C0,H'00,H'03,H'94,H'93,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             0002A00002 +                       H'02,H'FF,H'E8,H'80,H'00,H'01,H'14,H'F3,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,
             F269C00003 +                       H'02,H'CF,H'E8,H'00
             979FA00002   
             A00002A000   
             02FFE88000   
             011403A000   
             02A00002A0   
             0002CFE800   
             00001463A0   
             0002A00002   
             A00002CFE8   
             00000017FF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  113


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             A00002A000   
             02A00002C0   
             2800000016   
             07A00002A0   
             0002A00002   
             C028000000   
             1403A00002   
             A00002A000   
             02CFEBE000   
             07D493A000   
             02A00002A0   
             0002CFE9C0   
             00039493A0   
             0002A00002   
             A00002FFE8   
             80000114F3   
             A00002A000   
             02A00002CF   
             E800         
    00002306 000017FFA0             .DATA.B     H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C9,H'E8,H'00,
             0002A00002 +                       H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C9,H'E8,H'00,
             A00002C9E8 +                       H'00,H'00,H'17,H'FF,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'00,
             00000017FF +                       H'00,H'00,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'E0,H'2B,H'E0,
             A00002A000 +                       H'00,H'07,H'D7,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'FF,H'E9,H'C0,
             02A00002C9 +                       H'00,H'03,H'97,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'80,
             E800000017 +                       H'00,H'01,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'00,
             FFA00002A0 +                       H'00,H'00,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'FF,H'E8,H'00,
             0002A00002 +                       H'00,H'00,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'00,
             C028000000 +                       H'00,H'00,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'00,
             170FA00002 +                       H'00,H'00,H'17,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'F9,H'EB,H'E0,
             A00002A000 +                       H'00,H'07,H'D7,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'29,H'C0,
             02E02BE000 +                       H'00,H'03,H'97,H'0F,H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C0,H'28,H'80,
             07D70FA000 +                       H'00,H'01,H'17,H'0F
             02A00002A0   
             0002FFE9C0   
             0003970FA0   
             0002A00002   
             A00002C028   
             800001170F   
             A00002A000   
             02A00002C0   
             2800000017   
             0FA00002A0   
             0002A00002   
             FFE8000000   
             170FA00002   
             A00002A000   
             02C0280000   
             00170FA000   
             02A00002A0   
             0002C02800   
             0000170FA0   
             0002A00002   
             A00002F9EB   
             E00007D70F   
             A00002A000   
             02A00002C0   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  114


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             29C0000397   
             0FA00002A0   
             0002A00002   
             C028800001   
             170F         
    000023DA A00002A000             .DATA.B     H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'FF,H'E8,H'00,H'00,H'00,H'17,H'0F,
             02A00002FF +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'EC,H'68,H'00,H'00,H'00,H'14,H'03,
             E800000017 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C8,H'28,H'00,H'00,H'00,H'16,H'07,
             0FA00002A0 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C9,H'28,H'00,H'00,H'00,H'17,H'0F,
             0002A00002 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'C1,H'28,H'00,H'00,H'00,H'17,H'9F,
             EC68000000 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'E3,H'68,H'00,H'00,H'00,H'17,H'FF,
             1403A00002 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'FF,H'E8,H'00,H'00,H'00,H'17,H'FF,
             A00002A000 +                       H'A0,H'00,H'02,H'A0,H'00,H'02,H'A0,H'00,H'02,H'FF,H'E8,H'00,H'00,H'00,H'17,H'FF,
             02C8280000 +                       H'BF,H'FF,H'FE,H'BF,H'FF,H'FE,H'BF,H'FF,H'FE,H'FF,H'EF,H'FF,H'FF,H'FF,H'F7,H'FF,
             001607A000 +                       H'80,H'00,H'00,H'80,H'00,H'00,H'80,H'00,H'00,H'FF,H'E0,H'00,H'00,H'00,H'07,H'FF,
             02A00002A0 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0002C92800   
             0000170FA0   
             0002A00002   
             A00002C128   
             000000179F   
             A00002A000   
             02A00002E3   
             6800000017   
             FFA00002A0   
             0002A00002   
             FFE8000000   
             17FFA00002   
             A00002A000   
             02FFE80000   
             0017FFBFFF   
             FEBFFFFEBF   
             FFFEFFEFFF   
             FFFFF7FF80   
             0000800000   
             800000FFE0   
             00000007FF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FF           
    0000248A              __$tirageFinalAlpha:             ; static: tirageFinalAlpha
    0000248A 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             00007FFFFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             FFFC000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000007FFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             FFFFFC0000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             000000007F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  115


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFFFC00   
             0000000000   
             0000000000   
             7FFFFFFFFC   
             0000000000   
             0000000000   
             007FFFFFFF   
             FC00000000   
             0000000000   
             00007FFFFF   
             FFFC000000   
             0000000000   
             0000007FFF   
             FFFFFC0000   
             0000000000   
             000000007F   
             FFFFFFFC00   
             0000000000   
             0000000000   
             7FFFFFFFFC   
             0000000000   
             0000000000   
             007FFFFFFF   
             FC00000000   
             0000000000   
             00007FFFFF   
             FFFC000000   
             0000         
    0000255E 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,
             007FFFFFFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,
             FC00000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'7F,H'FF,H'FF,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,
             00007FFFFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFC000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000007FFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFFFC0000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,
             0000000000 +                       H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,
             000000007F +                       H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,
             FFFFFFFC00 +                       H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,
             0000000000 +                       H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,
             0000000000 +                       H'FF,H'FC,H'1F,H'FF
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             1FFFFC1FFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  116


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FC1FFFFC00   
             0000000000   
             001FFFFC1F   
             FFFC1FFFFC   
             0000000000   
             00001FFFFC   
             1FFFFC1FFF   
             FC00000000   
             0000001FFF   
             FC1FFFFC1F   
             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFF         
    00002632 FC00000000             .DATA.B     H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             0000001FFF +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             FC1FFFFC1F +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             FFFC000000 +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             000000001F +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             FFFC1FFFFC +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             1FFFFC0000 +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             0000000000 +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             1FFFFC1FFF +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             FC1FFFFC00 +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             0000000000 +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             001FFFFC1F +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             FFFC1FFFFC +                       H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,
             0000000000 +                       H'FC,H'00,H'00,H'00
             00001FFFFC   
             1FFFFC1FFF   
             FC00000000   
             0000001FFF   
             FC1FFFFC1F   
             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFFFC0000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000000000   
             001FFFFC1F   
             FFFC1FFFFC   
             0000000000   
             00001FFFFC   
             1FFFFC1FFF   
             FC00000000   
             0000001FFF   
             FC1FFFFC1F   
             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFFFC0000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  117


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002706 000000001F             .DATA.B     H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             FFFC1FFFFC +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             1FFFFC0000 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             1FFFFC1FFF +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             FC1FFFFC00 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             001FFFFC1F +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             FFFC1FFFFC +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             00001FFFFC +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             1FFFFC1FFF +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             FC00000000 +                       H'00,H'00,H'00,H'00,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,
             0000001FFF +                       H'00,H'00,H'00,H'00
             FC1FFFFC1F   
             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFFFC0000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000000000   
             001FFFFC1F   
             FFFC1FFFFC   
             0000000000   
             00001FFFFC   
             1FFFFC1FFF   
             FC00000000   
             0000001FFF   
             FC1FFFFC1F   
             FFFC000000   
             000000001F   
             FFFC1FFFFC   
             1FFFFC0000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000000000   
             001FFFFC1F   
             FFFC1FFFFC   
             0000000000   
             0000         
    000027DA 1FFFFC1FFF             .DATA.B     H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FC1FFFFC00 +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             001FFFFC1F +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FFFC1FFFFC +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             00001FFFFC +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             1FFFFC1FFF +                       H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'1F,H'FF,H'FC,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FC00000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000001FFF +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             FC1FFFFC1F +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             FFFC000000   
             000000001F   
             FFFC1FFFFC   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  118


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             1FFFFC0000   
             0000000000   
             1FFFFC1FFF   
             FC1FFFFC00   
             0000000000   
             001FFFFC1F   
             FFFC1FFFFC   
             0000000000   
             00001FFFFC   
             1FFFFC1FFF   
             FC00000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00           
    0000288A              __$moto:                         ; static: moto
    0000288A 00880003F8             .DATA.B     H'00,H'88,H'00,H'03,H'F8,H'00,H'07,H'F8,H'00,H'0F,H'F0,H'00,H'0F,H'88,H'00,H'0F,
             0007F8000F +                       H'88,H'00,H'0C,H'F8,H'00,H'0C,H'B4,H'00,H'06,H'88,H'00,H'05,H'08,H'00,H'02,H'F7,
             F0000F8800 +                       H'40,H'04,H'0F,H'C0,H'07,H'DF,H'C0,H'FF,H'2F,H'AE,H'9F,H'9F,H'15,H'41,H'CE,H'2F,
             0F88000CF8 +                       H'7F,H'FE,H'3D,H'57,H'FC,H'2B,H'3C,H'00,H'1E,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             000CB40006 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'88,H'00,H'03,H'F8,H'00,H'07,H'F8,
             8800050800 +                       H'00,H'0F,H'F0,H'00,H'0F,H'88,H'00,H'0F,H'88,H'00,H'0C,H'F8,H'00,H'0C,H'B4,H'00,
             02F740040F +                       H'06,H'88,H'00,H'05,H'08,H'00,H'02,H'F7,H'40,H'04,H'0F,H'C0,H'07,H'DF,H'C0,H'FF,
             C007DFC0FF +                       H'2F,H'AE,H'FF,H'9F,H'1F,H'7F,H'CE,H'3F,H'7F,H'FE,H'3F,H'7F,H'FC,H'3F,H'3C,H'00,
             2FAE9F9F15 +                       H'1E,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             41CE2F7FFE   
             3D57FC2B3C   
             001E000000   
             0000000000   
             0000000000   
             0000008800   
             03F80007F8   
             000FF0000F   
             88000F8800   
             0CF8000CB4   
             0006880005   
             080002F740   
             040FC007DF   
             C0FF2FAEFF   
             9F1F7FCE3F   
             7FFE3F7FFC   
             3F3C001E00   
             0000000000   
             0000000000   
             00000000     
    0000291A              __$motoAir:                      ; static: motoAir
    0000291A 0420000FE0             .DATA.B     H'04,H'20,H'00,H'0F,H'E0,H'00,H'1F,H'C0,H'00,H'3F,H'20,H'00,H'3E,H'20,H'00,H'3F,
             001FC0003F +                       H'E0,H'00,H'3A,H'D0,H'00,H'3A,H'20,H'00,H'1E,H'26,H'80,H'0B,H'CF,H'80,H'0D,H'AF,
             20003E2000 +                       H'80,H'02,H'5F,H'80,H'07,H'87,H'5C,H'07,H'9F,H'36,H'7F,H'CF,H'7A,H'CC,H'EE,H'5E,
             3FE0003AD0 +                       H'63,H'FC,H'6A,H'3F,H'C0,H'3C,H'35,H'00,H'00,H'1E,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  119


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             003A20001E +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'04,H'20,H'00,H'0F,H'E0,H'00,H'1F,H'C0,
             26800BCF80 +                       H'00,H'3F,H'20,H'00,H'3E,H'20,H'00,H'3F,H'E0,H'00,H'3A,H'D0,H'00,H'3A,H'20,H'00,
             0DAF80025F +                       H'1E,H'26,H'80,H'0B,H'CF,H'80,H'0D,H'AF,H'80,H'02,H'5F,H'80,H'07,H'87,H'5C,H'07,
             8007875C07 +                       H'9E,H'3E,H'7F,H'CF,H'7E,H'FF,H'EE,H'7E,H'7F,H'FC,H'7E,H'3F,H'C0,H'3C,H'3F,H'00,
             9F367FCF7A +                       H'00,H'1E,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             CCEE5E63FC   
             6A3FC03C35   
             00001E0000   
             0000000000   
             0000000000   
             0000042000   
             0FE0001FC0   
             003F20003E   
             20003FE000   
             3AD0003A20   
             001E26800B   
             CF800DAF80   
             025F800787   
             5C079E3E7F   
             CF7EFFEE7E   
             7FFC7E3FC0   
             3C3F00001E   
             0000000000   
             0000000000   
             00000000     
    000029AA              __$moto2:                        ; static: moto2
    000029AA 00880003F8             .DATA.B     H'00,H'88,H'00,H'03,H'F8,H'00,H'07,H'F8,H'00,H'0F,H'F0,H'00,H'0F,H'88,H'00,H'0F,
             0007F8000F +                       H'88,H'00,H'0C,H'F8,H'00,H'0C,H'B4,H'00,H'06,H'88,H'00,H'05,H'08,H'00,H'02,H'F7,
             F0000F8800 +                       H'40,H'04,H'0F,H'C0,H'07,H'DF,H'C0,H'FF,H'2F,H'AE,H'9F,H'9F,H'1B,H'41,H'CE,H'3D,
             0F88000CF8 +                       H'7F,H'FE,H'2F,H'6B,H'FC,H'35,H'3C,H'00,H'1E,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             000CB40006 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             8800050800   
             02F740040F   
             C007DFC0FF   
             2FAE9F9F1B   
             41CE3D7FFE   
             2F6BFC353C   
             001E000000   
             0000000000   
             0000000000   
             0000         
    000029F2              __$motoAlpha:                    ; static: motoAlpha
    000029F2 FF77FFFC07             .DATA.B     H'FF,H'77,H'FF,H'FC,H'07,H'FF,H'F8,H'07,H'FF,H'F0,H'0F,H'FF,H'F0,H'07,H'FF,H'F0,
             FFF807FFF0 +                       H'07,H'FF,H'F0,H'07,H'FF,H'F0,H'03,H'FF,H'F8,H'07,H'FF,H'F8,H'07,H'FF,H'FC,H'00,
             0FFFF007FF +                       H'BF,H'F8,H'00,H'3F,H'F8,H'00,H'3F,H'00,H'00,H'51,H'00,H'00,H'E0,H'80,H'01,H'C0,
             F007FFF007 +                       H'80,H'01,H'C0,H'80,H'03,H'C0,H'C7,H'FF,H'E1,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFF003FFF8 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             07FFF807FF   
             FC00BFF800   
             3FF8003F00   
             00510000E0   
             8001C08001   
             C08003C0C7   
             FFE1FFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  120


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002A3A              __$motoAirAlpha:                 ; static: motoAirAlpha
    00002A3A FBDFFFF01F             .DATA.B     H'FB,H'DF,H'FF,H'F0,H'1F,H'FF,H'E0,H'3F,H'FF,H'C0,H'1F,H'FF,H'C0,H'1F,H'FF,H'C0,
             FFE03FFFC0 +                       H'1F,H'FF,H'C0,H'0F,H'FF,H'C0,H'1F,H'FF,H'E0,H'19,H'7F,H'F0,H'30,H'7F,H'F0,H'10,
             1FFFC01FFF +                       H'7F,H'FC,H'00,H'7F,H'F8,H'00,H'A3,H'F8,H'00,H'C1,H'80,H'00,H'81,H'00,H'01,H'81,
             C01FFFC00F +                       H'80,H'03,H'81,H'C0,H'3F,H'C3,H'C0,H'FF,H'FF,H'E1,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFC01FFFE0 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             197FF0307F   
             F0107FFC00   
             7FF800A3F8   
             00C1800081   
             0001818003   
             81C03FC3C0   
             FFFFE1FFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    00002A82              __$teleporteur1:                 ; static: teleporteur1
    00002A82 81423C7EE7             .DATA.B     H'81,H'42,H'3C,H'7E,H'E7,H'C3,H'81,H'81,H'81,H'81,H'C3,H'E7,H'7E,H'3C,H'42,H'81,
             C381818181 +                       H'81,H'42,H'3C,H'7E,H'EF,H'DF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'7E,H'3C,H'42,H'81
             C3E77E3C42   
             8181423C7E   
             EFDFFFFFFF   
             FFFFFF7E3C   
             4281         
    00002AA2              __$teleporteur2:                 ; static: teleporteur2
    00002AA2 000081423C             .DATA.B     H'00,H'00,H'81,H'42,H'3C,H'7E,H'E7,H'81,H'81,H'E7,H'7E,H'3C,H'42,H'81,H'00,H'00,
             7EE78181E7 +                       H'00,H'00,H'81,H'42,H'3C,H'7E,H'EF,H'DF,H'FF,H'FF,H'7E,H'3C,H'42,H'81,H'00,H'00
             7E3C428100   
             0000008142   
             3C7EEFDFFF   
             FF7E3C4281   
             0000         
    00002AC2              __$teleporteur3:                 ; static: teleporteur3
    00002AC2 0000000081             .DATA.B     H'00,H'00,H'00,H'00,H'81,H'42,H'3C,H'7E,H'81,H'7E,H'3C,H'42,H'81,H'00,H'00,H'00,
             423C7E817E +                       H'00,H'00,H'00,H'00,H'81,H'42,H'3C,H'7E,H'DF,H'7E,H'3C,H'42,H'81,H'00,H'00,H'00
             3C42810000   
             0000000000   
             81423C7EDF   
             7E3C428100   
             0000         
    00002AE2              __$teleporteur1Alpha:            ; static: teleporteur1Alpha
    00002AE2 7EBDC38100             .DATA.B     H'7E,H'BD,H'C3,H'81,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'81,H'C3,H'BD,H'7E
             0000000000   
             000081C3BD   
             7E           
    00002AF2              __$teleporteur2Alpha:            ; static: teleporteur2Alpha
    00002AF2 FFFF7EBDC3             .DATA.B     H'FF,H'FF,H'7E,H'BD,H'C3,H'81,H'00,H'00,H'00,H'00,H'81,H'C3,H'BD,H'7E,H'FF,H'FF
             8100000000   
             81C3BD7EFF   
             FF           
    00002B02              __$teleporteur3Alpha:            ; static: teleporteur3Alpha
    00002B02 FFFFFFFF7E             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'7E,H'BD,H'C3,H'81,H'00,H'81,H'C3,H'BD,H'7E,H'FF,H'FF,H'FF
             BDC3810081   
             C3BD7EFFFF   
             FF           
    00002B12              __$gravitySolUp1:                ; static: gravitySolUp1
    00002B12 FE007F803F             .DATA.B     H'FE,H'00,H'7F,H'80,H'3F,H'E0,H'38,H'10,H'31,H'F0,H'13,H'E0,H'17,H'F0,H'17,H'B0,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  121


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             E0381031F0 +                       H'13,H'F8,H'12,H'10,H'0E,H'10,H'05,H'E0,H'04,H'90,H'03,H'D0,H'04,H'A0,H'09,H'20,
             13E017F017 +                       H'0E,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             B013F81210 +                       H'FE,H'00,H'7F,H'80,H'3F,H'E0,H'38,H'10,H'31,H'F0,H'13,H'E0,H'17,H'F0,H'17,H'B0,
             0E1005E004 +                       H'13,H'F8,H'12,H'10,H'0E,H'10,H'07,H'E0,H'07,H'F0,H'03,H'F0,H'07,H'E0,H'0F,H'E0,
             9003D004A0 +                       H'0E,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             09200EE000   
             0000000000   
             0000000000   
             000000FE00   
             7F803FE038   
             1031F013E0   
             17F017B013   
             F812100E10   
             07E007F003   
             F007E00FE0   
             0EE0000000   
             0000000000   
             0000000000   
             00           
    00002B72              __$gravitySolUp2:                ; static: gravitySolUp2
    00002B72 FE007F803F             .DATA.B     H'FE,H'00,H'7F,H'80,H'3F,H'E0,H'38,H'10,H'31,H'F0,H'13,H'E0,H'17,H'F0,H'17,H'B0,
             E0381031F0 +                       H'13,H'F8,H'12,H'10,H'0E,H'10,H'05,H'E0,H'04,H'90,H'07,H'D0,H'04,H'60,H'03,H'40,
             13E017F017 +                       H'01,H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             B013F81210 +                       H'FE,H'00,H'7F,H'80,H'3F,H'E0,H'38,H'10,H'31,H'F0,H'13,H'E0,H'17,H'F0,H'17,H'B0,
             0E1005E004 +                       H'13,H'F8,H'12,H'10,H'0E,H'10,H'07,H'E0,H'07,H'F0,H'07,H'F0,H'07,H'E0,H'03,H'C0,
             9007D00460 +                       H'01,H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             034001C000   
             0000000000   
             0000000000   
             000000FE00   
             7F803FE038   
             1031F013E0   
             17F017B013   
             F812100E10   
             07E007F007   
             F007E003C0   
             01C0000000   
             0000000000   
             0000000000   
             00           
    00002BD2              __$gravitySolDown1:              ; static: gravitySolDown1
    00002BD2 0EE0092004             .DATA.B     H'0E,H'E0,H'09,H'20,H'04,H'A0,H'03,H'D0,H'04,H'90,H'05,H'E0,H'0E,H'10,H'12,H'10,
             A003D00490 +                       H'13,H'F8,H'17,H'B0,H'17,H'F0,H'13,H'E0,H'31,H'F0,H'38,H'10,H'3F,H'E0,H'7F,H'80,
             05E00E1012 +                       H'FE,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             1013F817B0 +                       H'0E,H'E0,H'0F,H'E0,H'07,H'E0,H'03,H'F0,H'07,H'F0,H'07,H'E0,H'0E,H'10,H'12,H'10,
             17F013E031 +                       H'13,H'F8,H'17,H'B0,H'17,H'F0,H'13,H'E0,H'31,H'F0,H'38,H'10,H'3F,H'E0,H'7F,H'80,
             F038103FE0 +                       H'FE,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             7F80FE0000   
             0000000000   
             0000000000   
             0000000EE0   
             0FE007E003   
             F007F007E0   
             0E10121013   
             F817B017F0   
             13E031F038   
             103FE07F80   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  122


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FE00000000   
             0000000000   
             0000000000   
             00           
    00002C32              __$gravitySolDown2:              ; static: gravitySolDown2
    00002C32 01C0034004             .DATA.B     H'01,H'C0,H'03,H'40,H'04,H'60,H'07,H'D0,H'04,H'90,H'05,H'E0,H'0E,H'10,H'12,H'10,
             6007D00490 +                       H'13,H'F8,H'17,H'B0,H'17,H'F0,H'13,H'E0,H'31,H'F0,H'38,H'10,H'3F,H'E0,H'7F,H'80,
             05E00E1012 +                       H'FE,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             1013F817B0 +                       H'01,H'C0,H'03,H'C0,H'07,H'E0,H'07,H'F0,H'07,H'F0,H'07,H'E0,H'0E,H'10,H'12,H'10,
             17F013E031 +                       H'13,H'F8,H'17,H'B0,H'17,H'F0,H'13,H'E0,H'31,H'F0,H'38,H'10,H'3F,H'E0,H'7F,H'80,
             F038103FE0 +                       H'FE,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             7F80FE0000   
             0000000000   
             0000000000   
             00000001C0   
             03C007E007   
             F007F007E0   
             0E10121013   
             F817B017F0   
             13E031F038   
             103FE07F80   
             FE00000000   
             0000000000   
             0000000000   
             00           
    00002C92              __$gravitySolUp1Alpha:           ; static: gravitySolUp1Alpha
    00002C92 01FF807FC0             .DATA.B     H'01,H'FF,H'80,H'7F,H'C0,H'1F,H'C0,H'0F,H'C0,H'0F,H'E0,H'1F,H'E0,H'0F,H'E0,H'0F,
             1FC00FC00F +                       H'E0,H'07,H'E0,H'0F,H'F0,H'0F,H'F8,H'1F,H'F8,H'0F,H'FC,H'0F,H'F8,H'1F,H'F0,H'1F,
             E01FE00FE0 +                       H'F1,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0FE007E00F   
             F00FF81FF8   
             0FFC0FF81F   
             F01FF11FFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFF       
    00002CC2              __$gravitySolUp2Alpha:           ; static: gravitySolUp2Alpha
    00002CC2 01FF807FC0             .DATA.B     H'01,H'FF,H'80,H'7F,H'C0,H'1F,H'C0,H'0F,H'C0,H'0F,H'E0,H'1F,H'E0,H'0F,H'E0,H'0F,
             1FC00FC00F +                       H'E0,H'07,H'E0,H'0F,H'F0,H'0F,H'F8,H'1F,H'F8,H'0F,H'F8,H'0F,H'F8,H'1F,H'FC,H'3F,
             E01FE00FE0 +                       H'FE,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0FE007E00F   
             F00FF81FF8   
             0FF80FF81F   
             FC3FFE3FFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFF       
    00002CF2              __$gravitySolDown1Alpha:         ; static: gravitySolDown1Alpha
    00002CF2 F11FF01FF8             .DATA.B     H'F1,H'1F,H'F0,H'1F,H'F8,H'1F,H'FC,H'0F,H'F8,H'0F,H'F8,H'1F,H'F0,H'0F,H'E0,H'0F,
             1FFC0FF80F +                       H'E0,H'07,H'E0,H'0F,H'E0,H'0F,H'E0,H'1F,H'C0,H'0F,H'C0,H'0F,H'C0,H'1F,H'80,H'7F,
             F81FF00FE0 +                       H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0FE007E00F   
             E00FE01FC0   
             0FC00FC01F   
             807F01FFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  123


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFF       
    00002D22              __$gravitySolDown2Alpha:         ; static: gravitySolDown2Alpha
    00002D22 FE3FFC3FF8             .DATA.B     H'FE,H'3F,H'FC,H'3F,H'F8,H'1F,H'F8,H'0F,H'F8,H'0F,H'F8,H'1F,H'F0,H'0F,H'E0,H'0F,
             1FF80FF80F +                       H'E0,H'07,H'E0,H'0F,H'E0,H'0F,H'E0,H'1F,H'C0,H'0F,H'C0,H'0F,H'C0,H'1F,H'80,H'7F,
             F81FF00FE0 +                       H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0FE007E00F   
             E00FE01FC0   
             0FC00FC01F   
             807F01FFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFF       
    00002D52              __$bird1:                        ; static: bird1
    00002D52 0078000185             .DATA.B     H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'FE,H'80,H'F4,H'CC,H'40,H'84,H'58,H'20,H'4A,
             000FFE80F4 +                       H'28,H'58,H'29,H'28,H'84,H'7C,H'97,H'02,H'22,H'09,H'01,H'11,H'09,H'FF,H'0E,H'F9,
             CC40845820 +                       H'02,H'04,H'01,H'04,H'03,H'01,H'18,H'00,H'FF,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,
             4A28582928 +                       H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'FE,H'80,H'FC,H'CC,H'40,H'FC,H'58,H'20,H'7A,
             847C970222 +                       H'38,H'58,H'39,H'38,H'84,H'7C,H'9F,H'02,H'3E,H'0F,H'01,H'1F,H'0F,H'FF,H'0F,H'FF,
             09011109FF +                       H'02,H'07,H'FF,H'04,H'03,H'FF,H'18,H'00,H'FF,H'E0,H'00,H'00,H'00,H'00,H'00,H'00
             0EF9020401   
             0403011800   
             FFE0000000   
             0000000078   
             000185000F   
             FE80FCCC40   
             FC58207A38   
             583938847C   
             9F023E0F01   
             1F0FFF0FFF   
             0207FF0403   
             FF1800FFE0   
             0000000000   
             00           
    00002DB2              __$bird2:                        ; static: bird2
    00002DB2 0078000185             .DATA.B     H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'7E,H'80,H'F1,H'4C,H'40,H'81,H'78,H'20,H'41,
             000F7E80F1 +                       H'48,H'58,H'20,H'F8,H'84,H'78,H'07,H'02,H'27,H'F9,H'01,H'12,H'09,H'FF,H'0D,H'F9,
             4C40817820 +                       H'02,H'04,H'01,H'04,H'03,H'01,H'18,H'00,H'FF,H'E0,H'00,H'00,H'00,H'00,H'00,H'00,
             41485820F8 +                       H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'7E,H'80,H'FF,H'4C,H'40,H'FF,H'78,H'20,H'7F,
             8478070227 +                       H'48,H'58,H'3F,H'F8,H'84,H'7F,H'FF,H'02,H'3F,H'FF,H'01,H'1E,H'0F,H'FF,H'0F,H'FF,
             F9011209FF +                       H'02,H'07,H'FF,H'04,H'03,H'FF,H'18,H'00,H'FF,H'E0,H'00,H'00,H'00,H'00,H'00,H'00
             0DF9020401   
             0403011800   
             FFE0000000   
             0000000078   
             000185000F   
             7E80FF4C40   
             FF78207F48   
             583FF8847F   
             FF023FFF01   
             1E0FFF0FFF   
             0207FF0403   
             FF1800FFE0   
             0000000000   
             00           
    00002E12              __$bird3:                        ; static: bird3
    00002E12 0078000185             .DATA.B     H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'7E,H'80,H'F1,H'4C,H'40,H'81,H'78,H'20,H'41,
             000F7E80F1 +                       H'48,H'58,H'20,H'F8,H'84,H'78,H'07,H'02,H'20,H'F9,H'01,H'11,H'09,H'FF,H'0A,H'09,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  124


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             4C40817820 +                       H'02,H'0C,H'91,H'04,H'09,H'21,H'18,H'0A,H'3F,H'E0,H'04,H'40,H'00,H'03,H'80,H'00,
             41485820F8 +                       H'00,H'78,H'00,H'01,H'85,H'00,H'0F,H'7E,H'80,H'FF,H'4C,H'40,H'FF,H'78,H'20,H'7F,
             8478070220 +                       H'48,H'58,H'3F,H'F8,H'84,H'7F,H'FF,H'02,H'3F,H'FF,H'01,H'1F,H'0F,H'FF,H'0E,H'0F,
             F9011109FF +                       H'02,H'0C,H'9F,H'04,H'09,H'3F,H'18,H'0A,H'3F,H'E0,H'04,H'40,H'00,H'03,H'80,H'00
             0A09020C91   
             040921180A   
             3FE0044000   
             0380000078   
             000185000F   
             7E80FF4C40   
             FF78207F48   
             583FF8847F   
             FF023FFF01   
             1F0FFF0E0F   
             020C9F0409   
             3F180A3FE0   
             0440000380   
             00           
    00002E72              __$bird1Alpha:                   ; static: bird1Alpha
    00002E72 FF87FFFE02             .DATA.B     H'FF,H'87,H'FF,H'FE,H'02,H'FF,H'F0,H'00,H'7F,H'00,H'00,H'3F,H'00,H'00,H'1F,H'80,
             FFF0007F00 +                       H'00,H'07,H'C0,H'00,H'03,H'80,H'00,H'01,H'C0,H'00,H'00,H'E0,H'00,H'00,H'F0,H'00,
             003F00001F +                       H'01,H'F8,H'00,H'03,H'FC,H'00,H'07,H'FF,H'00,H'1F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             800007C000   
             03800001C0   
             0000E00000   
             F00001F800   
             03FC0007FF   
             001FFFFFFF   
             FFFFFF       
    00002EA2              __$tank1:                        ; static: tank1
    00002EA2 00180001E7             .DATA.B     H'00,H'18,H'00,H'01,H'E7,H'00,H'02,H'18,H'E0,H'01,H'85,H'F0,H'00,H'63,H'10,H'01,
             000218E001 +                       H'D1,H'08,H'02,H'2A,H'88,H'02,H'46,H'84,H'02,H'8C,H'44,H'01,H'16,H'24,H'02,H'A2,
             85F0006310 +                       H'1C,H'04,H'55,H'04,H'04,H'28,H'C4,H'0A,H'A0,H'24,H'07,H'D0,H'58,H'00,H'6F,H'A0,
             01D108022A +                       H'00,H'90,H'40,H'01,H'60,H'20,H'02,H'57,H'50,H'01,H'88,H'88,H'00,H'77,H'70,H'00,
             8802468402 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'18,H'00,H'01,H'E7,H'00,H'03,H'FF,
             8C44011624 +                       H'E0,H'01,H'FF,H'F0,H'00,H'7F,H'10,H'01,H'FF,H'08,H'03,H'EF,H'88,H'03,H'C7,H'84,
             02A21C0455 +                       H'03,H'8F,H'C4,H'01,H'17,H'E4,H'02,H'A3,H'FC,H'04,H'77,H'FC,H'04,H'3F,H'FC,H'0A,
             040428C40A +                       H'BF,H'FC,H'07,H'FF,H'F8,H'00,H'7F,H'E0,H'00,H'FF,H'C0,H'01,H'7F,H'E0,H'02,H'5F,
             A02407D058 +                       H'D0,H'01,H'88,H'88,H'00,H'77,H'70,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             006FA00090   
             4001602002   
             5750018888   
             0077700000   
             0000000000   
             0000001800   
             01E70003FF   
             E001FFF000   
             7F1001FF08   
             03EF8803C7   
             84038FC401   
             17E402A3FC   
             0477FC043F   
             FC0ABFFC07   
             FFF8007FE0   
             00FFC0017F   
             E0025FD001   
             8888007770   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  125


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             00000000     
    00002F32              __$tank2:                        ; static: tank2
    00002F32 00180001E7             .DATA.B     H'00,H'18,H'00,H'01,H'E7,H'00,H'02,H'18,H'E0,H'01,H'85,H'F0,H'00,H'63,H'10,H'01,
             000218E001 +                       H'D1,H'08,H'02,H'2A,H'88,H'02,H'46,H'84,H'02,H'8C,H'44,H'01,H'16,H'24,H'02,H'A2,
             85F0006310 +                       H'1C,H'04,H'55,H'04,H'04,H'28,H'C4,H'0A,H'A0,H'24,H'07,H'C7,H'D8,H'00,H'7E,H'40,
             01D108022A +                       H'00,H'41,H'20,H'00,H'80,H'D0,H'01,H'5D,H'48,H'02,H'22,H'30,H'01,H'DD,H'C0,H'00,
             8802468402 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'18,H'00,H'01,H'E7,H'00,H'03,H'FF,
             8C44011624 +                       H'E0,H'01,H'FF,H'F0,H'00,H'7F,H'10,H'01,H'FF,H'08,H'03,H'EF,H'88,H'03,H'C7,H'84,
             02A21C0455 +                       H'03,H'8F,H'C4,H'01,H'17,H'E4,H'02,H'A3,H'FC,H'04,H'77,H'FC,H'04,H'3F,H'FC,H'0A,
             040428C40A +                       H'BF,H'FC,H'07,H'FF,H'D8,H'00,H'7F,H'C0,H'00,H'7F,H'E0,H'00,H'FF,H'D0,H'01,H'7F,
             A02407C7D8 +                       H'48,H'02,H'22,H'30,H'01,H'DD,H'C0,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             007E400041   
             200080D001   
             5D48022230   
             01DDC00000   
             0000000000   
             0000001800   
             01E70003FF   
             E001FFF000   
             7F1001FF08   
             03EF8803C7   
             84038FC401   
             17E402A3FC   
             0477FC043F   
             FC0ABFFC07   
             FFD8007FC0   
             007FE000FF   
             D0017F4802   
             223001DDC0   
             0000000000   
             00000000     
    00002FC2              __$tank3:                        ; static: tank3
    00002FC2 00180001E7             .DATA.B     H'00,H'18,H'00,H'01,H'E7,H'00,H'02,H'18,H'E0,H'01,H'85,H'F0,H'00,H'63,H'10,H'01,
             000218E001 +                       H'D1,H'08,H'02,H'2A,H'88,H'02,H'46,H'84,H'5A,H'8C,H'44,H'A5,H'16,H'24,H'80,H'A2,
             85F0006310 +                       H'1C,H'BB,H'54,H'04,H'65,H'1E,H'04,H'A1,H'11,H'84,H'81,H'10,H'78,H'A3,H'18,H'00,
             01D108022A +                       H'4E,H'A8,H'00,H'50,H'40,H'00,H'20,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             880246845A +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'18,H'00,H'01,H'FF,H'00,H'03,H'FF,
             8C44A51624 +                       H'E0,H'01,H'FF,H'F0,H'00,H'7F,H'10,H'01,H'FF,H'08,H'03,H'EF,H'88,H'03,H'C7,H'84,
             80A21CBB54 +                       H'5B,H'8F,H'C4,H'BF,H'17,H'E4,H'9F,H'A3,H'FC,H'BF,H'57,H'FC,H'7F,H'1F,H'FC,H'BF,
             04651E04A1 +                       H'11,H'FC,H'9F,H'10,H'78,H'BF,H'18,H'00,H'5E,H'A8,H'00,H'50,H'40,H'00,H'20,H'00,
             1184811078 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             A318004EA8   
             0050400020   
             0000000000   
             0000000000   
             0000000000   
             0000001800   
             01FF0003FF   
             E001FFF000   
             7F1001FF08   
             03EF8803C7   
             845B8FC4BF   
             17E49FA3FC   
             BF57FC7F1F   
             FCBF11FC9F   
             1078BF1800   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  126


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             5EA8005040   
             0020000000   
             0000000000   
             0000000000   
             00000000     
    00003052              __$tank4:                        ; static: tank4
    00003052 00180001E7             .DATA.B     H'00,H'18,H'00,H'01,H'E7,H'00,H'02,H'18,H'E0,H'01,H'85,H'F0,H'00,H'63,H'10,H'01,
             000218E001 +                       H'D1,H'08,H'02,H'2A,H'88,H'02,H'46,H'84,H'5A,H'8C,H'44,H'A5,H'16,H'24,H'80,H'A2,
             85F0006310 +                       H'1C,H'BB,H'54,H'04,H'65,H'1E,H'04,H'A1,H'11,H'84,H'81,H'10,H'78,H'A3,H'18,H'00,
             01D108022A +                       H'4E,H'A8,H'00,H'51,H'50,H'00,H'21,H'50,H'00,H'01,H'10,H'00,H'00,H'A0,H'00,H'00,
             880246845A +                       H'A0,H'00,H'00,H'40,H'00,H'00,H'00,H'00,H'00,H'18,H'00,H'01,H'FF,H'00,H'03,H'FF,
             8C44A51624 +                       H'E0,H'01,H'FF,H'F0,H'00,H'7F,H'10,H'01,H'FF,H'08,H'03,H'EF,H'88,H'03,H'C7,H'84,
             80A21CBB54 +                       H'5B,H'8F,H'C4,H'BF,H'17,H'E4,H'9F,H'A3,H'FC,H'BF,H'57,H'FC,H'7F,H'1F,H'FC,H'BF,
             04651E04A1 +                       H'11,H'FC,H'9F,H'10,H'78,H'BF,H'18,H'00,H'5E,H'A8,H'00,H'51,H'50,H'00,H'21,H'50,
             1184811078 +                       H'00,H'01,H'10,H'00,H'00,H'A0,H'00,H'00,H'A0,H'00,H'00,H'40,H'00,H'00,H'00,H'00
             A318004EA8   
             0051500021   
             5000011000   
             00A00000A0   
             0000400000   
             0000001800   
             01FF0003FF   
             E001FFF000   
             7F1001FF08   
             03EF8803C7   
             845B8FC4BF   
             17E49FA3FC   
             BF57FC7F1F   
             FCBF11FC9F   
             1078BF1800   
             5EA8005150   
             0021500001   
             100000A000   
             00A0000040   
             00000000     
    000030E2              __$tank5:                        ; static: tank5
    000030E2 00180001E7             .DATA.B     H'00,H'18,H'00,H'01,H'E7,H'00,H'02,H'18,H'E0,H'01,H'85,H'F0,H'00,H'63,H'10,H'01,
             000218E001 +                       H'D1,H'08,H'02,H'2A,H'88,H'02,H'46,H'84,H'5A,H'8C,H'44,H'A5,H'16,H'24,H'80,H'A2,
             85F0006310 +                       H'1C,H'BB,H'54,H'04,H'65,H'1E,H'04,H'A1,H'11,H'84,H'81,H'10,H'78,H'A3,H'18,H'00,
             01D108022A +                       H'4E,H'A8,H'00,H'52,H'E8,H'00,H'22,H'48,H'00,H'01,H'10,H'00,H'01,H'10,H'00,H'00,
             880246845A +                       H'A0,H'00,H'00,H'40,H'00,H'00,H'00,H'00,H'00,H'18,H'00,H'01,H'FF,H'00,H'03,H'FF,
             8C44A51624 +                       H'E0,H'01,H'FF,H'F0,H'00,H'7F,H'10,H'01,H'FF,H'08,H'03,H'EF,H'88,H'03,H'C7,H'84,
             80A21CBB54 +                       H'5B,H'8F,H'C4,H'BF,H'17,H'E4,H'9F,H'A3,H'FC,H'BF,H'57,H'FC,H'7F,H'1F,H'FC,H'BF,
             04651E04A1 +                       H'11,H'FC,H'9F,H'10,H'78,H'BF,H'18,H'00,H'5E,H'A8,H'00,H'52,H'E8,H'00,H'22,H'48,
             1184811078 +                       H'00,H'01,H'10,H'00,H'01,H'10,H'00,H'00,H'A0,H'00,H'00,H'40,H'00,H'00,H'00,H'00
             A318004EA8   
             0052E80022   
             4800011000   
             01100000A0   
             0000400000   
             0000001800   
             01FF0003FF   
             E001FFF000   
             7F1001FF08   
             03EF8803C7   
             845B8FC4BF   
             17E49FA3FC   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  127


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             BF57FC7F1F   
             FCBF11FC9F   
             1078BF1800   
             5EA80052E8   
             0022480001   
             1000011000   
             00A0000040   
             00000000     
    00003172              __$tank1Alpha:                   ; static: tank1Alpha
    00003172 FFE7FFFE00             .DATA.B     H'FF,H'E7,H'FF,H'FE,H'00,H'FF,H'FC,H'00,H'1F,H'FE,H'00,H'0F,H'FF,H'80,H'0F,H'FE,
             FFFC001FFE +                       H'00,H'07,H'FC,H'00,H'07,H'FC,H'00,H'03,H'FC,H'00,H'03,H'FE,H'00,H'03,H'FC,H'00,
             000FFF800F +                       H'03,H'F8,H'00,H'03,H'F8,H'00,H'03,H'F0,H'00,H'03,H'F8,H'00,H'07,H'FF,H'80,H'1F,
             FE0007FC00 +                       H'FF,H'00,H'3F,H'FE,H'00,H'1F,H'FC,H'00,H'0F,H'FE,H'00,H'07,H'FF,H'88,H'8F,H'FF,
             07FC0003FC +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0003FE0003   
             FC0003F800   
             03F80003F0   
             0003F80007   
             FF801FFF00   
             3FFE001FFC   
             000FFE0007   
             FF888FFFFF   
             FFFFFFFFFF   
             FFFF         
    000031BA              __$tank2Alpha:                   ; static: tank2Alpha
    000031BA FFE7FFFE00             .DATA.B     H'FF,H'E7,H'FF,H'FE,H'00,H'FF,H'FC,H'00,H'1F,H'FE,H'00,H'0F,H'FF,H'80,H'0F,H'FE,
             FFFC001FFE +                       H'00,H'07,H'FC,H'00,H'07,H'FC,H'00,H'03,H'FC,H'00,H'03,H'FE,H'00,H'03,H'FC,H'00,
             000FFF800F +                       H'03,H'F8,H'00,H'03,H'F8,H'00,H'03,H'F0,H'00,H'03,H'F8,H'00,H'27,H'FF,H'80,H'3F,
             FE0007FC00 +                       H'FF,H'80,H'1F,H'FF,H'00,H'0F,H'FE,H'00,H'07,H'FC,H'00,H'0F,H'FE,H'22,H'3F,H'FF,
             07FC0003FC +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0003FE0003   
             FC0003F800   
             03F80003F0   
             0003F80027   
             FF803FFF80   
             1FFF000FFE   
             0007FC000F   
             FE223FFFFF   
             FFFFFFFFFF   
             FFFF         
    00003202              __$tank3Alpha:                   ; static: tank3Alpha
    00003202 FFE7FFFE00             .DATA.B     H'FF,H'E7,H'FF,H'FE,H'00,H'FF,H'FC,H'00,H'1F,H'FE,H'00,H'0F,H'FF,H'80,H'0F,H'FE,
             FFFC001FFE +                       H'00,H'07,H'FC,H'00,H'07,H'FC,H'00,H'03,H'A4,H'00,H'03,H'00,H'00,H'03,H'00,H'00,
             000FFF800F +                       H'03,H'00,H'00,H'03,H'80,H'00,H'03,H'00,H'0E,H'03,H'00,H'0F,H'87,H'00,H'07,H'FF,
             FE0007FC00 +                       H'81,H'17,H'FF,H'8F,H'BF,H'FF,H'DF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             07FC0003A4 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             0003000003   
             0000030000   
             0380000300   
             0E03000F87   
             0007FF8117   
             FF8FBFFFDF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    0000324A              __$tank4Alpha:                   ; static: tank4Alpha




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  128


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000324A FFE7FFFE00             .DATA.B     H'FF,H'E7,H'FF,H'FE,H'00,H'FF,H'FC,H'00,H'1F,H'FE,H'00,H'0F,H'FF,H'80,H'0F,H'FE,
             FFFC001FFE +                       H'00,H'07,H'FC,H'00,H'07,H'FC,H'00,H'03,H'A4,H'00,H'03,H'00,H'00,H'03,H'00,H'00,
             000FFF800F +                       H'03,H'00,H'00,H'03,H'80,H'00,H'03,H'00,H'0E,H'03,H'00,H'0F,H'87,H'00,H'07,H'FF,
             FE0007FC00 +                       H'80,H'07,H'FF,H'8E,H'0F,H'FF,H'DE,H'0F,H'FF,H'FE,H'0F,H'FF,H'FF,H'1F,H'FF,H'FF,
             07FC0003A4 +                       H'1F,H'FF,H'FF,H'BF,H'FF,H'FF,H'FF,H'FF
             0003000003   
             0000030000   
             0380000300   
             0E03000F87   
             0007FF8007   
             FF8E0FFFDE   
             0FFFFE0FFF   
             FF1FFFFF1F   
             FFFFBFFFFF   
             FFFF         
    00003292              __$tank5Alpha:                   ; static: tank5Alpha
    00003292 FFE7FFFE00             .DATA.B     H'FF,H'E7,H'FF,H'FE,H'00,H'FF,H'FC,H'00,H'1F,H'FE,H'00,H'0F,H'FF,H'80,H'0F,H'FE,
             FFFC001FFE +                       H'00,H'07,H'FC,H'00,H'07,H'FC,H'00,H'03,H'A4,H'00,H'03,H'00,H'00,H'03,H'00,H'00,
             000FFF800F +                       H'03,H'00,H'00,H'03,H'80,H'00,H'03,H'00,H'0E,H'03,H'00,H'0F,H'87,H'00,H'07,H'FF,
             FE0007FC00 +                       H'80,H'07,H'FF,H'8C,H'07,H'FF,H'DC,H'07,H'FF,H'FE,H'0F,H'FF,H'FE,H'0F,H'FF,H'FF,
             07FC0003A4 +                       H'1F,H'FF,H'FF,H'BF,H'FF,H'FF,H'FF,H'FF
             0003000003   
             0000030000   
             0380000300   
             0E03000F87   
             0007FF8007   
             FF8C07FFDC   
             07FFFE0FFF   
             FE0FFFFF1F   
             FFFFBFFFFF   
             FFFF         
    000032DA              __$dragonMilieu:                 ; static: dragonMilieu
    000032DA FFE0000040             .DATA.B     H'FF,H'E0,H'00,H'00,H'40,H'97,H'80,H'00,H'30,H'88,H'40,H'00,H'0F,H'08,H'20,H'00,
             9780003088 +                       H'10,H'90,H'18,H'40,H'0F,H'20,H'67,H'A0,H'C4,H'93,H'80,H'10,H'3A,H'54,H'40,H'10,
             40000F0820 +                       H'04,H'49,H'A4,H'10,H'8F,H'89,H'9B,H'A0,H'82,H'48,H'00,H'40,H'02,H'48,H'06,H'80,
             0010901840 +                       H'3A,H'A4,H'19,H'00,H'C5,H'53,H'E0,H'00,H'00,H'8C,H'00,H'00,H'01,H'F0,H'00,H'00,
             0F2067A0C4 +                       H'FF,H'E0,H'00,H'00,H'7F,H'97,H'80,H'00,H'3F,H'88,H'40,H'00,H'0F,H'08,H'20,H'00,
             9380103A54 +                       H'1F,H'90,H'18,H'40,H'0F,H'20,H'67,H'A0,H'C7,H'93,H'80,H'10,H'FF,H'D7,H'C0,H'10,
             40100449A4 +                       H'FF,H'CF,H'E4,H'10,H'FF,H'8F,H'FF,H'A0,H'FF,H'CF,H'FF,H'C0,H'FF,H'CF,H'FF,H'80,
             108F899BA0 +                       H'FF,H'E7,H'F9,H'00,H'C5,H'F3,H'E0,H'00,H'00,H'FC,H'00,H'00,H'01,H'F0,H'00,H'00
             8248004002   
             4806803AA4   
             1900C553E0   
             00008C0000   
             01F00000FF   
             E000007F97   
             80003F8840   
             000F082000   
             1F9018400F   
             2067A0C793   
             8010FFD7C0   
             10FFCFE410   
             FF8FFFA0FF   
             CFFFC0FFCF   
             FF80FFE7F9   
             00C5F3E000   
             00FC000001   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  129


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             F00000       
    0000335A              __$dragonBas:                    ; static: dragonBas
    0000335A FFE0000040             .DATA.B     H'FF,H'E0,H'00,H'00,H'40,H'90,H'00,H'00,H'30,H'8F,H'80,H'00,H'0F,H'08,H'40,H'00,
             900000308F +                       H'10,H'88,H'20,H'00,H'0F,H'10,H'18,H'40,H'C4,H'A0,H'67,H'A0,H'3A,H'53,H'80,H'10,
             80000F0840 +                       H'04,H'54,H'40,H'10,H'8F,H'88,H'24,H'10,H'82,H'4B,H'5B,H'A0,H'02,H'4B,H'40,H'40,
             0010882000 +                       H'3A,H'A8,H'40,H'00,H'C5,H'54,H'92,H'00,H'00,H'8A,H'6D,H'00,H'01,H'F1,H'01,H'00,
             0F101840C4 +                       H'00,H'00,H'FE,H'00,H'FF,H'E0,H'00,H'00,H'7F,H'90,H'00,H'00,H'3F,H'8F,H'80,H'00,
             A067A03A53 +                       H'0F,H'08,H'40,H'00,H'1F,H'88,H'20,H'00,H'0F,H'10,H'18,H'40,H'C7,H'A0,H'67,H'A0,
             8010045440 +                       H'FB,H'D3,H'80,H'10,H'FF,H'D7,H'C0,H'10,H'FF,H'8F,H'E4,H'10,H'FF,H'CF,H'DB,H'A0,
             108F882410 +                       H'FF,H'CF,H'C0,H'40,H'FF,H'EF,H'C0,H'00,H'C5,H'F7,H'92,H'00,H'00,H'FB,H'FF,H'00,
             824B5BA002 +                       H'01,H'F1,H'FF,H'00,H'00,H'00,H'FE,H'00
             4B40403AA8   
             4000C55492   
             00008A6D00   
             01F1010000   
             00FE00FFE0   
             00007F9000   
             003F8F8000   
             0F0840001F   
             8820000F10   
             1840C7A067   
             A0FBD38010   
             FFD7C010FF   
             8FE410FFCF   
             DBA0FFCFC0   
             40FFEFC000   
             C5F7920000   
             FBFF0001F1   
             FF000000FE   
             00           
    000033E2              __$dragonHaut:                   ; static: dragonHaut
    000033E2 FFE7800040             .DATA.B     H'FF,H'E7,H'80,H'00,H'40,H'98,H'40,H'00,H'30,H'88,H'20,H'00,H'0F,H'10,H'18,H'40,
             9840003088 +                       H'10,H'A0,H'67,H'A0,H'0F,H'13,H'80,H'10,H'C4,H'94,H'40,H'10,H'3A,H'48,H'24,H'10,
             20000F1018 +                       H'04,H'4B,H'1B,H'A0,H'8F,H'8B,H'00,H'40,H'82,H'48,H'06,H'80,H'02,H'44,H'19,H'00,
             4010A067A0 +                       H'3A,H'A3,H'E0,H'00,H'C5,H'52,H'00,H'00,H'00,H'8C,H'00,H'00,H'01,H'F0,H'00,H'00,
             0F138010C4 +                       H'FF,H'E7,H'80,H'00,H'7F,H'98,H'40,H'00,H'3F,H'88,H'20,H'00,H'0F,H'10,H'18,H'40,
             9440103A48 +                       H'1F,H'A0,H'67,H'A0,H'0F,H'13,H'80,H'10,H'C7,H'97,H'C0,H'10,H'FF,H'CF,H'E4,H'10,
             2410044B1B +                       H'FF,H'CF,H'FF,H'A0,H'FF,H'8F,H'FF,H'C0,H'FF,H'CF,H'FF,H'80,H'FF,H'C7,H'F9,H'00,
             A08F8B0040 +                       H'FF,H'E3,H'E0,H'00,H'C5,H'F2,H'00,H'00,H'00,H'FC,H'00,H'00,H'01,H'F0,H'00,H'00
             8248068002   
             4419003AA3   
             E000C55200   
             00008C0000   
             01F00000FF   
             E780007F98   
             40003F8820   
             000F101840   
             1FA067A00F   
             138010C797   
             C010FFCFE4   
             10FFCFFFA0   
             FF8FFFC0FF   
             CFFF80FFC7   
             F900FFE3E0   
             00C5F20000   
             00FC000001   
             F00000       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  130


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003462              __$dragonMilieuAlpha:            ; static: dragonMilieuAlpha
    00003462 001FFFF080             .DATA.B     H'00,H'1F,H'FF,H'F0,H'80,H'08,H'7F,H'F0,H'C0,H'00,H'3F,H'F0,H'F0,H'00,H'1F,H'F0,
             087FF0C000 +                       H'E0,H'00,H'07,H'B0,H'F0,H'00,H'00,H'10,H'38,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             3FF0F0001F +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'30,H'00,H'00,H'00,H'70,
             F0E00007B0 +                       H'00,H'00,H'06,H'F0,H'3A,H'00,H'1F,H'F0,H'FF,H'03,H'FF,H'F0,H'FE,H'0F,H'FF,H'F0
             F000001038   
             0000000000   
             0000000000   
             0000000010   
             0000003000   
             0000700000   
             06F03A001F   
             F0FF03FFF0   
             FE0FFFF0     
    000034A2              __$dragonBasAlpha:               ; static: dragonBasAlpha
    000034A2 001FFFF080             .DATA.B     H'00,H'1F,H'FF,H'F0,H'80,H'0F,H'FF,H'F0,H'C0,H'00,H'7F,H'F0,H'F0,H'00,H'3F,H'F0,
             0FFFF0C000 +                       H'E0,H'00,H'1F,H'F0,H'F0,H'00,H'07,H'B0,H'38,H'00,H'00,H'10,H'00,H'00,H'00,H'00,
             7FF0F0003F +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'24,H'10,H'00,H'00,H'3F,H'B0,
             F0E0001FF0 +                       H'00,H'00,H'3F,H'F0,H'3A,H'08,H'6D,H'F0,H'FF,H'04,H'00,H'F0,H'FE,H'0E,H'00,H'F0,
             F00007B038 +                       H'FF,H'FF,H'01,H'F0
             0000100000   
             0000000000   
             0000000000   
             0000241000   
             003FB00000   
             3FF03A086D   
             F0FF0400F0   
             FE0E00F0FF   
             FF01F0       
    000034E6              __$dragonHautAlpha:              ; static: dragonHautAlpha
    000034E6 00187FF080             .DATA.B     H'00,H'18,H'7F,H'F0,H'80,H'00,H'3F,H'F0,H'C0,H'00,H'1F,H'F0,H'F0,H'00,H'07,H'B0,
             003FF0C000 +                       H'E0,H'00,H'00,H'10,H'F0,H'00,H'00,H'00,H'38,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             1FF0F00007 +                       H'00,H'00,H'00,H'10,H'00,H'00,H'00,H'30,H'00,H'00,H'00,H'70,H'00,H'00,H'06,H'F0,
             B0E0000010 +                       H'00,H'00,H'1F,H'F0,H'3A,H'01,H'FF,H'F0,H'FF,H'03,H'FF,H'F0,H'FE,H'0F,H'FF,H'F0
             F000000038   
             0000000000   
             0000000000   
             1000000030   
             0000007000   
             0006F00000   
             1FF03A01FF   
             F0FF03FFF0   
             FE0FFFF0     
    00003526              __$glace:                        ; static: glace
    00003526 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'03,H'C0,H'0C,H'30,H'10,H'08,H'20,H'78,H'39,H'84,
             0003C00C30 +                       H'46,H'04,H'41,H'04,H'41,H'12,H'92,H'82,H'84,H'41,H'84,H'41,H'78,H'3E,H'07,H'C0,
             1008207839 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0F,H'F0,H'10,H'08,H'22,H'78,H'39,H'84,
             8446044104 +                       H'46,H'04,H'41,H'04,H'49,H'12,H'92,H'92,H'84,H'41,H'84,H'41,H'78,H'3E,H'07,H'C0,
             4112928284 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'1F,H'F0,H'22,H'08,H'39,H'F4,
             418441783E +                       H'46,H'04,H'41,H'04,H'49,H'12,H'92,H'92,H'E4,H'49,H'84,H'45,H'79,H'3E,H'07,H'C0,
             07C0000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'38,H'3F,H'C4,
             0000000000 +                       H'66,H'AC,H'51,H'24,H'49,H'12,H'92,H'92,H'E4,H'49,H'86,H'45,H'79,H'3E,H'07,H'C0
             0FF0100822   
             7839844604   
             4104491292   
             9284418441   
             783E07C000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  131


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             000000001F   
             F0220839F4   
             4604410449   
             129292E449   
             8445793E07   
             C000000000   
             0000000000   
             0000000038   
             3FC466AC51   
             2449129292   
             E449864579   
             3E07C0       
    000035A6              __$glaceAlpha:                   ; static: glaceAlpha
    000035A6 FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'1F,H'F0,H'0F,H'E0,H'07,H'C0,H'07,H'C0,H'03,
             FFFC1FF00F +                       H'80,H'03,H'80,H'03,H'80,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'80,H'01,H'F8,H'3F,
             E007C007C0 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F0,H'0F,H'E0,H'07,H'C0,H'07,H'C0,H'03,
             0380038003 +                       H'80,H'03,H'80,H'03,H'80,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'80,H'01,H'F8,H'3F,
             8001000100 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'E0,H'0F,H'C0,H'07,H'C0,H'03,
             0000008001 +                       H'80,H'03,H'80,H'03,H'80,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'80,H'01,H'F8,H'3F,
             F83FFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'C7,H'C0,H'03,
             FFFFFFFFFF +                       H'80,H'03,H'80,H'03,H'80,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'80,H'01,H'F8,H'3F
             F00FE007C0   
             07C0038003   
             8003800100   
             0100000000   
             8001F83FFF   
             FFFFFFFFFF   
             FFFFFFFFE0   
             0FC007C003   
             8003800380   
             0100010000   
             00008001F8   
             3FFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFC7   
             C003800380   
             0380010001   
             0000000080   
             01F83F       
    00003626              __$gadgets:                      ; static: gadgets
    00003626 7FFE800180             .DATA.B     H'7F,H'FE,H'80,H'01,H'80,H'01,H'8E,H'01,H'9A,H'01,H'9F,H'81,H'91,H'41,H'9E,H'A1,
             018E019A01 +                       H'90,H'51,H'90,H'29,H'90,H'09,H'8F,H'F1,H'80,H'01,H'80,H'01,H'80,H'01,H'7F,H'FE,
             9F8191419E +                       H'7F,H'FE,H'80,H'01,H'87,H'E1,H'88,H'11,H'92,H'09,H'A6,H'05,H'A0,H'05,H'A0,H'FD,
             A190519029 +                       H'BF,H'05,H'A0,H'05,H'A0,H'05,H'90,H'09,H'88,H'11,H'87,H'E1,H'80,H'01,H'7F,H'FE,
             90098FF180 +                       H'7F,H'FE,H'80,H'01,H'87,H'E1,H'88,H'11,H'97,H'E9,H'90,H'09,H'B2,H'2D,H'B1,H'4D,
             0180018001 +                       H'B0,H'8D,H'B2,H'2D,H'91,H'49,H'90,H'89,H'88,H'11,H'87,H'E1,H'80,H'01,H'7F,H'FE,
             7FFE7FFE80 +                       H'7F,H'FE,H'80,H'01,H'80,H'01,H'80,H'C1,H'8F,H'E1,H'9C,H'11,H'B4,H'19,H'A4,H'DD,
             0187E18811 +                       H'B4,H'19,H'9C,H'11,H'8F,H'E1,H'80,H'C1,H'80,H'01,H'80,H'01,H'80,H'01,H'7F,H'FE,
             9209A605A0 +                       H'7F,H'FE,H'80,H'01,H'80,H'01,H'87,H'E1,H'8C,H'31,H'9E,H'79,H'97,H'E9,H'93,H'C9,
             05A0FDBF05 +                       H'93,H'C9,H'97,H'E9,H'9E,H'79,H'8C,H'31,H'87,H'E1,H'80,H'01,H'80,H'01,H'7F,H'FE,
             A005A00590 +                       H'7F,H'FE,H'80,H'01,H'83,H'01,H'8C,H'81,H'91,H'41,H'AD,H'21,H'A2,H'21,H'A1,H'D1,
             09881187E1 +                       H'A2,H'11,H'A5,H'11,H'A4,H'89,H'A4,H'89,H'9C,H'79,H'83,H'81,H'80,H'01,H'7F,H'FE,
             80017FFE7F +                       H'7F,H'FE,H'80,H'01,H'80,H'01,H'87,H'E1,H'8A,H'51,H'94,H'29,H'9B,H'D9,H'93,H'49,
             FE800187E1 +                       H'93,H'C9,H'9B,H'D9
             881197E990   
             09B22DB14D   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  132


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             B08DB22D91   
             4990898811   
             87E180017F   
             FE7FFE8001   
             800180C18F   
             E19C11B419   
             A4DDB4199C   
             118FE180C1   
             8001800180   
             017FFE7FFE   
             8001800187   
             E18C319E79   
             97E993C993   
             C997E99E79   
             8C3187E180   
             0180017FFE   
             7FFE800183   
             018C819141   
             AD21A221A1   
             D1A211A511   
             A489A4899C   
             7983818001   
             7FFE7FFE80   
             01800187E1   
             8A5194299B   
             D9934993C9   
             9BD9         
    000036FA 94298A5187             .DATA.B     H'94,H'29,H'8A,H'51,H'87,H'E1,H'80,H'01,H'80,H'01,H'7F,H'FE,H'7F,H'FE,H'80,H'01,
             E180018001 +                       H'80,H'01,H'87,H'E1,H'88,H'11,H'92,H'49,H'96,H'69,H'96,H'69,H'96,H'69,H'97,H'E9,
             7FFE7FFE80 +                       H'93,H'C9,H'88,H'11,H'87,H'E1,H'80,H'01,H'80,H'01,H'7F,H'FE,H'7F,H'FE,H'80,H'01,
             01800187E1 +                       H'8F,H'F1,H'90,H'49,H'AE,H'05,H'BB,H'75,H'B1,H'DD,H'BB,H'AD,H'AE,H'DD,H'A7,H'75,
             8811924996 +                       H'AD,H'85,H'A8,H'B5,H'9D,H'89,H'8F,H'F1,H'80,H'01,H'7F,H'FE,H'7F,H'FE,H'80,H'01,
             6996699669 +                       H'80,H'01,H'8E,H'71,H'92,H'49,H'92,H'49,H'A4,H'25,H'BC,H'3D,H'BC,H'3D,H'BC,H'3D,
             97E993C988 +                       H'BE,H'7D,H'9F,H'F9,H'8F,H'F1,H'87,H'E1,H'80,H'01,H'7F,H'FE,H'7F,H'FE,H'80,H'01,
             1187E18001 +                       H'80,H'01,H'87,H'E1,H'88,H'91,H'91,H'C9,H'92,H'09,H'93,H'09,H'90,H'C9,H'90,H'49,
             80017FFE7F +                       H'93,H'89,H'89,H'11,H'87,H'E1,H'80,H'01,H'80,H'01,H'7F,H'FE,H'7F,H'FE,H'80,H'01,
             FE80018FF1 +                       H'80,H'01,H'80,H'01,H'80,H'79,H'80,H'C5,H'95,H'55,H'83,H'55,H'A5,H'55,H'80,H'C5,
             9049AE05BB +                       H'80,H'79,H'80,H'01,H'80,H'01,H'80,H'01,H'80,H'01,H'7F,H'FE
             75B1DDBBAD   
             AEDDA775AD   
             85A8B59D89   
             8FF180017F   
             FE7FFE8001   
             80018E7192   
             499249A425   
             BC3DBC3DBC   
             3DBE7D9FF9   
             8FF187E180   
             017FFE7FFE   
             8001800187   
             E1889191C9   
             9209930990   
             C990499389   
             891187E180   
             0180017FFE   
             7FFE800180   
             0180018079   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  133


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             80C5955583   
             55A55580C5   
             8079800180   
             0180018001   
             7FFE         
    000037A6              __$levier:                       ; static: levier
    000037A6 07E01C3830             .DATA.B     H'07,H'E0,H'1C,H'38,H'30,H'0C,H'20,H'04,H'66,H'06,H'44,H'02,H'40,H'02,H'40,H'02,
             0C20046606 +                       H'C0,H'03,H'E0,H'07,H'E0,H'07,H'F0,H'0F,H'FC,H'3F,H'E7,H'E7,H'E3,H'C7,H'FF,H'FF,
             4402400240 +                       H'F3,H'CF,H'F3,H'CF,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,
             02C003E007 +                       H'F0,H'0F,H'F0,H'0F,H'FF,H'FF,H'E0,H'07,H'E0,H'07,H'E0,H'07,H'E0,H'07,H'C0,H'03,
             E007F00FFC +                       H'C0,H'03,H'C0,H'03,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'3F,H'F0,H'0F,H'E0,H'07,
             3FE7E7E3C7 +                       H'E6,H'07,H'C4,H'03,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'E0,H'07,H'E0,H'07,H'F0,H'0F,
             FFFFF3CFF3 +                       H'FC,H'3F,H'F7,H'EF,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'FF,H'FF,
             CFF00FF00F +                       H'E0,H'07,H'E0,H'07,H'E0,H'07,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'FF,H'FF,H'FF,H'FF
             F00FF00FF0   
             0FF00FF00F   
             F00FFFFFE0   
             07E007E007   
             E007C003C0   
             03C003FFFF   
             FFFFFFFFFC   
             3FF00FE007   
             E607C403C0   
             03C003C003   
             E007E007F0   
             0FFC3FF7EF   
             F00FF00FF0   
             0FF00FF00F   
             FFFFE007E0   
             07E007C003   
             C003C003FF   
             FFFFFF       
    00003826 0000001001             .DATAB.B    16,0
             00           
    00003836 FFFFFFFFC0             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'E0,H'07,H'E0,H'07,H'E7,H'E7,
             03C003C003 +                       H'FC,H'3F,H'F0,H'0F,H'E0,H'07,H'E6,H'07,H'C4,H'03,H'C0,H'03,H'C0,H'03,H'C0,H'03,
             E007E007E7 +                       H'E0,H'07,H'E0,H'07,H'F0,H'0F,H'FC,H'3F,H'E7,H'E7,H'E0,H'07,H'E0,H'07,H'C0,H'03,
             E7FC3FF00F +                       H'C0,H'03,H'C0,H'03,H'FF,H'FF,H'FF,H'FF
             E007E607C4   
             03C003C003   
             C003E007E0   
             07F00FFC3F   
             E7E7E007E0   
             07C003C003   
             C003FFFFFF   
             FF           
    0000386E 0000001001             .DATAB.B    16,0
             00           
    0000387E FFFFFFFFC0             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'E0,H'07,H'E0,H'07,H'E0,H'07,
             03C003C003 +                       H'FF,H'FF,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F7,H'EF,H'FC,H'3F,
             E007E007E0 +                       H'F0,H'0F,H'E0,H'07,H'E6,H'07,H'C4,H'03,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'E0,H'07,
             07FFFFF00F +                       H'E0,H'07,H'F0,H'0F,H'FC,H'3F,H'FF,H'FF
             F00FF00FF0   
             0FF00FF7EF   
             FC3FF00FE0   
             07E607C403   
             C003C003C0   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  134


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             03E007E007   
             F00FFC3FFF   
             FF           
    000038B6 0000001001             .DATAB.B    16,0
             00           
    000038C6 FFFFFFFFC0             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'C0,H'03,H'C0,H'03,H'C0,H'03,H'E0,H'07,H'E0,H'07,H'E0,H'07,
             03C003C003 +                       H'E0,H'07,H'FF,H'FF,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,H'F0,H'0F,
             E007E007E0 +                       H'F0,H'0F,H'F0,H'0F,H'F3,H'CF,H'F3,H'CF,H'FF,H'FF,H'E3,H'C7,H'E7,H'E7,H'FC,H'3F,
             07E007FFFF +                       H'F0,H'0F,H'E0,H'07,H'E6,H'07,H'C4,H'03,H'40,H'02,H'40,H'02,H'40,H'02,H'60,H'06,
             F00FF00FF0 +                       H'20,H'04,H'30,H'0C,H'1C,H'38,H'07,H'E0
             0FF00FF00F   
             F00FF00FF0   
             0FF3CFF3CF   
             FFFFE3C7E7   
             E7FC3FF00F   
             E007E607C4   
             0340024002   
             4002600620   
             04300C1C38   
             07E0         
    0000390E              __$lotsTirage:                   ; static: lotsTirage
    0000390E 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'03,
             0000000000 +                       H'C0,H'00,H'04,H'20,H'00,H'05,H'20,H'00,H'04,H'20,H'00,H'04,H'20,H'00,H'03,H'C0,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             03C0000420 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'03,H'C0,H'00,H'04,H'20,H'00,H'05,
             0005200004 +                       H'20,H'00,H'04,H'20,H'00,H'04,H'20,H'00,H'03,H'C0,H'00,H'00,H'00,H'00,H'1E,H'3C,
             2000042000 +                       H'00,H'21,H'42,H'00,H'29,H'52,H'00,H'21,H'42,H'00,H'21,H'42,H'00,H'1E,H'3C,H'00,
             03C0000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'0F,H'3C,H'00,H'1E,
             0000000000 +                       H'C2,H'00,H'21,H'D2,H'00,H'29,H'7A,H'00,H'21,H'86,H'00,H'2F,H'A4,H'00,H'10,H'84,
             0000000000 +                       H'00,H'34,H'86,H'00,H'50,H'FE,H'00,H'50,H'A1,H'00,H'4F,H'29,H'00,H'42,H'21,H'00,
             0000000000 +                       H'3D,H'E1,H'00,H'00,H'1E,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'07,H'00,H'00,H'28,H'00,H'00,H'70,H'00,H'00,H'B8,H'00,H'01,H'70,
             000003C000 +                       H'00,H'03,H'E0,H'00,H'07,H'C0,H'00,H'0F,H'80,H'00,H'1F,H'00,H'00,H'3E,H'00,H'00,
             0420000520 +                       H'7C,H'00,H'00,H'38,H'00,H'00,H'10,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0004200004 +                       H'60,H'00,H'00,H'80
             200003C000   
             0000001E3C   
             0021420029   
             5200214200   
             2142001E3C   
             0000000000   
             0000000000   
             0000000F3C   
             001EC20021   
             D200297A00   
             2186002FA4   
             0010840034   
             860050FE00   
             50A1004F29   
             004221003D   
             E100001E00   
             0000000000   
             0000000000   
             0000000700   
             0028000070   
             0000B80001   
             700003E000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  135


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             07C0000F80   
             001F00003E   
             00007C0000   
             3800001000   
             0000000000   
             0000006000   
             0080         
    000039E2 0000800001             .DATA.B     H'00,H'00,H'80,H'00,H'01,H'C0,H'00,H'07,H'F0,H'00,H'0F,H'F8,H'00,H'19,H'FC,H'00,
             C00007F000 +                       H'1B,H'FC,H'00,H'3F,H'FE,H'00,H'3F,H'FE,H'00,H'3F,H'FE,H'00,H'1F,H'FC,H'00,H'1F,
             0FF80019FC +                       H'FC,H'00,H'0F,H'F8,H'00,H'07,H'F0,H'00,H'01,H'C0,H'00,H'01,H'C0,H'00,H'0E,H'38,
             001BFC003F +                       H'00,H'30,H'06,H'00,H'41,H'09,H'00,H'55,H'29,H'00,H'3F,H'FE,H'00,H'01,H'40,H'00,
             FE003FFE00 +                       H'1F,H'7C,H'00,H'61,H'43,H'00,H'3F,H'FE,H'00,H'01,H'40,H'00,H'02,H'20,H'00,H'02,
             3FFE001FFC +                       H'A0,H'00,H'04,H'90,H'00,H'39,H'6E,H'00,H'46,H'11,H'00,H'FF,H'FF,H'80,H'00,H'00,
             001FFC000F +                       H'00,H'00,H'00,H'00,H'1E,H'3C,H'00,H'3F,H'7E,H'00,H'67,H'FF,H'00,H'6F,H'FF,H'00,
             F80007F000 +                       H'7F,H'FF,H'00,H'7F,H'FF,H'00,H'7F,H'FF,H'00,H'3F,H'FE,H'00,H'1F,H'FC,H'00,H'0F,
             01C00001C0 +                       H'F8,H'00,H'07,H'F0,H'00,H'03,H'E0,H'00,H'01,H'C0,H'00,H'00,H'80,H'00,H'00,H'00,
             000E380030 +                       H'00,H'00,H'00,H'00,H'01,H'C0,H'00,H'02,H'20,H'00,H'05,H'50,H'00,H'04,H'90,H'00,
             0600410900 +                       H'05,H'50,H'00,H'02,H'20,H'00,H'01,H'C0,H'00,H'38,H'0E,H'00,H'44,H'11,H'00,H'AA,
             5529003FFE +                       H'2A,H'80,H'92,H'24,H'80,H'AA,H'2A,H'80,H'44,H'11,H'00,H'38,H'0E,H'00,H'00,H'00,
             000140001F +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             7C00614300 +                       H'78,H'00,H'00,H'84
             3FFE000140   
             0002200002   
             A000049000   
             396E004611   
             00FFFF8000   
             0000000000   
             1E3C003F7E   
             0067FF006F   
             FF007FFF00   
             7FFF007FFF   
             003FFE001F   
             FC000FF800   
             07F00003E0   
             0001C00000   
             8000000000   
             00000001C0   
             0002200005   
             5000049000   
             0550000220   
             0001C00038   
             0E00441100   
             AA2A809224   
             80AA2A8044   
             1100380E00   
             0000000000   
             0000000000   
             0000000000   
             0000007800   
             0084         
    00003AB6 0E00A41100             .DATA.B     H'0E,H'00,H'A4,H'11,H'00,H'84,H'11,H'00,H'78,H'02,H'00,H'85,H'44,H'00,H'A4,H'88,
             8411007802 +                       H'00,H'85,H'5F,H'00,H'84,H'00,H'00,H'78,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             00854400A4 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'3F,
             8800855F00 +                       H'F8,H'00,H'40,H'04,H'00,H'51,H'12,H'00,H'48,H'89,H'00,H'44,H'45,H'00,H'48,H'89,
             8400007800 +                       H'00,H'51,H'12,H'00,H'40,H'04,H'00,H'3F,H'F8,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE  136


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             00003FF800   
             4004005112   
             0048890044   
             4500488900   
             5112004004   
             003FF80000   
             0000000000   
             0000000000   
             00           
    00003B0C              __$trefle:                       ; static: trefle
    00003B0C 03E0000C18             .DATA.B     H'03,H'E0,H'00,H'0C,H'18,H'00,H'10,H'04,H'00,H'27,H'72,H'00,H'4F,H'79,H'00,H'4F,
             0010040027 +                       H'F9,H'00,H'8F,H'F8,H'80,H'83,H'E0,H'80,H'8F,H'F8,H'80,H'8F,H'F8,H'80,H'8F,H'78,
             72004F7900 +                       H'80,H'47,H'71,H'00,H'40,H'81,H'00,H'20,H'82,H'00,H'11,H'04,H'00,H'0C,H'18,H'00,
             4FF9008FF8 +                       H'03,H'E0,H'00
             8083E0808F   
             F8808FF880   
             8F78804771   
             0040810020   
             8200110400   
             0C180003E0   
             00           
    00003B3F 00000001               .RES.B      1
    00003B40              L681:
    00003B40 2564                   .SDATA      "%d"
    00003B42 00                     .DATA.B     H'00
D   00000000              __$SysCallCode:                  ; static: SysCallCode
    00000000 D201422B60             .DATA.L     H'D201422B,H'60F20000,H'80010070
             F200008001   
             0070         
    0000000C              __$SysCall:                      ; static: SysCall
    0000000C <00000000>             .DATA.L     __$SysCallCode
    00000010              __$exeStatut:                    ; static: exeStatut
    00000010 00000000               .DATA.L     H'00000000
    00000014              __$position:                     ; static: position
    00000014 00000008               .DATA.L     H'00000008
    00000018              __$direction:                    ; static: direction
    00000018 00000000               .DATA.L     H'00000000
    0000001C              __$angle:                        ; static: angle
    0000001C 00000000               .DATA.L     H'00000000
    00000020              __$phase:                        ; static: phase
    00000020 00000000               .DATA.L     H'00000000
    00000024              __$vitesse:                      ; static: vitesse
    00000024 00000000               .DATA.L     H'00000000
    00000028              __$acceleration:                 ; static: acceleration
    00000028 00000000               .DATA.L     H'00000000
    0000002C              __$frameDepart:                  ; static: frameDepart
    0000002C 00000000               .DATA.L     H'00000000
    00000030              __$frameActuelle:                ; static: frameActuelle
    00000030 00000000               .DATA.L     H'00000000
    00000034              __$frame$670:                    ; static: frame
    00000034 FF                     .DATA.B     H'FF
B   00000000              __$boxPos:                       ; static: boxPos
    00000000 00000004               .RES.L      1






SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 30-Jan-2015 19:14:58  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         3




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      559



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00001E88 Byte(s)
CONSTANT SECTION (C):                               00003B43 Byte(s)
DATA     SECTION (D):                               00000035 Byte(s)
BSS      SECTION (B):                               00000004 Byte(s)

 TOTAL PROGRAM SIZE: 00005A04 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           43
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           8
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           338






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ALEX\AppData\Local\Temp\hmk35EF.tmp 

